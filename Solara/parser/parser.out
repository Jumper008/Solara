Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    MULTI_COMMENT
    SINGLE_COMMENT

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID create_global_fun COLON VARS COLON VAR_DEFINITIONS SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION
Rule 2     create_global_fun -> <empty>
Rule 3     VAR_DEFINITIONS -> TYPE store_type A TICK VAR_DEFINITIONS
Rule 4     VAR_DEFINITIONS -> empty
Rule 5     store_type -> <empty>
Rule 6     A -> ID check_var_duplicates B D
Rule 7     check_var_duplicates -> <empty>
Rule 8     B -> EQUALS C assign_var_value
Rule 9     B -> empty
Rule 10    assign_var_value -> <empty>
Rule 11    C -> EXPRESSION
Rule 12    C -> LIST_EXP
Rule 13    D -> COMMA A
Rule 14    D -> empty
Rule 15    S_BLOCK -> L_BRACE F R_BRACE
Rule 16    F -> S_STATUTE F
Rule 17    F -> empty
Rule 18    S_STATUTE -> VAR_DEFINITIONS
Rule 19    S_STATUTE -> STATUTE
Rule 20    SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK
Rule 21    check_sol_duplicates -> <empty>
Rule 22    STATUTE -> CONDITION
Rule 23    STATUTE -> CYCLE
Rule 24    STATUTE -> ASSIGNATION
Rule 25    S_TYPE -> VOID
Rule 26    S_TYPE -> TYPE
Rule 27    TYPE -> INT
Rule 28    TYPE -> FLOAT
Rule 29    TYPE -> CHAR
Rule 30    TYPE -> STRING
Rule 31    TYPE -> BOOL
Rule 32    TYPE -> LIST
Rule 33    EXPRESSION -> EXP G
Rule 34    G -> H EXP
Rule 35    G -> empty
Rule 36    H -> LESS_T
Rule 37    H -> GREATER_T
Rule 38    H -> GREATER_T_EQUALS
Rule 39    H -> LESS_T_EQUALS
Rule 40    H -> IS
Rule 41    H -> AND
Rule 42    H -> OR
Rule 43    H -> PERCENTAGE
Rule 44    EXP -> TERM I
Rule 45    I -> J EXP
Rule 46    I -> empty
Rule 47    J -> PLUS
Rule 48    J -> MINUS
Rule 49    TERM -> FACTOR K
Rule 50    K -> L TERM
Rule 51    K -> empty
Rule 52    L -> MULTIPLY
Rule 53    L -> DIVIDE
Rule 54    FACTOR -> L_PAREN EXPRESSION R_PAREN
Rule 55    FACTOR -> M CON_VAR
Rule 56    M -> PLUS
Rule 57    M -> MINUS
Rule 58    M -> empty
Rule 59    CON_VAR -> ID_REF
Rule 60    CON_VAR -> INT_CONT
Rule 61    CON_VAR -> STRING_CONT
Rule 62    CON_VAR -> CHAR_CONT
Rule 63    CON_VAR -> FLOAT_CONT
Rule 64    CON_VAR -> BOOL_CONT
Rule 65    CON_VAR -> SOLUTION_CALL
Rule 66    CON_VAR -> PREDEFINED_SOLS
Rule 67    NEGATION -> N EXPRESSION
Rule 68    N -> NOT
Rule 69    ID_REF -> ID O
Rule 70    O -> L_BRACK EXPRESSION R_BRACK
Rule 71    O -> empty
Rule 72    LIST_EXP -> L_BRACK EXPRESSION P R_BRACK
Rule 73    P -> COMMA EXPRESSION P
Rule 74    P -> empty
Rule 75    ASSIGNATION -> ID_REF EQUALS EXPRESSION TICK
Rule 76    BLOCK -> L_BRACE Q R_BRACE
Rule 77    Q -> STATUTE Q
Rule 78    Q -> empty
Rule 79    S_ASSIGNATION -> ID_REF EQUALS EXPRESSION
Rule 80    WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK
Rule 81    FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK
Rule 82    CYCLE -> FOR
Rule 83    CYCLE -> WHILE
Rule 84    CONDITION -> IF EXPRESSION COLON BLOCK R TICK
Rule 85    R -> S
Rule 86    R -> T
Rule 87    S -> ELIF EXPRESSION COLON BLOCK U
Rule 88    U -> S
Rule 89    U -> T
Rule 90    U -> empty
Rule 91    T -> ELSE COLON BLOCK
Rule 92    SOLUTION_CALL -> ID L_PAREN V R_PAREN
Rule 93    V -> W X
Rule 94    W -> EXPRESSION
Rule 95    W -> NEGATION
Rule 96    X -> COMMA V
Rule 97    X -> empty
Rule 98    PARAMS -> TYPE store_type ID check_param_duplicates Y
Rule 99    check_param_duplicates -> <empty>
Rule 100   Y -> COMMA PARAMS
Rule 101   Y -> empty
Rule 102   SOL_DEFINITIONS -> Z
Rule 103   Z -> SOLUTION_DEF Z
Rule 104   Z -> empty
Rule 105   MAIN_DEFINITION -> INT MAIN_R L_PAREN R_PAREN COLON S_BLOCK TICK
Rule 106   DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
Rule 107   DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
Rule 108   DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
Rule 109   MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN
Rule 110   MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN
Rule 111   MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN
Rule 112   MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN
Rule 113   PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN
Rule 114   PREDEFINED_SOLS -> DRAW_LINE
Rule 115   PREDEFINED_SOLS -> DRAW_CIRCLE
Rule 116   PREDEFINED_SOLS -> DRAW_RECTANGLE
Rule 117   PREDEFINED_SOLS -> MOVE_UP
Rule 118   PREDEFINED_SOLS -> MOVE_RIGHT
Rule 119   PREDEFINED_SOLS -> MOVE_DOWN
Rule 120   PREDEFINED_SOLS -> MOVE_LEFT
Rule 121   PREDEFINED_SOLS -> PRINT
Rule 122   empty -> <empty>

Terminals, with rules where they appear

AND                  : 41
BOOL                 : 31
BOOL_CONT            : 64
CHAR                 : 29
CHAR_CONT            : 62
COLON                : 1 1 1 20 80 81 84 87 91 105
COMMA                : 13 73 96 100 106 106 107 107 107 108 108
DIVIDE               : 53
DRAW_CIRCLE_R        : 106
DRAW_LINE_R          : 107
DRAW_RECTANGLE_R     : 108
ELIF                 : 87
ELSE                 : 91
EQUALS               : 8 75 79
FLOAT                : 28
FLOAT_CONT           : 63
FOR_CYCLE            : 81
GREATER_T            : 37
GREATER_T_EQUALS     : 38
ID                   : 1 6 20 69 92 98
IF                   : 84
INT                  : 27 105
INT_CONT             : 60
IS                   : 40
LESS_T               : 36
LESS_T_EQUALS        : 39
LIST                 : 32
L_BRACE              : 15 76
L_BRACK              : 70 72
L_PAREN              : 20 54 92 105 106 107 108 109 110 111 112 113
MAIN_R               : 105
MINUS                : 48 57
MOVE_DOWN_R          : 111
MOVE_LEFT_R          : 112
MOVE_RIGHT_R         : 110
MOVE_UP_R            : 109
MULTIPLY             : 52
MULTI_COMMENT        : 
NOT                  : 68
OR                   : 42
PERCENTAGE           : 43
PLUS                 : 47 56
PRINT_R              : 113
PROGRAM              : 1
R_BRACE              : 15 76
R_BRACK              : 70 72
R_PAREN              : 20 54 92 105 106 107 108 109 110 111 112 113
SINGLE_COMMENT       : 
SOL                  : 20
SOLS                 : 1
STRING               : 30
STRING_CONT          : 61
TICK                 : 3 20 75 80 81 81 81 84 105
VARS                 : 1
VOID                 : 25
WHILE_CYCLE          : 80
error                : 

Nonterminals, with rules where they appear

A                    : 3 13
ASSIGNATION          : 24
B                    : 6
BLOCK                : 80 81 84 87 91
C                    : 8
CONDITION            : 22
CON_VAR              : 55
CYCLE                : 23
D                    : 6
DRAW_CIRCLE          : 115
DRAW_LINE            : 114
DRAW_RECTANGLE       : 116
EXP                  : 33 34 45
EXPRESSION           : 11 54 67 70 72 73 75 79 80 81 84 87 94 106 106 106 107 107 107 107 108 108 108 109 110 111 112 113
F                    : 15 16
FACTOR               : 49
FOR                  : 82
G                    : 33
H                    : 34
I                    : 44
ID_REF               : 59 75 79
J                    : 45
K                    : 49
L                    : 50
LIST_EXP             : 12
M                    : 55
MAIN_DEFINITION      : 1
MOVE_DOWN            : 119
MOVE_LEFT            : 120
MOVE_RIGHT           : 118
MOVE_UP              : 117
N                    : 67
NEGATION             : 95
O                    : 69
P                    : 72 73
PARAMS               : 20 100
PREDEFINED_SOLS      : 66
PRINT                : 121
Q                    : 76 77
R                    : 84
S                    : 85 88
SOLUTION_CALL        : 65
SOLUTION_DEF         : 103
SOL_DEFINITIONS      : 1
STATUTE              : 19 77
S_ASSIGNATION        : 81 81
S_BLOCK              : 20 105
S_STATUTE            : 16
S_TYPE               : 20
T                    : 86 89
TERM                 : 44 50
TYPE                 : 3 26 98
U                    : 87
V                    : 92 96
VAR_DEFINITIONS      : 1 3 18
W                    : 93
WHILE                : 83
X                    : 93
Y                    : 98
Z                    : 102 103
assign_var_value     : 8
check_param_duplicates : 98
check_sol_duplicates : 20
check_var_duplicates : 6
create_global_fun    : 1
empty                : 4 9 14 17 35 46 51 58 71 74 78 90 97 101 104
program              : 0
store_type           : 3 20 98

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID create_global_fun COLON VARS COLON VAR_DEFINITIONS SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID create_global_fun COLON VARS COLON VAR_DEFINITIONS SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . create_global_fun COLON VARS COLON VAR_DEFINITIONS SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION
    (2) create_global_fun -> .

    COLON           reduce using rule 2 (create_global_fun -> .)

    create_global_fun              shift and go to state 4

state 4

    (1) program -> PROGRAM ID create_global_fun . COLON VARS COLON VAR_DEFINITIONS SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION

    COLON           shift and go to state 5


state 5

    (1) program -> PROGRAM ID create_global_fun COLON . VARS COLON VAR_DEFINITIONS SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION

    VARS            shift and go to state 6


state 6

    (1) program -> PROGRAM ID create_global_fun COLON VARS . COLON VAR_DEFINITIONS SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION

    COLON           shift and go to state 7


state 7

    (1) program -> PROGRAM ID create_global_fun COLON VARS COLON . VAR_DEFINITIONS SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION
    (3) VAR_DEFINITIONS -> . TYPE store_type A TICK VAR_DEFINITIONS
    (4) VAR_DEFINITIONS -> . empty
    (27) TYPE -> . INT
    (28) TYPE -> . FLOAT
    (29) TYPE -> . CHAR
    (30) TYPE -> . STRING
    (31) TYPE -> . BOOL
    (32) TYPE -> . LIST
    (122) empty -> .

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 13
    STRING          shift and go to state 8
    BOOL            shift and go to state 14
    LIST            shift and go to state 12
    SOLS            reduce using rule 122 (empty -> .)

    VAR_DEFINITIONS                shift and go to state 9
    TYPE                           shift and go to state 15
    empty                          shift and go to state 16

state 8

    (30) TYPE -> STRING .

    ID              reduce using rule 30 (TYPE -> STRING .)


state 9

    (1) program -> PROGRAM ID create_global_fun COLON VARS COLON VAR_DEFINITIONS . SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION

    SOLS            shift and go to state 17


state 10

    (27) TYPE -> INT .

    ID              reduce using rule 27 (TYPE -> INT .)


state 11

    (28) TYPE -> FLOAT .

    ID              reduce using rule 28 (TYPE -> FLOAT .)


state 12

    (32) TYPE -> LIST .

    ID              reduce using rule 32 (TYPE -> LIST .)


state 13

    (29) TYPE -> CHAR .

    ID              reduce using rule 29 (TYPE -> CHAR .)


state 14

    (31) TYPE -> BOOL .

    ID              reduce using rule 31 (TYPE -> BOOL .)


state 15

    (3) VAR_DEFINITIONS -> TYPE . store_type A TICK VAR_DEFINITIONS
    (5) store_type -> .

    ID              reduce using rule 5 (store_type -> .)

    store_type                     shift and go to state 18

state 16

    (4) VAR_DEFINITIONS -> empty .

    SOLS            reduce using rule 4 (VAR_DEFINITIONS -> empty .)
    INT             reduce using rule 4 (VAR_DEFINITIONS -> empty .)
    FLOAT           reduce using rule 4 (VAR_DEFINITIONS -> empty .)
    CHAR            reduce using rule 4 (VAR_DEFINITIONS -> empty .)
    STRING          reduce using rule 4 (VAR_DEFINITIONS -> empty .)
    BOOL            reduce using rule 4 (VAR_DEFINITIONS -> empty .)
    LIST            reduce using rule 4 (VAR_DEFINITIONS -> empty .)
    IF              reduce using rule 4 (VAR_DEFINITIONS -> empty .)
    FOR_CYCLE       reduce using rule 4 (VAR_DEFINITIONS -> empty .)
    WHILE_CYCLE     reduce using rule 4 (VAR_DEFINITIONS -> empty .)
    ID              reduce using rule 4 (VAR_DEFINITIONS -> empty .)
    R_BRACE         reduce using rule 4 (VAR_DEFINITIONS -> empty .)


state 17

    (1) program -> PROGRAM ID create_global_fun COLON VARS COLON VAR_DEFINITIONS SOLS . COLON SOL_DEFINITIONS MAIN_DEFINITION

    COLON           shift and go to state 19


state 18

    (3) VAR_DEFINITIONS -> TYPE store_type . A TICK VAR_DEFINITIONS
    (6) A -> . ID check_var_duplicates B D

    ID              shift and go to state 21

    A                              shift and go to state 20

state 19

    (1) program -> PROGRAM ID create_global_fun COLON VARS COLON VAR_DEFINITIONS SOLS COLON . SOL_DEFINITIONS MAIN_DEFINITION
    (102) SOL_DEFINITIONS -> . Z
    (103) Z -> . SOLUTION_DEF Z
    (104) Z -> . empty
    (20) SOLUTION_DEF -> . SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK
    (122) empty -> .

    SOL             shift and go to state 23
    INT             reduce using rule 122 (empty -> .)

    SOLUTION_DEF                   shift and go to state 22
    SOL_DEFINITIONS                shift and go to state 24
    Z                              shift and go to state 25
    empty                          shift and go to state 26

state 20

    (3) VAR_DEFINITIONS -> TYPE store_type A . TICK VAR_DEFINITIONS

    TICK            shift and go to state 27


state 21

    (6) A -> ID . check_var_duplicates B D
    (7) check_var_duplicates -> .

    EQUALS          reduce using rule 7 (check_var_duplicates -> .)
    COMMA           reduce using rule 7 (check_var_duplicates -> .)
    TICK            reduce using rule 7 (check_var_duplicates -> .)

    check_var_duplicates           shift and go to state 28

state 22

    (103) Z -> SOLUTION_DEF . Z
    (103) Z -> . SOLUTION_DEF Z
    (104) Z -> . empty
    (20) SOLUTION_DEF -> . SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK
    (122) empty -> .

    SOL             shift and go to state 23
    INT             reduce using rule 122 (empty -> .)

    SOLUTION_DEF                   shift and go to state 22
    Z                              shift and go to state 29
    empty                          shift and go to state 26

state 23

    (20) SOLUTION_DEF -> SOL . S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK
    (25) S_TYPE -> . VOID
    (26) S_TYPE -> . TYPE
    (27) TYPE -> . INT
    (28) TYPE -> . FLOAT
    (29) TYPE -> . CHAR
    (30) TYPE -> . STRING
    (31) TYPE -> . BOOL
    (32) TYPE -> . LIST

    VOID            shift and go to state 30
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 13
    STRING          shift and go to state 8
    BOOL            shift and go to state 14
    LIST            shift and go to state 12

    S_TYPE                         shift and go to state 31
    TYPE                           shift and go to state 32

state 24

    (1) program -> PROGRAM ID create_global_fun COLON VARS COLON VAR_DEFINITIONS SOLS COLON SOL_DEFINITIONS . MAIN_DEFINITION
    (105) MAIN_DEFINITION -> . INT MAIN_R L_PAREN R_PAREN COLON S_BLOCK TICK

    INT             shift and go to state 33

    MAIN_DEFINITION                shift and go to state 34

state 25

    (102) SOL_DEFINITIONS -> Z .

    INT             reduce using rule 102 (SOL_DEFINITIONS -> Z .)


state 26

    (104) Z -> empty .

    INT             reduce using rule 104 (Z -> empty .)


state 27

    (3) VAR_DEFINITIONS -> TYPE store_type A TICK . VAR_DEFINITIONS
    (3) VAR_DEFINITIONS -> . TYPE store_type A TICK VAR_DEFINITIONS
    (4) VAR_DEFINITIONS -> . empty
    (27) TYPE -> . INT
    (28) TYPE -> . FLOAT
    (29) TYPE -> . CHAR
    (30) TYPE -> . STRING
    (31) TYPE -> . BOOL
    (32) TYPE -> . LIST
    (122) empty -> .

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 13
    STRING          shift and go to state 8
    BOOL            shift and go to state 14
    LIST            shift and go to state 12
    SOLS            reduce using rule 122 (empty -> .)
    IF              reduce using rule 122 (empty -> .)
    FOR_CYCLE       reduce using rule 122 (empty -> .)
    WHILE_CYCLE     reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    R_BRACE         reduce using rule 122 (empty -> .)

  ! INT             [ reduce using rule 122 (empty -> .) ]
  ! FLOAT           [ reduce using rule 122 (empty -> .) ]
  ! CHAR            [ reduce using rule 122 (empty -> .) ]
  ! STRING          [ reduce using rule 122 (empty -> .) ]
  ! BOOL            [ reduce using rule 122 (empty -> .) ]
  ! LIST            [ reduce using rule 122 (empty -> .) ]

    TYPE                           shift and go to state 15
    empty                          shift and go to state 16
    VAR_DEFINITIONS                shift and go to state 35

state 28

    (6) A -> ID check_var_duplicates . B D
    (8) B -> . EQUALS C assign_var_value
    (9) B -> . empty
    (122) empty -> .

    EQUALS          shift and go to state 37
    COMMA           reduce using rule 122 (empty -> .)
    TICK            reduce using rule 122 (empty -> .)

    B                              shift and go to state 36
    empty                          shift and go to state 38

state 29

    (103) Z -> SOLUTION_DEF Z .

    INT             reduce using rule 103 (Z -> SOLUTION_DEF Z .)


state 30

    (25) S_TYPE -> VOID .

    ID              reduce using rule 25 (S_TYPE -> VOID .)


state 31

    (20) SOLUTION_DEF -> SOL S_TYPE . store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK
    (5) store_type -> .

    ID              reduce using rule 5 (store_type -> .)

    store_type                     shift and go to state 39

state 32

    (26) S_TYPE -> TYPE .

    ID              reduce using rule 26 (S_TYPE -> TYPE .)


state 33

    (105) MAIN_DEFINITION -> INT . MAIN_R L_PAREN R_PAREN COLON S_BLOCK TICK

    MAIN_R          shift and go to state 40


state 34

    (1) program -> PROGRAM ID create_global_fun COLON VARS COLON VAR_DEFINITIONS SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION .

    $end            reduce using rule 1 (program -> PROGRAM ID create_global_fun COLON VARS COLON VAR_DEFINITIONS SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION .)


state 35

    (3) VAR_DEFINITIONS -> TYPE store_type A TICK VAR_DEFINITIONS .

    INT             reduce using rule 3 (VAR_DEFINITIONS -> TYPE store_type A TICK VAR_DEFINITIONS .)
    FLOAT           reduce using rule 3 (VAR_DEFINITIONS -> TYPE store_type A TICK VAR_DEFINITIONS .)
    CHAR            reduce using rule 3 (VAR_DEFINITIONS -> TYPE store_type A TICK VAR_DEFINITIONS .)
    STRING          reduce using rule 3 (VAR_DEFINITIONS -> TYPE store_type A TICK VAR_DEFINITIONS .)
    BOOL            reduce using rule 3 (VAR_DEFINITIONS -> TYPE store_type A TICK VAR_DEFINITIONS .)
    LIST            reduce using rule 3 (VAR_DEFINITIONS -> TYPE store_type A TICK VAR_DEFINITIONS .)
    IF              reduce using rule 3 (VAR_DEFINITIONS -> TYPE store_type A TICK VAR_DEFINITIONS .)
    FOR_CYCLE       reduce using rule 3 (VAR_DEFINITIONS -> TYPE store_type A TICK VAR_DEFINITIONS .)
    WHILE_CYCLE     reduce using rule 3 (VAR_DEFINITIONS -> TYPE store_type A TICK VAR_DEFINITIONS .)
    ID              reduce using rule 3 (VAR_DEFINITIONS -> TYPE store_type A TICK VAR_DEFINITIONS .)
    R_BRACE         reduce using rule 3 (VAR_DEFINITIONS -> TYPE store_type A TICK VAR_DEFINITIONS .)
    SOLS            reduce using rule 3 (VAR_DEFINITIONS -> TYPE store_type A TICK VAR_DEFINITIONS .)


state 36

    (6) A -> ID check_var_duplicates B . D
    (13) D -> . COMMA A
    (14) D -> . empty
    (122) empty -> .

    COMMA           shift and go to state 42
    TICK            reduce using rule 122 (empty -> .)

    D                              shift and go to state 41
    empty                          shift and go to state 43

state 37

    (8) B -> EQUALS . C assign_var_value
    (11) C -> . EXPRESSION
    (12) C -> . LIST_EXP
    (33) EXPRESSION -> . EXP G
    (72) LIST_EXP -> . L_BRACK EXPRESSION P R_BRACK
    (44) EXP -> . TERM I
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_BRACK         shift and go to state 46
    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    LIST_EXP                       shift and go to state 44
    C                              shift and go to state 45
    M                              shift and go to state 47
    TERM                           shift and go to state 49
    EXP                            shift and go to state 51
    FACTOR                         shift and go to state 52
    EXPRESSION                     shift and go to state 53
    empty                          shift and go to state 55

state 38

    (9) B -> empty .

    COMMA           reduce using rule 9 (B -> empty .)
    TICK            reduce using rule 9 (B -> empty .)


state 39

    (20) SOLUTION_DEF -> SOL S_TYPE store_type . ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK

    ID              shift and go to state 56


state 40

    (105) MAIN_DEFINITION -> INT MAIN_R . L_PAREN R_PAREN COLON S_BLOCK TICK

    L_PAREN         shift and go to state 57


state 41

    (6) A -> ID check_var_duplicates B D .

    TICK            reduce using rule 6 (A -> ID check_var_duplicates B D .)


state 42

    (13) D -> COMMA . A
    (6) A -> . ID check_var_duplicates B D

    ID              shift and go to state 21

    A                              shift and go to state 58

state 43

    (14) D -> empty .

    TICK            reduce using rule 14 (D -> empty .)


state 44

    (12) C -> LIST_EXP .

    COMMA           reduce using rule 12 (C -> LIST_EXP .)
    TICK            reduce using rule 12 (C -> LIST_EXP .)


state 45

    (8) B -> EQUALS C . assign_var_value
    (10) assign_var_value -> .

    COMMA           reduce using rule 10 (assign_var_value -> .)
    TICK            reduce using rule 10 (assign_var_value -> .)

    assign_var_value               shift and go to state 59

state 46

    (72) LIST_EXP -> L_BRACK . EXPRESSION P R_BRACK
    (33) EXPRESSION -> . EXP G
    (44) EXP -> . TERM I
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    M                              shift and go to state 47
    EXP                            shift and go to state 51
    FACTOR                         shift and go to state 52
    EXPRESSION                     shift and go to state 60
    empty                          shift and go to state 55

state 47

    (55) FACTOR -> M . CON_VAR
    (59) CON_VAR -> . ID_REF
    (60) CON_VAR -> . INT_CONT
    (61) CON_VAR -> . STRING_CONT
    (62) CON_VAR -> . CHAR_CONT
    (63) CON_VAR -> . FLOAT_CONT
    (64) CON_VAR -> . BOOL_CONT
    (65) CON_VAR -> . SOLUTION_CALL
    (66) CON_VAR -> . PREDEFINED_SOLS
    (69) ID_REF -> . ID O
    (92) SOLUTION_CALL -> . ID L_PAREN V R_PAREN
    (114) PREDEFINED_SOLS -> . DRAW_LINE
    (115) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (116) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (117) PREDEFINED_SOLS -> . MOVE_UP
    (118) PREDEFINED_SOLS -> . MOVE_RIGHT
    (119) PREDEFINED_SOLS -> . MOVE_DOWN
    (120) PREDEFINED_SOLS -> . MOVE_LEFT
    (121) PREDEFINED_SOLS -> . PRINT
    (107) DRAW_LINE -> . DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
    (106) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
    (108) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
    (109) MOVE_UP -> . MOVE_UP_R L_PAREN EXPRESSION R_PAREN
    (110) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN
    (111) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN
    (112) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN
    (113) PRINT -> . PRINT_R L_PAREN EXPRESSION R_PAREN

    INT_CONT        shift and go to state 66
    STRING_CONT     shift and go to state 68
    CHAR_CONT       shift and go to state 75
    FLOAT_CONT      shift and go to state 81
    BOOL_CONT       shift and go to state 73
    ID              shift and go to state 79
    DRAW_LINE_R     shift and go to state 61
    DRAW_CIRCLE_R   shift and go to state 67
    DRAW_RECTANGLE_R shift and go to state 77
    MOVE_UP_R       shift and go to state 82
    MOVE_RIGHT_R    shift and go to state 85
    MOVE_DOWN_R     shift and go to state 62
    MOVE_LEFT_R     shift and go to state 64
    PRINT_R         shift and go to state 63

    MOVE_RIGHT                     shift and go to state 72
    MOVE_LEFT                      shift and go to state 69
    ID_REF                         shift and go to state 70
    SOLUTION_CALL                  shift and go to state 71
    PREDEFINED_SOLS                shift and go to state 83
    DRAW_RECTANGLE                 shift and go to state 76
    MOVE_DOWN                      shift and go to state 84
    DRAW_LINE                      shift and go to state 78
    PRINT                          shift and go to state 65
    CON_VAR                        shift and go to state 74
    MOVE_UP                        shift and go to state 80
    DRAW_CIRCLE                    shift and go to state 86

state 48

    (54) FACTOR -> L_PAREN . EXPRESSION R_PAREN
    (33) EXPRESSION -> . EXP G
    (44) EXP -> . TERM I
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    M                              shift and go to state 47
    EXP                            shift and go to state 51
    FACTOR                         shift and go to state 52
    EXPRESSION                     shift and go to state 87
    empty                          shift and go to state 55

state 49

    (44) EXP -> TERM . I
    (45) I -> . J EXP
    (46) I -> . empty
    (47) J -> . PLUS
    (48) J -> . MINUS
    (122) empty -> .

    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    LESS_T          reduce using rule 122 (empty -> .)
    GREATER_T       reduce using rule 122 (empty -> .)
    GREATER_T_EQUALS reduce using rule 122 (empty -> .)
    LESS_T_EQUALS   reduce using rule 122 (empty -> .)
    IS              reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    PERCENTAGE      reduce using rule 122 (empty -> .)
    COMMA           reduce using rule 122 (empty -> .)
    TICK            reduce using rule 122 (empty -> .)
    R_BRACK         reduce using rule 122 (empty -> .)
    R_PAREN         reduce using rule 122 (empty -> .)
    COLON           reduce using rule 122 (empty -> .)

    I                              shift and go to state 88
    J                              shift and go to state 89
    empty                          shift and go to state 92

state 50

    (56) M -> PLUS .

    INT_CONT        reduce using rule 56 (M -> PLUS .)
    STRING_CONT     reduce using rule 56 (M -> PLUS .)
    CHAR_CONT       reduce using rule 56 (M -> PLUS .)
    FLOAT_CONT      reduce using rule 56 (M -> PLUS .)
    BOOL_CONT       reduce using rule 56 (M -> PLUS .)
    ID              reduce using rule 56 (M -> PLUS .)
    DRAW_LINE_R     reduce using rule 56 (M -> PLUS .)
    DRAW_CIRCLE_R   reduce using rule 56 (M -> PLUS .)
    DRAW_RECTANGLE_R reduce using rule 56 (M -> PLUS .)
    MOVE_UP_R       reduce using rule 56 (M -> PLUS .)
    MOVE_RIGHT_R    reduce using rule 56 (M -> PLUS .)
    MOVE_DOWN_R     reduce using rule 56 (M -> PLUS .)
    MOVE_LEFT_R     reduce using rule 56 (M -> PLUS .)
    PRINT_R         reduce using rule 56 (M -> PLUS .)


state 51

    (33) EXPRESSION -> EXP . G
    (34) G -> . H EXP
    (35) G -> . empty
    (36) H -> . LESS_T
    (37) H -> . GREATER_T
    (38) H -> . GREATER_T_EQUALS
    (39) H -> . LESS_T_EQUALS
    (40) H -> . IS
    (41) H -> . AND
    (42) H -> . OR
    (43) H -> . PERCENTAGE
    (122) empty -> .

    LESS_T          shift and go to state 97
    GREATER_T       shift and go to state 99
    GREATER_T_EQUALS shift and go to state 100
    LESS_T_EQUALS   shift and go to state 98
    IS              shift and go to state 96
    AND             shift and go to state 93
    OR              shift and go to state 102
    PERCENTAGE      shift and go to state 101
    COMMA           reduce using rule 122 (empty -> .)
    TICK            reduce using rule 122 (empty -> .)
    R_BRACK         reduce using rule 122 (empty -> .)
    R_PAREN         reduce using rule 122 (empty -> .)
    COLON           reduce using rule 122 (empty -> .)

    H                              shift and go to state 95
    empty                          shift and go to state 103
    G                              shift and go to state 94

state 52

    (49) TERM -> FACTOR . K
    (50) K -> . L TERM
    (51) K -> . empty
    (52) L -> . MULTIPLY
    (53) L -> . DIVIDE
    (122) empty -> .

    MULTIPLY        shift and go to state 107
    DIVIDE          shift and go to state 104
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    LESS_T          reduce using rule 122 (empty -> .)
    GREATER_T       reduce using rule 122 (empty -> .)
    GREATER_T_EQUALS reduce using rule 122 (empty -> .)
    LESS_T_EQUALS   reduce using rule 122 (empty -> .)
    IS              reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    PERCENTAGE      reduce using rule 122 (empty -> .)
    COMMA           reduce using rule 122 (empty -> .)
    TICK            reduce using rule 122 (empty -> .)
    R_BRACK         reduce using rule 122 (empty -> .)
    R_PAREN         reduce using rule 122 (empty -> .)
    COLON           reduce using rule 122 (empty -> .)

    K                              shift and go to state 105
    L                              shift and go to state 106
    empty                          shift and go to state 108

state 53

    (11) C -> EXPRESSION .

    COMMA           reduce using rule 11 (C -> EXPRESSION .)
    TICK            reduce using rule 11 (C -> EXPRESSION .)


state 54

    (57) M -> MINUS .

    INT_CONT        reduce using rule 57 (M -> MINUS .)
    STRING_CONT     reduce using rule 57 (M -> MINUS .)
    CHAR_CONT       reduce using rule 57 (M -> MINUS .)
    FLOAT_CONT      reduce using rule 57 (M -> MINUS .)
    BOOL_CONT       reduce using rule 57 (M -> MINUS .)
    ID              reduce using rule 57 (M -> MINUS .)
    DRAW_LINE_R     reduce using rule 57 (M -> MINUS .)
    DRAW_CIRCLE_R   reduce using rule 57 (M -> MINUS .)
    DRAW_RECTANGLE_R reduce using rule 57 (M -> MINUS .)
    MOVE_UP_R       reduce using rule 57 (M -> MINUS .)
    MOVE_RIGHT_R    reduce using rule 57 (M -> MINUS .)
    MOVE_DOWN_R     reduce using rule 57 (M -> MINUS .)
    MOVE_LEFT_R     reduce using rule 57 (M -> MINUS .)
    PRINT_R         reduce using rule 57 (M -> MINUS .)


state 55

    (58) M -> empty .

    INT_CONT        reduce using rule 58 (M -> empty .)
    STRING_CONT     reduce using rule 58 (M -> empty .)
    CHAR_CONT       reduce using rule 58 (M -> empty .)
    FLOAT_CONT      reduce using rule 58 (M -> empty .)
    BOOL_CONT       reduce using rule 58 (M -> empty .)
    ID              reduce using rule 58 (M -> empty .)
    DRAW_LINE_R     reduce using rule 58 (M -> empty .)
    DRAW_CIRCLE_R   reduce using rule 58 (M -> empty .)
    DRAW_RECTANGLE_R reduce using rule 58 (M -> empty .)
    MOVE_UP_R       reduce using rule 58 (M -> empty .)
    MOVE_RIGHT_R    reduce using rule 58 (M -> empty .)
    MOVE_DOWN_R     reduce using rule 58 (M -> empty .)
    MOVE_LEFT_R     reduce using rule 58 (M -> empty .)
    PRINT_R         reduce using rule 58 (M -> empty .)


state 56

    (20) SOLUTION_DEF -> SOL S_TYPE store_type ID . check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK
    (21) check_sol_duplicates -> .

    L_PAREN         reduce using rule 21 (check_sol_duplicates -> .)

    check_sol_duplicates           shift and go to state 109

state 57

    (105) MAIN_DEFINITION -> INT MAIN_R L_PAREN . R_PAREN COLON S_BLOCK TICK

    R_PAREN         shift and go to state 110


state 58

    (13) D -> COMMA A .

    TICK            reduce using rule 13 (D -> COMMA A .)


state 59

    (8) B -> EQUALS C assign_var_value .

    COMMA           reduce using rule 8 (B -> EQUALS C assign_var_value .)
    TICK            reduce using rule 8 (B -> EQUALS C assign_var_value .)


state 60

    (72) LIST_EXP -> L_BRACK EXPRESSION . P R_BRACK
    (73) P -> . COMMA EXPRESSION P
    (74) P -> . empty
    (122) empty -> .

    COMMA           shift and go to state 112
    R_BRACK         reduce using rule 122 (empty -> .)

    P                              shift and go to state 111
    empty                          shift and go to state 113

state 61

    (107) DRAW_LINE -> DRAW_LINE_R . L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN

    L_PAREN         shift and go to state 114


state 62

    (111) MOVE_DOWN -> MOVE_DOWN_R . L_PAREN EXPRESSION R_PAREN

    L_PAREN         shift and go to state 115


state 63

    (113) PRINT -> PRINT_R . L_PAREN EXPRESSION R_PAREN

    L_PAREN         shift and go to state 116


state 64

    (112) MOVE_LEFT -> MOVE_LEFT_R . L_PAREN EXPRESSION R_PAREN

    L_PAREN         shift and go to state 117


state 65

    (121) PREDEFINED_SOLS -> PRINT .

    MULTIPLY        reduce using rule 121 (PREDEFINED_SOLS -> PRINT .)
    DIVIDE          reduce using rule 121 (PREDEFINED_SOLS -> PRINT .)
    PLUS            reduce using rule 121 (PREDEFINED_SOLS -> PRINT .)
    MINUS           reduce using rule 121 (PREDEFINED_SOLS -> PRINT .)
    LESS_T          reduce using rule 121 (PREDEFINED_SOLS -> PRINT .)
    GREATER_T       reduce using rule 121 (PREDEFINED_SOLS -> PRINT .)
    GREATER_T_EQUALS reduce using rule 121 (PREDEFINED_SOLS -> PRINT .)
    LESS_T_EQUALS   reduce using rule 121 (PREDEFINED_SOLS -> PRINT .)
    IS              reduce using rule 121 (PREDEFINED_SOLS -> PRINT .)
    AND             reduce using rule 121 (PREDEFINED_SOLS -> PRINT .)
    OR              reduce using rule 121 (PREDEFINED_SOLS -> PRINT .)
    PERCENTAGE      reduce using rule 121 (PREDEFINED_SOLS -> PRINT .)
    COMMA           reduce using rule 121 (PREDEFINED_SOLS -> PRINT .)
    TICK            reduce using rule 121 (PREDEFINED_SOLS -> PRINT .)
    R_BRACK         reduce using rule 121 (PREDEFINED_SOLS -> PRINT .)
    R_PAREN         reduce using rule 121 (PREDEFINED_SOLS -> PRINT .)
    COLON           reduce using rule 121 (PREDEFINED_SOLS -> PRINT .)


state 66

    (60) CON_VAR -> INT_CONT .

    MULTIPLY        reduce using rule 60 (CON_VAR -> INT_CONT .)
    DIVIDE          reduce using rule 60 (CON_VAR -> INT_CONT .)
    PLUS            reduce using rule 60 (CON_VAR -> INT_CONT .)
    MINUS           reduce using rule 60 (CON_VAR -> INT_CONT .)
    LESS_T          reduce using rule 60 (CON_VAR -> INT_CONT .)
    GREATER_T       reduce using rule 60 (CON_VAR -> INT_CONT .)
    GREATER_T_EQUALS reduce using rule 60 (CON_VAR -> INT_CONT .)
    LESS_T_EQUALS   reduce using rule 60 (CON_VAR -> INT_CONT .)
    IS              reduce using rule 60 (CON_VAR -> INT_CONT .)
    AND             reduce using rule 60 (CON_VAR -> INT_CONT .)
    OR              reduce using rule 60 (CON_VAR -> INT_CONT .)
    PERCENTAGE      reduce using rule 60 (CON_VAR -> INT_CONT .)
    COMMA           reduce using rule 60 (CON_VAR -> INT_CONT .)
    TICK            reduce using rule 60 (CON_VAR -> INT_CONT .)
    R_BRACK         reduce using rule 60 (CON_VAR -> INT_CONT .)
    R_PAREN         reduce using rule 60 (CON_VAR -> INT_CONT .)
    COLON           reduce using rule 60 (CON_VAR -> INT_CONT .)


state 67

    (106) DRAW_CIRCLE -> DRAW_CIRCLE_R . L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN

    L_PAREN         shift and go to state 118


state 68

    (61) CON_VAR -> STRING_CONT .

    MULTIPLY        reduce using rule 61 (CON_VAR -> STRING_CONT .)
    DIVIDE          reduce using rule 61 (CON_VAR -> STRING_CONT .)
    PLUS            reduce using rule 61 (CON_VAR -> STRING_CONT .)
    MINUS           reduce using rule 61 (CON_VAR -> STRING_CONT .)
    LESS_T          reduce using rule 61 (CON_VAR -> STRING_CONT .)
    GREATER_T       reduce using rule 61 (CON_VAR -> STRING_CONT .)
    GREATER_T_EQUALS reduce using rule 61 (CON_VAR -> STRING_CONT .)
    LESS_T_EQUALS   reduce using rule 61 (CON_VAR -> STRING_CONT .)
    IS              reduce using rule 61 (CON_VAR -> STRING_CONT .)
    AND             reduce using rule 61 (CON_VAR -> STRING_CONT .)
    OR              reduce using rule 61 (CON_VAR -> STRING_CONT .)
    PERCENTAGE      reduce using rule 61 (CON_VAR -> STRING_CONT .)
    COMMA           reduce using rule 61 (CON_VAR -> STRING_CONT .)
    TICK            reduce using rule 61 (CON_VAR -> STRING_CONT .)
    R_BRACK         reduce using rule 61 (CON_VAR -> STRING_CONT .)
    R_PAREN         reduce using rule 61 (CON_VAR -> STRING_CONT .)
    COLON           reduce using rule 61 (CON_VAR -> STRING_CONT .)


state 69

    (120) PREDEFINED_SOLS -> MOVE_LEFT .

    MULTIPLY        reduce using rule 120 (PREDEFINED_SOLS -> MOVE_LEFT .)
    DIVIDE          reduce using rule 120 (PREDEFINED_SOLS -> MOVE_LEFT .)
    PLUS            reduce using rule 120 (PREDEFINED_SOLS -> MOVE_LEFT .)
    MINUS           reduce using rule 120 (PREDEFINED_SOLS -> MOVE_LEFT .)
    LESS_T          reduce using rule 120 (PREDEFINED_SOLS -> MOVE_LEFT .)
    GREATER_T       reduce using rule 120 (PREDEFINED_SOLS -> MOVE_LEFT .)
    GREATER_T_EQUALS reduce using rule 120 (PREDEFINED_SOLS -> MOVE_LEFT .)
    LESS_T_EQUALS   reduce using rule 120 (PREDEFINED_SOLS -> MOVE_LEFT .)
    IS              reduce using rule 120 (PREDEFINED_SOLS -> MOVE_LEFT .)
    AND             reduce using rule 120 (PREDEFINED_SOLS -> MOVE_LEFT .)
    OR              reduce using rule 120 (PREDEFINED_SOLS -> MOVE_LEFT .)
    PERCENTAGE      reduce using rule 120 (PREDEFINED_SOLS -> MOVE_LEFT .)
    COMMA           reduce using rule 120 (PREDEFINED_SOLS -> MOVE_LEFT .)
    TICK            reduce using rule 120 (PREDEFINED_SOLS -> MOVE_LEFT .)
    R_BRACK         reduce using rule 120 (PREDEFINED_SOLS -> MOVE_LEFT .)
    R_PAREN         reduce using rule 120 (PREDEFINED_SOLS -> MOVE_LEFT .)
    COLON           reduce using rule 120 (PREDEFINED_SOLS -> MOVE_LEFT .)


state 70

    (59) CON_VAR -> ID_REF .

    MULTIPLY        reduce using rule 59 (CON_VAR -> ID_REF .)
    DIVIDE          reduce using rule 59 (CON_VAR -> ID_REF .)
    PLUS            reduce using rule 59 (CON_VAR -> ID_REF .)
    MINUS           reduce using rule 59 (CON_VAR -> ID_REF .)
    LESS_T          reduce using rule 59 (CON_VAR -> ID_REF .)
    GREATER_T       reduce using rule 59 (CON_VAR -> ID_REF .)
    GREATER_T_EQUALS reduce using rule 59 (CON_VAR -> ID_REF .)
    LESS_T_EQUALS   reduce using rule 59 (CON_VAR -> ID_REF .)
    IS              reduce using rule 59 (CON_VAR -> ID_REF .)
    AND             reduce using rule 59 (CON_VAR -> ID_REF .)
    OR              reduce using rule 59 (CON_VAR -> ID_REF .)
    PERCENTAGE      reduce using rule 59 (CON_VAR -> ID_REF .)
    COMMA           reduce using rule 59 (CON_VAR -> ID_REF .)
    TICK            reduce using rule 59 (CON_VAR -> ID_REF .)
    R_BRACK         reduce using rule 59 (CON_VAR -> ID_REF .)
    R_PAREN         reduce using rule 59 (CON_VAR -> ID_REF .)
    COLON           reduce using rule 59 (CON_VAR -> ID_REF .)


state 71

    (65) CON_VAR -> SOLUTION_CALL .

    MULTIPLY        reduce using rule 65 (CON_VAR -> SOLUTION_CALL .)
    DIVIDE          reduce using rule 65 (CON_VAR -> SOLUTION_CALL .)
    PLUS            reduce using rule 65 (CON_VAR -> SOLUTION_CALL .)
    MINUS           reduce using rule 65 (CON_VAR -> SOLUTION_CALL .)
    LESS_T          reduce using rule 65 (CON_VAR -> SOLUTION_CALL .)
    GREATER_T       reduce using rule 65 (CON_VAR -> SOLUTION_CALL .)
    GREATER_T_EQUALS reduce using rule 65 (CON_VAR -> SOLUTION_CALL .)
    LESS_T_EQUALS   reduce using rule 65 (CON_VAR -> SOLUTION_CALL .)
    IS              reduce using rule 65 (CON_VAR -> SOLUTION_CALL .)
    AND             reduce using rule 65 (CON_VAR -> SOLUTION_CALL .)
    OR              reduce using rule 65 (CON_VAR -> SOLUTION_CALL .)
    PERCENTAGE      reduce using rule 65 (CON_VAR -> SOLUTION_CALL .)
    COMMA           reduce using rule 65 (CON_VAR -> SOLUTION_CALL .)
    TICK            reduce using rule 65 (CON_VAR -> SOLUTION_CALL .)
    R_BRACK         reduce using rule 65 (CON_VAR -> SOLUTION_CALL .)
    R_PAREN         reduce using rule 65 (CON_VAR -> SOLUTION_CALL .)
    COLON           reduce using rule 65 (CON_VAR -> SOLUTION_CALL .)


state 72

    (118) PREDEFINED_SOLS -> MOVE_RIGHT .

    MULTIPLY        reduce using rule 118 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    DIVIDE          reduce using rule 118 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    PLUS            reduce using rule 118 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    MINUS           reduce using rule 118 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    LESS_T          reduce using rule 118 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    GREATER_T       reduce using rule 118 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    GREATER_T_EQUALS reduce using rule 118 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    LESS_T_EQUALS   reduce using rule 118 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    IS              reduce using rule 118 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    AND             reduce using rule 118 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    OR              reduce using rule 118 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    PERCENTAGE      reduce using rule 118 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    COMMA           reduce using rule 118 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    TICK            reduce using rule 118 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    R_BRACK         reduce using rule 118 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    R_PAREN         reduce using rule 118 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    COLON           reduce using rule 118 (PREDEFINED_SOLS -> MOVE_RIGHT .)


state 73

    (64) CON_VAR -> BOOL_CONT .

    MULTIPLY        reduce using rule 64 (CON_VAR -> BOOL_CONT .)
    DIVIDE          reduce using rule 64 (CON_VAR -> BOOL_CONT .)
    PLUS            reduce using rule 64 (CON_VAR -> BOOL_CONT .)
    MINUS           reduce using rule 64 (CON_VAR -> BOOL_CONT .)
    LESS_T          reduce using rule 64 (CON_VAR -> BOOL_CONT .)
    GREATER_T       reduce using rule 64 (CON_VAR -> BOOL_CONT .)
    GREATER_T_EQUALS reduce using rule 64 (CON_VAR -> BOOL_CONT .)
    LESS_T_EQUALS   reduce using rule 64 (CON_VAR -> BOOL_CONT .)
    IS              reduce using rule 64 (CON_VAR -> BOOL_CONT .)
    AND             reduce using rule 64 (CON_VAR -> BOOL_CONT .)
    OR              reduce using rule 64 (CON_VAR -> BOOL_CONT .)
    PERCENTAGE      reduce using rule 64 (CON_VAR -> BOOL_CONT .)
    COMMA           reduce using rule 64 (CON_VAR -> BOOL_CONT .)
    TICK            reduce using rule 64 (CON_VAR -> BOOL_CONT .)
    R_BRACK         reduce using rule 64 (CON_VAR -> BOOL_CONT .)
    R_PAREN         reduce using rule 64 (CON_VAR -> BOOL_CONT .)
    COLON           reduce using rule 64 (CON_VAR -> BOOL_CONT .)


state 74

    (55) FACTOR -> M CON_VAR .

    MULTIPLY        reduce using rule 55 (FACTOR -> M CON_VAR .)
    DIVIDE          reduce using rule 55 (FACTOR -> M CON_VAR .)
    PLUS            reduce using rule 55 (FACTOR -> M CON_VAR .)
    MINUS           reduce using rule 55 (FACTOR -> M CON_VAR .)
    LESS_T          reduce using rule 55 (FACTOR -> M CON_VAR .)
    GREATER_T       reduce using rule 55 (FACTOR -> M CON_VAR .)
    GREATER_T_EQUALS reduce using rule 55 (FACTOR -> M CON_VAR .)
    LESS_T_EQUALS   reduce using rule 55 (FACTOR -> M CON_VAR .)
    IS              reduce using rule 55 (FACTOR -> M CON_VAR .)
    AND             reduce using rule 55 (FACTOR -> M CON_VAR .)
    OR              reduce using rule 55 (FACTOR -> M CON_VAR .)
    PERCENTAGE      reduce using rule 55 (FACTOR -> M CON_VAR .)
    TICK            reduce using rule 55 (FACTOR -> M CON_VAR .)
    COLON           reduce using rule 55 (FACTOR -> M CON_VAR .)
    COMMA           reduce using rule 55 (FACTOR -> M CON_VAR .)
    R_PAREN         reduce using rule 55 (FACTOR -> M CON_VAR .)
    R_BRACK         reduce using rule 55 (FACTOR -> M CON_VAR .)


state 75

    (62) CON_VAR -> CHAR_CONT .

    MULTIPLY        reduce using rule 62 (CON_VAR -> CHAR_CONT .)
    DIVIDE          reduce using rule 62 (CON_VAR -> CHAR_CONT .)
    PLUS            reduce using rule 62 (CON_VAR -> CHAR_CONT .)
    MINUS           reduce using rule 62 (CON_VAR -> CHAR_CONT .)
    LESS_T          reduce using rule 62 (CON_VAR -> CHAR_CONT .)
    GREATER_T       reduce using rule 62 (CON_VAR -> CHAR_CONT .)
    GREATER_T_EQUALS reduce using rule 62 (CON_VAR -> CHAR_CONT .)
    LESS_T_EQUALS   reduce using rule 62 (CON_VAR -> CHAR_CONT .)
    IS              reduce using rule 62 (CON_VAR -> CHAR_CONT .)
    AND             reduce using rule 62 (CON_VAR -> CHAR_CONT .)
    OR              reduce using rule 62 (CON_VAR -> CHAR_CONT .)
    PERCENTAGE      reduce using rule 62 (CON_VAR -> CHAR_CONT .)
    COMMA           reduce using rule 62 (CON_VAR -> CHAR_CONT .)
    TICK            reduce using rule 62 (CON_VAR -> CHAR_CONT .)
    R_BRACK         reduce using rule 62 (CON_VAR -> CHAR_CONT .)
    R_PAREN         reduce using rule 62 (CON_VAR -> CHAR_CONT .)
    COLON           reduce using rule 62 (CON_VAR -> CHAR_CONT .)


state 76

    (116) PREDEFINED_SOLS -> DRAW_RECTANGLE .

    MULTIPLY        reduce using rule 116 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    DIVIDE          reduce using rule 116 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    PLUS            reduce using rule 116 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    MINUS           reduce using rule 116 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    LESS_T          reduce using rule 116 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    GREATER_T       reduce using rule 116 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    GREATER_T_EQUALS reduce using rule 116 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    LESS_T_EQUALS   reduce using rule 116 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    IS              reduce using rule 116 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    AND             reduce using rule 116 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    OR              reduce using rule 116 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    PERCENTAGE      reduce using rule 116 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    COMMA           reduce using rule 116 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    TICK            reduce using rule 116 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    R_BRACK         reduce using rule 116 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    R_PAREN         reduce using rule 116 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    COLON           reduce using rule 116 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)


state 77

    (108) DRAW_RECTANGLE -> DRAW_RECTANGLE_R . L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN

    L_PAREN         shift and go to state 119


state 78

    (114) PREDEFINED_SOLS -> DRAW_LINE .

    MULTIPLY        reduce using rule 114 (PREDEFINED_SOLS -> DRAW_LINE .)
    DIVIDE          reduce using rule 114 (PREDEFINED_SOLS -> DRAW_LINE .)
    PLUS            reduce using rule 114 (PREDEFINED_SOLS -> DRAW_LINE .)
    MINUS           reduce using rule 114 (PREDEFINED_SOLS -> DRAW_LINE .)
    LESS_T          reduce using rule 114 (PREDEFINED_SOLS -> DRAW_LINE .)
    GREATER_T       reduce using rule 114 (PREDEFINED_SOLS -> DRAW_LINE .)
    GREATER_T_EQUALS reduce using rule 114 (PREDEFINED_SOLS -> DRAW_LINE .)
    LESS_T_EQUALS   reduce using rule 114 (PREDEFINED_SOLS -> DRAW_LINE .)
    IS              reduce using rule 114 (PREDEFINED_SOLS -> DRAW_LINE .)
    AND             reduce using rule 114 (PREDEFINED_SOLS -> DRAW_LINE .)
    OR              reduce using rule 114 (PREDEFINED_SOLS -> DRAW_LINE .)
    PERCENTAGE      reduce using rule 114 (PREDEFINED_SOLS -> DRAW_LINE .)
    COMMA           reduce using rule 114 (PREDEFINED_SOLS -> DRAW_LINE .)
    TICK            reduce using rule 114 (PREDEFINED_SOLS -> DRAW_LINE .)
    R_BRACK         reduce using rule 114 (PREDEFINED_SOLS -> DRAW_LINE .)
    R_PAREN         reduce using rule 114 (PREDEFINED_SOLS -> DRAW_LINE .)
    COLON           reduce using rule 114 (PREDEFINED_SOLS -> DRAW_LINE .)


state 79

    (69) ID_REF -> ID . O
    (92) SOLUTION_CALL -> ID . L_PAREN V R_PAREN
    (70) O -> . L_BRACK EXPRESSION R_BRACK
    (71) O -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 120
    L_BRACK         shift and go to state 121
    MULTIPLY        reduce using rule 122 (empty -> .)
    DIVIDE          reduce using rule 122 (empty -> .)
    PLUS            reduce using rule 122 (empty -> .)
    MINUS           reduce using rule 122 (empty -> .)
    LESS_T          reduce using rule 122 (empty -> .)
    GREATER_T       reduce using rule 122 (empty -> .)
    GREATER_T_EQUALS reduce using rule 122 (empty -> .)
    LESS_T_EQUALS   reduce using rule 122 (empty -> .)
    IS              reduce using rule 122 (empty -> .)
    AND             reduce using rule 122 (empty -> .)
    OR              reduce using rule 122 (empty -> .)
    PERCENTAGE      reduce using rule 122 (empty -> .)
    COMMA           reduce using rule 122 (empty -> .)
    TICK            reduce using rule 122 (empty -> .)
    R_BRACK         reduce using rule 122 (empty -> .)
    R_PAREN         reduce using rule 122 (empty -> .)
    COLON           reduce using rule 122 (empty -> .)

    empty                          shift and go to state 123
    O                              shift and go to state 122

state 80

    (117) PREDEFINED_SOLS -> MOVE_UP .

    MULTIPLY        reduce using rule 117 (PREDEFINED_SOLS -> MOVE_UP .)
    DIVIDE          reduce using rule 117 (PREDEFINED_SOLS -> MOVE_UP .)
    PLUS            reduce using rule 117 (PREDEFINED_SOLS -> MOVE_UP .)
    MINUS           reduce using rule 117 (PREDEFINED_SOLS -> MOVE_UP .)
    LESS_T          reduce using rule 117 (PREDEFINED_SOLS -> MOVE_UP .)
    GREATER_T       reduce using rule 117 (PREDEFINED_SOLS -> MOVE_UP .)
    GREATER_T_EQUALS reduce using rule 117 (PREDEFINED_SOLS -> MOVE_UP .)
    LESS_T_EQUALS   reduce using rule 117 (PREDEFINED_SOLS -> MOVE_UP .)
    IS              reduce using rule 117 (PREDEFINED_SOLS -> MOVE_UP .)
    AND             reduce using rule 117 (PREDEFINED_SOLS -> MOVE_UP .)
    OR              reduce using rule 117 (PREDEFINED_SOLS -> MOVE_UP .)
    PERCENTAGE      reduce using rule 117 (PREDEFINED_SOLS -> MOVE_UP .)
    COMMA           reduce using rule 117 (PREDEFINED_SOLS -> MOVE_UP .)
    TICK            reduce using rule 117 (PREDEFINED_SOLS -> MOVE_UP .)
    R_BRACK         reduce using rule 117 (PREDEFINED_SOLS -> MOVE_UP .)
    R_PAREN         reduce using rule 117 (PREDEFINED_SOLS -> MOVE_UP .)
    COLON           reduce using rule 117 (PREDEFINED_SOLS -> MOVE_UP .)


state 81

    (63) CON_VAR -> FLOAT_CONT .

    MULTIPLY        reduce using rule 63 (CON_VAR -> FLOAT_CONT .)
    DIVIDE          reduce using rule 63 (CON_VAR -> FLOAT_CONT .)
    PLUS            reduce using rule 63 (CON_VAR -> FLOAT_CONT .)
    MINUS           reduce using rule 63 (CON_VAR -> FLOAT_CONT .)
    LESS_T          reduce using rule 63 (CON_VAR -> FLOAT_CONT .)
    GREATER_T       reduce using rule 63 (CON_VAR -> FLOAT_CONT .)
    GREATER_T_EQUALS reduce using rule 63 (CON_VAR -> FLOAT_CONT .)
    LESS_T_EQUALS   reduce using rule 63 (CON_VAR -> FLOAT_CONT .)
    IS              reduce using rule 63 (CON_VAR -> FLOAT_CONT .)
    AND             reduce using rule 63 (CON_VAR -> FLOAT_CONT .)
    OR              reduce using rule 63 (CON_VAR -> FLOAT_CONT .)
    PERCENTAGE      reduce using rule 63 (CON_VAR -> FLOAT_CONT .)
    COMMA           reduce using rule 63 (CON_VAR -> FLOAT_CONT .)
    TICK            reduce using rule 63 (CON_VAR -> FLOAT_CONT .)
    R_BRACK         reduce using rule 63 (CON_VAR -> FLOAT_CONT .)
    R_PAREN         reduce using rule 63 (CON_VAR -> FLOAT_CONT .)
    COLON           reduce using rule 63 (CON_VAR -> FLOAT_CONT .)


state 82

    (109) MOVE_UP -> MOVE_UP_R . L_PAREN EXPRESSION R_PAREN

    L_PAREN         shift and go to state 124


state 83

    (66) CON_VAR -> PREDEFINED_SOLS .

    MULTIPLY        reduce using rule 66 (CON_VAR -> PREDEFINED_SOLS .)
    DIVIDE          reduce using rule 66 (CON_VAR -> PREDEFINED_SOLS .)
    PLUS            reduce using rule 66 (CON_VAR -> PREDEFINED_SOLS .)
    MINUS           reduce using rule 66 (CON_VAR -> PREDEFINED_SOLS .)
    LESS_T          reduce using rule 66 (CON_VAR -> PREDEFINED_SOLS .)
    GREATER_T       reduce using rule 66 (CON_VAR -> PREDEFINED_SOLS .)
    GREATER_T_EQUALS reduce using rule 66 (CON_VAR -> PREDEFINED_SOLS .)
    LESS_T_EQUALS   reduce using rule 66 (CON_VAR -> PREDEFINED_SOLS .)
    IS              reduce using rule 66 (CON_VAR -> PREDEFINED_SOLS .)
    AND             reduce using rule 66 (CON_VAR -> PREDEFINED_SOLS .)
    OR              reduce using rule 66 (CON_VAR -> PREDEFINED_SOLS .)
    PERCENTAGE      reduce using rule 66 (CON_VAR -> PREDEFINED_SOLS .)
    COMMA           reduce using rule 66 (CON_VAR -> PREDEFINED_SOLS .)
    TICK            reduce using rule 66 (CON_VAR -> PREDEFINED_SOLS .)
    R_BRACK         reduce using rule 66 (CON_VAR -> PREDEFINED_SOLS .)
    R_PAREN         reduce using rule 66 (CON_VAR -> PREDEFINED_SOLS .)
    COLON           reduce using rule 66 (CON_VAR -> PREDEFINED_SOLS .)


state 84

    (119) PREDEFINED_SOLS -> MOVE_DOWN .

    MULTIPLY        reduce using rule 119 (PREDEFINED_SOLS -> MOVE_DOWN .)
    DIVIDE          reduce using rule 119 (PREDEFINED_SOLS -> MOVE_DOWN .)
    PLUS            reduce using rule 119 (PREDEFINED_SOLS -> MOVE_DOWN .)
    MINUS           reduce using rule 119 (PREDEFINED_SOLS -> MOVE_DOWN .)
    LESS_T          reduce using rule 119 (PREDEFINED_SOLS -> MOVE_DOWN .)
    GREATER_T       reduce using rule 119 (PREDEFINED_SOLS -> MOVE_DOWN .)
    GREATER_T_EQUALS reduce using rule 119 (PREDEFINED_SOLS -> MOVE_DOWN .)
    LESS_T_EQUALS   reduce using rule 119 (PREDEFINED_SOLS -> MOVE_DOWN .)
    IS              reduce using rule 119 (PREDEFINED_SOLS -> MOVE_DOWN .)
    AND             reduce using rule 119 (PREDEFINED_SOLS -> MOVE_DOWN .)
    OR              reduce using rule 119 (PREDEFINED_SOLS -> MOVE_DOWN .)
    PERCENTAGE      reduce using rule 119 (PREDEFINED_SOLS -> MOVE_DOWN .)
    COMMA           reduce using rule 119 (PREDEFINED_SOLS -> MOVE_DOWN .)
    TICK            reduce using rule 119 (PREDEFINED_SOLS -> MOVE_DOWN .)
    R_BRACK         reduce using rule 119 (PREDEFINED_SOLS -> MOVE_DOWN .)
    R_PAREN         reduce using rule 119 (PREDEFINED_SOLS -> MOVE_DOWN .)
    COLON           reduce using rule 119 (PREDEFINED_SOLS -> MOVE_DOWN .)


state 85

    (110) MOVE_RIGHT -> MOVE_RIGHT_R . L_PAREN EXPRESSION R_PAREN

    L_PAREN         shift and go to state 125


state 86

    (115) PREDEFINED_SOLS -> DRAW_CIRCLE .

    MULTIPLY        reduce using rule 115 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    DIVIDE          reduce using rule 115 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    PLUS            reduce using rule 115 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    MINUS           reduce using rule 115 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    LESS_T          reduce using rule 115 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    GREATER_T       reduce using rule 115 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    GREATER_T_EQUALS reduce using rule 115 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    LESS_T_EQUALS   reduce using rule 115 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    IS              reduce using rule 115 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    AND             reduce using rule 115 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    OR              reduce using rule 115 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    PERCENTAGE      reduce using rule 115 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    COMMA           reduce using rule 115 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    TICK            reduce using rule 115 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    R_BRACK         reduce using rule 115 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    R_PAREN         reduce using rule 115 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    COLON           reduce using rule 115 (PREDEFINED_SOLS -> DRAW_CIRCLE .)


state 87

    (54) FACTOR -> L_PAREN EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 126


state 88

    (44) EXP -> TERM I .

    LESS_T          reduce using rule 44 (EXP -> TERM I .)
    GREATER_T       reduce using rule 44 (EXP -> TERM I .)
    GREATER_T_EQUALS reduce using rule 44 (EXP -> TERM I .)
    LESS_T_EQUALS   reduce using rule 44 (EXP -> TERM I .)
    IS              reduce using rule 44 (EXP -> TERM I .)
    AND             reduce using rule 44 (EXP -> TERM I .)
    OR              reduce using rule 44 (EXP -> TERM I .)
    PERCENTAGE      reduce using rule 44 (EXP -> TERM I .)
    COMMA           reduce using rule 44 (EXP -> TERM I .)
    TICK            reduce using rule 44 (EXP -> TERM I .)
    R_BRACK         reduce using rule 44 (EXP -> TERM I .)
    R_PAREN         reduce using rule 44 (EXP -> TERM I .)
    COLON           reduce using rule 44 (EXP -> TERM I .)


state 89

    (45) I -> J . EXP
    (44) EXP -> . TERM I
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    M                              shift and go to state 47
    EXP                            shift and go to state 127
    FACTOR                         shift and go to state 52
    empty                          shift and go to state 55

state 90

    (47) J -> PLUS .

    L_PAREN         reduce using rule 47 (J -> PLUS .)
    PLUS            reduce using rule 47 (J -> PLUS .)
    MINUS           reduce using rule 47 (J -> PLUS .)
    INT_CONT        reduce using rule 47 (J -> PLUS .)
    STRING_CONT     reduce using rule 47 (J -> PLUS .)
    CHAR_CONT       reduce using rule 47 (J -> PLUS .)
    FLOAT_CONT      reduce using rule 47 (J -> PLUS .)
    BOOL_CONT       reduce using rule 47 (J -> PLUS .)
    ID              reduce using rule 47 (J -> PLUS .)
    DRAW_LINE_R     reduce using rule 47 (J -> PLUS .)
    DRAW_CIRCLE_R   reduce using rule 47 (J -> PLUS .)
    DRAW_RECTANGLE_R reduce using rule 47 (J -> PLUS .)
    MOVE_UP_R       reduce using rule 47 (J -> PLUS .)
    MOVE_RIGHT_R    reduce using rule 47 (J -> PLUS .)
    MOVE_DOWN_R     reduce using rule 47 (J -> PLUS .)
    MOVE_LEFT_R     reduce using rule 47 (J -> PLUS .)
    PRINT_R         reduce using rule 47 (J -> PLUS .)


state 91

    (48) J -> MINUS .

    L_PAREN         reduce using rule 48 (J -> MINUS .)
    PLUS            reduce using rule 48 (J -> MINUS .)
    MINUS           reduce using rule 48 (J -> MINUS .)
    INT_CONT        reduce using rule 48 (J -> MINUS .)
    STRING_CONT     reduce using rule 48 (J -> MINUS .)
    CHAR_CONT       reduce using rule 48 (J -> MINUS .)
    FLOAT_CONT      reduce using rule 48 (J -> MINUS .)
    BOOL_CONT       reduce using rule 48 (J -> MINUS .)
    ID              reduce using rule 48 (J -> MINUS .)
    DRAW_LINE_R     reduce using rule 48 (J -> MINUS .)
    DRAW_CIRCLE_R   reduce using rule 48 (J -> MINUS .)
    DRAW_RECTANGLE_R reduce using rule 48 (J -> MINUS .)
    MOVE_UP_R       reduce using rule 48 (J -> MINUS .)
    MOVE_RIGHT_R    reduce using rule 48 (J -> MINUS .)
    MOVE_DOWN_R     reduce using rule 48 (J -> MINUS .)
    MOVE_LEFT_R     reduce using rule 48 (J -> MINUS .)
    PRINT_R         reduce using rule 48 (J -> MINUS .)


state 92

    (46) I -> empty .

    LESS_T          reduce using rule 46 (I -> empty .)
    GREATER_T       reduce using rule 46 (I -> empty .)
    GREATER_T_EQUALS reduce using rule 46 (I -> empty .)
    LESS_T_EQUALS   reduce using rule 46 (I -> empty .)
    IS              reduce using rule 46 (I -> empty .)
    AND             reduce using rule 46 (I -> empty .)
    OR              reduce using rule 46 (I -> empty .)
    PERCENTAGE      reduce using rule 46 (I -> empty .)
    COMMA           reduce using rule 46 (I -> empty .)
    TICK            reduce using rule 46 (I -> empty .)
    R_BRACK         reduce using rule 46 (I -> empty .)
    R_PAREN         reduce using rule 46 (I -> empty .)
    COLON           reduce using rule 46 (I -> empty .)


state 93

    (41) H -> AND .

    L_PAREN         reduce using rule 41 (H -> AND .)
    PLUS            reduce using rule 41 (H -> AND .)
    MINUS           reduce using rule 41 (H -> AND .)
    INT_CONT        reduce using rule 41 (H -> AND .)
    STRING_CONT     reduce using rule 41 (H -> AND .)
    CHAR_CONT       reduce using rule 41 (H -> AND .)
    FLOAT_CONT      reduce using rule 41 (H -> AND .)
    BOOL_CONT       reduce using rule 41 (H -> AND .)
    ID              reduce using rule 41 (H -> AND .)
    DRAW_LINE_R     reduce using rule 41 (H -> AND .)
    DRAW_CIRCLE_R   reduce using rule 41 (H -> AND .)
    DRAW_RECTANGLE_R reduce using rule 41 (H -> AND .)
    MOVE_UP_R       reduce using rule 41 (H -> AND .)
    MOVE_RIGHT_R    reduce using rule 41 (H -> AND .)
    MOVE_DOWN_R     reduce using rule 41 (H -> AND .)
    MOVE_LEFT_R     reduce using rule 41 (H -> AND .)
    PRINT_R         reduce using rule 41 (H -> AND .)


state 94

    (33) EXPRESSION -> EXP G .

    COMMA           reduce using rule 33 (EXPRESSION -> EXP G .)
    R_PAREN         reduce using rule 33 (EXPRESSION -> EXP G .)
    COLON           reduce using rule 33 (EXPRESSION -> EXP G .)
    TICK            reduce using rule 33 (EXPRESSION -> EXP G .)
    R_BRACK         reduce using rule 33 (EXPRESSION -> EXP G .)


state 95

    (34) G -> H . EXP
    (44) EXP -> . TERM I
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    M                              shift and go to state 47
    EXP                            shift and go to state 128
    FACTOR                         shift and go to state 52
    empty                          shift and go to state 55

state 96

    (40) H -> IS .

    L_PAREN         reduce using rule 40 (H -> IS .)
    PLUS            reduce using rule 40 (H -> IS .)
    MINUS           reduce using rule 40 (H -> IS .)
    INT_CONT        reduce using rule 40 (H -> IS .)
    STRING_CONT     reduce using rule 40 (H -> IS .)
    CHAR_CONT       reduce using rule 40 (H -> IS .)
    FLOAT_CONT      reduce using rule 40 (H -> IS .)
    BOOL_CONT       reduce using rule 40 (H -> IS .)
    ID              reduce using rule 40 (H -> IS .)
    DRAW_LINE_R     reduce using rule 40 (H -> IS .)
    DRAW_CIRCLE_R   reduce using rule 40 (H -> IS .)
    DRAW_RECTANGLE_R reduce using rule 40 (H -> IS .)
    MOVE_UP_R       reduce using rule 40 (H -> IS .)
    MOVE_RIGHT_R    reduce using rule 40 (H -> IS .)
    MOVE_DOWN_R     reduce using rule 40 (H -> IS .)
    MOVE_LEFT_R     reduce using rule 40 (H -> IS .)
    PRINT_R         reduce using rule 40 (H -> IS .)


state 97

    (36) H -> LESS_T .

    L_PAREN         reduce using rule 36 (H -> LESS_T .)
    PLUS            reduce using rule 36 (H -> LESS_T .)
    MINUS           reduce using rule 36 (H -> LESS_T .)
    INT_CONT        reduce using rule 36 (H -> LESS_T .)
    STRING_CONT     reduce using rule 36 (H -> LESS_T .)
    CHAR_CONT       reduce using rule 36 (H -> LESS_T .)
    FLOAT_CONT      reduce using rule 36 (H -> LESS_T .)
    BOOL_CONT       reduce using rule 36 (H -> LESS_T .)
    ID              reduce using rule 36 (H -> LESS_T .)
    DRAW_LINE_R     reduce using rule 36 (H -> LESS_T .)
    DRAW_CIRCLE_R   reduce using rule 36 (H -> LESS_T .)
    DRAW_RECTANGLE_R reduce using rule 36 (H -> LESS_T .)
    MOVE_UP_R       reduce using rule 36 (H -> LESS_T .)
    MOVE_RIGHT_R    reduce using rule 36 (H -> LESS_T .)
    MOVE_DOWN_R     reduce using rule 36 (H -> LESS_T .)
    MOVE_LEFT_R     reduce using rule 36 (H -> LESS_T .)
    PRINT_R         reduce using rule 36 (H -> LESS_T .)


state 98

    (39) H -> LESS_T_EQUALS .

    L_PAREN         reduce using rule 39 (H -> LESS_T_EQUALS .)
    PLUS            reduce using rule 39 (H -> LESS_T_EQUALS .)
    MINUS           reduce using rule 39 (H -> LESS_T_EQUALS .)
    INT_CONT        reduce using rule 39 (H -> LESS_T_EQUALS .)
    STRING_CONT     reduce using rule 39 (H -> LESS_T_EQUALS .)
    CHAR_CONT       reduce using rule 39 (H -> LESS_T_EQUALS .)
    FLOAT_CONT      reduce using rule 39 (H -> LESS_T_EQUALS .)
    BOOL_CONT       reduce using rule 39 (H -> LESS_T_EQUALS .)
    ID              reduce using rule 39 (H -> LESS_T_EQUALS .)
    DRAW_LINE_R     reduce using rule 39 (H -> LESS_T_EQUALS .)
    DRAW_CIRCLE_R   reduce using rule 39 (H -> LESS_T_EQUALS .)
    DRAW_RECTANGLE_R reduce using rule 39 (H -> LESS_T_EQUALS .)
    MOVE_UP_R       reduce using rule 39 (H -> LESS_T_EQUALS .)
    MOVE_RIGHT_R    reduce using rule 39 (H -> LESS_T_EQUALS .)
    MOVE_DOWN_R     reduce using rule 39 (H -> LESS_T_EQUALS .)
    MOVE_LEFT_R     reduce using rule 39 (H -> LESS_T_EQUALS .)
    PRINT_R         reduce using rule 39 (H -> LESS_T_EQUALS .)


state 99

    (37) H -> GREATER_T .

    L_PAREN         reduce using rule 37 (H -> GREATER_T .)
    PLUS            reduce using rule 37 (H -> GREATER_T .)
    MINUS           reduce using rule 37 (H -> GREATER_T .)
    INT_CONT        reduce using rule 37 (H -> GREATER_T .)
    STRING_CONT     reduce using rule 37 (H -> GREATER_T .)
    CHAR_CONT       reduce using rule 37 (H -> GREATER_T .)
    FLOAT_CONT      reduce using rule 37 (H -> GREATER_T .)
    BOOL_CONT       reduce using rule 37 (H -> GREATER_T .)
    ID              reduce using rule 37 (H -> GREATER_T .)
    DRAW_LINE_R     reduce using rule 37 (H -> GREATER_T .)
    DRAW_CIRCLE_R   reduce using rule 37 (H -> GREATER_T .)
    DRAW_RECTANGLE_R reduce using rule 37 (H -> GREATER_T .)
    MOVE_UP_R       reduce using rule 37 (H -> GREATER_T .)
    MOVE_RIGHT_R    reduce using rule 37 (H -> GREATER_T .)
    MOVE_DOWN_R     reduce using rule 37 (H -> GREATER_T .)
    MOVE_LEFT_R     reduce using rule 37 (H -> GREATER_T .)
    PRINT_R         reduce using rule 37 (H -> GREATER_T .)


state 100

    (38) H -> GREATER_T_EQUALS .

    L_PAREN         reduce using rule 38 (H -> GREATER_T_EQUALS .)
    PLUS            reduce using rule 38 (H -> GREATER_T_EQUALS .)
    MINUS           reduce using rule 38 (H -> GREATER_T_EQUALS .)
    INT_CONT        reduce using rule 38 (H -> GREATER_T_EQUALS .)
    STRING_CONT     reduce using rule 38 (H -> GREATER_T_EQUALS .)
    CHAR_CONT       reduce using rule 38 (H -> GREATER_T_EQUALS .)
    FLOAT_CONT      reduce using rule 38 (H -> GREATER_T_EQUALS .)
    BOOL_CONT       reduce using rule 38 (H -> GREATER_T_EQUALS .)
    ID              reduce using rule 38 (H -> GREATER_T_EQUALS .)
    DRAW_LINE_R     reduce using rule 38 (H -> GREATER_T_EQUALS .)
    DRAW_CIRCLE_R   reduce using rule 38 (H -> GREATER_T_EQUALS .)
    DRAW_RECTANGLE_R reduce using rule 38 (H -> GREATER_T_EQUALS .)
    MOVE_UP_R       reduce using rule 38 (H -> GREATER_T_EQUALS .)
    MOVE_RIGHT_R    reduce using rule 38 (H -> GREATER_T_EQUALS .)
    MOVE_DOWN_R     reduce using rule 38 (H -> GREATER_T_EQUALS .)
    MOVE_LEFT_R     reduce using rule 38 (H -> GREATER_T_EQUALS .)
    PRINT_R         reduce using rule 38 (H -> GREATER_T_EQUALS .)


state 101

    (43) H -> PERCENTAGE .

    L_PAREN         reduce using rule 43 (H -> PERCENTAGE .)
    PLUS            reduce using rule 43 (H -> PERCENTAGE .)
    MINUS           reduce using rule 43 (H -> PERCENTAGE .)
    INT_CONT        reduce using rule 43 (H -> PERCENTAGE .)
    STRING_CONT     reduce using rule 43 (H -> PERCENTAGE .)
    CHAR_CONT       reduce using rule 43 (H -> PERCENTAGE .)
    FLOAT_CONT      reduce using rule 43 (H -> PERCENTAGE .)
    BOOL_CONT       reduce using rule 43 (H -> PERCENTAGE .)
    ID              reduce using rule 43 (H -> PERCENTAGE .)
    DRAW_LINE_R     reduce using rule 43 (H -> PERCENTAGE .)
    DRAW_CIRCLE_R   reduce using rule 43 (H -> PERCENTAGE .)
    DRAW_RECTANGLE_R reduce using rule 43 (H -> PERCENTAGE .)
    MOVE_UP_R       reduce using rule 43 (H -> PERCENTAGE .)
    MOVE_RIGHT_R    reduce using rule 43 (H -> PERCENTAGE .)
    MOVE_DOWN_R     reduce using rule 43 (H -> PERCENTAGE .)
    MOVE_LEFT_R     reduce using rule 43 (H -> PERCENTAGE .)
    PRINT_R         reduce using rule 43 (H -> PERCENTAGE .)


state 102

    (42) H -> OR .

    L_PAREN         reduce using rule 42 (H -> OR .)
    PLUS            reduce using rule 42 (H -> OR .)
    MINUS           reduce using rule 42 (H -> OR .)
    INT_CONT        reduce using rule 42 (H -> OR .)
    STRING_CONT     reduce using rule 42 (H -> OR .)
    CHAR_CONT       reduce using rule 42 (H -> OR .)
    FLOAT_CONT      reduce using rule 42 (H -> OR .)
    BOOL_CONT       reduce using rule 42 (H -> OR .)
    ID              reduce using rule 42 (H -> OR .)
    DRAW_LINE_R     reduce using rule 42 (H -> OR .)
    DRAW_CIRCLE_R   reduce using rule 42 (H -> OR .)
    DRAW_RECTANGLE_R reduce using rule 42 (H -> OR .)
    MOVE_UP_R       reduce using rule 42 (H -> OR .)
    MOVE_RIGHT_R    reduce using rule 42 (H -> OR .)
    MOVE_DOWN_R     reduce using rule 42 (H -> OR .)
    MOVE_LEFT_R     reduce using rule 42 (H -> OR .)
    PRINT_R         reduce using rule 42 (H -> OR .)


state 103

    (35) G -> empty .

    COMMA           reduce using rule 35 (G -> empty .)
    TICK            reduce using rule 35 (G -> empty .)
    R_BRACK         reduce using rule 35 (G -> empty .)
    R_PAREN         reduce using rule 35 (G -> empty .)
    COLON           reduce using rule 35 (G -> empty .)


state 104

    (53) L -> DIVIDE .

    L_PAREN         reduce using rule 53 (L -> DIVIDE .)
    PLUS            reduce using rule 53 (L -> DIVIDE .)
    MINUS           reduce using rule 53 (L -> DIVIDE .)
    INT_CONT        reduce using rule 53 (L -> DIVIDE .)
    STRING_CONT     reduce using rule 53 (L -> DIVIDE .)
    CHAR_CONT       reduce using rule 53 (L -> DIVIDE .)
    FLOAT_CONT      reduce using rule 53 (L -> DIVIDE .)
    BOOL_CONT       reduce using rule 53 (L -> DIVIDE .)
    ID              reduce using rule 53 (L -> DIVIDE .)
    DRAW_LINE_R     reduce using rule 53 (L -> DIVIDE .)
    DRAW_CIRCLE_R   reduce using rule 53 (L -> DIVIDE .)
    DRAW_RECTANGLE_R reduce using rule 53 (L -> DIVIDE .)
    MOVE_UP_R       reduce using rule 53 (L -> DIVIDE .)
    MOVE_RIGHT_R    reduce using rule 53 (L -> DIVIDE .)
    MOVE_DOWN_R     reduce using rule 53 (L -> DIVIDE .)
    MOVE_LEFT_R     reduce using rule 53 (L -> DIVIDE .)
    PRINT_R         reduce using rule 53 (L -> DIVIDE .)


state 105

    (49) TERM -> FACTOR K .

    PLUS            reduce using rule 49 (TERM -> FACTOR K .)
    MINUS           reduce using rule 49 (TERM -> FACTOR K .)
    LESS_T          reduce using rule 49 (TERM -> FACTOR K .)
    GREATER_T       reduce using rule 49 (TERM -> FACTOR K .)
    GREATER_T_EQUALS reduce using rule 49 (TERM -> FACTOR K .)
    LESS_T_EQUALS   reduce using rule 49 (TERM -> FACTOR K .)
    IS              reduce using rule 49 (TERM -> FACTOR K .)
    AND             reduce using rule 49 (TERM -> FACTOR K .)
    OR              reduce using rule 49 (TERM -> FACTOR K .)
    PERCENTAGE      reduce using rule 49 (TERM -> FACTOR K .)
    COMMA           reduce using rule 49 (TERM -> FACTOR K .)
    R_BRACK         reduce using rule 49 (TERM -> FACTOR K .)
    R_PAREN         reduce using rule 49 (TERM -> FACTOR K .)
    TICK            reduce using rule 49 (TERM -> FACTOR K .)
    COLON           reduce using rule 49 (TERM -> FACTOR K .)


state 106

    (50) K -> L . TERM
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 129
    M                              shift and go to state 47
    FACTOR                         shift and go to state 52
    empty                          shift and go to state 55

state 107

    (52) L -> MULTIPLY .

    L_PAREN         reduce using rule 52 (L -> MULTIPLY .)
    PLUS            reduce using rule 52 (L -> MULTIPLY .)
    MINUS           reduce using rule 52 (L -> MULTIPLY .)
    INT_CONT        reduce using rule 52 (L -> MULTIPLY .)
    STRING_CONT     reduce using rule 52 (L -> MULTIPLY .)
    CHAR_CONT       reduce using rule 52 (L -> MULTIPLY .)
    FLOAT_CONT      reduce using rule 52 (L -> MULTIPLY .)
    BOOL_CONT       reduce using rule 52 (L -> MULTIPLY .)
    ID              reduce using rule 52 (L -> MULTIPLY .)
    DRAW_LINE_R     reduce using rule 52 (L -> MULTIPLY .)
    DRAW_CIRCLE_R   reduce using rule 52 (L -> MULTIPLY .)
    DRAW_RECTANGLE_R reduce using rule 52 (L -> MULTIPLY .)
    MOVE_UP_R       reduce using rule 52 (L -> MULTIPLY .)
    MOVE_RIGHT_R    reduce using rule 52 (L -> MULTIPLY .)
    MOVE_DOWN_R     reduce using rule 52 (L -> MULTIPLY .)
    MOVE_LEFT_R     reduce using rule 52 (L -> MULTIPLY .)
    PRINT_R         reduce using rule 52 (L -> MULTIPLY .)


state 108

    (51) K -> empty .

    PLUS            reduce using rule 51 (K -> empty .)
    MINUS           reduce using rule 51 (K -> empty .)
    LESS_T          reduce using rule 51 (K -> empty .)
    GREATER_T       reduce using rule 51 (K -> empty .)
    GREATER_T_EQUALS reduce using rule 51 (K -> empty .)
    LESS_T_EQUALS   reduce using rule 51 (K -> empty .)
    IS              reduce using rule 51 (K -> empty .)
    AND             reduce using rule 51 (K -> empty .)
    OR              reduce using rule 51 (K -> empty .)
    PERCENTAGE      reduce using rule 51 (K -> empty .)
    COMMA           reduce using rule 51 (K -> empty .)
    TICK            reduce using rule 51 (K -> empty .)
    R_BRACK         reduce using rule 51 (K -> empty .)
    R_PAREN         reduce using rule 51 (K -> empty .)
    COLON           reduce using rule 51 (K -> empty .)


state 109

    (20) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates . L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK

    L_PAREN         shift and go to state 130


state 110

    (105) MAIN_DEFINITION -> INT MAIN_R L_PAREN R_PAREN . COLON S_BLOCK TICK

    COLON           shift and go to state 131


state 111

    (72) LIST_EXP -> L_BRACK EXPRESSION P . R_BRACK

    R_BRACK         shift and go to state 132


state 112

    (73) P -> COMMA . EXPRESSION P
    (33) EXPRESSION -> . EXP G
    (44) EXP -> . TERM I
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    M                              shift and go to state 47
    EXP                            shift and go to state 51
    FACTOR                         shift and go to state 52
    EXPRESSION                     shift and go to state 133
    empty                          shift and go to state 55

state 113

    (74) P -> empty .

    R_BRACK         reduce using rule 74 (P -> empty .)


state 114

    (107) DRAW_LINE -> DRAW_LINE_R L_PAREN . EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
    (33) EXPRESSION -> . EXP G
    (44) EXP -> . TERM I
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    M                              shift and go to state 47
    EXP                            shift and go to state 51
    FACTOR                         shift and go to state 52
    EXPRESSION                     shift and go to state 134
    empty                          shift and go to state 55

state 115

    (111) MOVE_DOWN -> MOVE_DOWN_R L_PAREN . EXPRESSION R_PAREN
    (33) EXPRESSION -> . EXP G
    (44) EXP -> . TERM I
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    M                              shift and go to state 47
    EXP                            shift and go to state 51
    FACTOR                         shift and go to state 52
    EXPRESSION                     shift and go to state 135
    empty                          shift and go to state 55

state 116

    (113) PRINT -> PRINT_R L_PAREN . EXPRESSION R_PAREN
    (33) EXPRESSION -> . EXP G
    (44) EXP -> . TERM I
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    M                              shift and go to state 47
    EXP                            shift and go to state 51
    FACTOR                         shift and go to state 52
    EXPRESSION                     shift and go to state 136
    empty                          shift and go to state 55

state 117

    (112) MOVE_LEFT -> MOVE_LEFT_R L_PAREN . EXPRESSION R_PAREN
    (33) EXPRESSION -> . EXP G
    (44) EXP -> . TERM I
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    M                              shift and go to state 47
    EXP                            shift and go to state 51
    FACTOR                         shift and go to state 52
    EXPRESSION                     shift and go to state 137
    empty                          shift and go to state 55

state 118

    (106) DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN . EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
    (33) EXPRESSION -> . EXP G
    (44) EXP -> . TERM I
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    M                              shift and go to state 47
    EXP                            shift and go to state 51
    FACTOR                         shift and go to state 52
    EXPRESSION                     shift and go to state 138
    empty                          shift and go to state 55

state 119

    (108) DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN . EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
    (33) EXPRESSION -> . EXP G
    (44) EXP -> . TERM I
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    M                              shift and go to state 47
    EXP                            shift and go to state 51
    FACTOR                         shift and go to state 52
    EXPRESSION                     shift and go to state 139
    empty                          shift and go to state 55

state 120

    (92) SOLUTION_CALL -> ID L_PAREN . V R_PAREN
    (93) V -> . W X
    (94) W -> . EXPRESSION
    (95) W -> . NEGATION
    (33) EXPRESSION -> . EXP G
    (67) NEGATION -> . N EXPRESSION
    (44) EXP -> . TERM I
    (68) N -> . NOT
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    NOT             shift and go to state 144
    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    W                              shift and go to state 142
    FACTOR                         shift and go to state 52
    M                              shift and go to state 47
    NEGATION                       shift and go to state 140
    N                              shift and go to state 141
    EXP                            shift and go to state 51
    V                              shift and go to state 143
    EXPRESSION                     shift and go to state 145
    empty                          shift and go to state 55

state 121

    (70) O -> L_BRACK . EXPRESSION R_BRACK
    (33) EXPRESSION -> . EXP G
    (44) EXP -> . TERM I
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    M                              shift and go to state 47
    EXP                            shift and go to state 51
    FACTOR                         shift and go to state 52
    EXPRESSION                     shift and go to state 146
    empty                          shift and go to state 55

state 122

    (69) ID_REF -> ID O .

    EQUALS          reduce using rule 69 (ID_REF -> ID O .)
    MULTIPLY        reduce using rule 69 (ID_REF -> ID O .)
    DIVIDE          reduce using rule 69 (ID_REF -> ID O .)
    PLUS            reduce using rule 69 (ID_REF -> ID O .)
    MINUS           reduce using rule 69 (ID_REF -> ID O .)
    LESS_T          reduce using rule 69 (ID_REF -> ID O .)
    GREATER_T       reduce using rule 69 (ID_REF -> ID O .)
    GREATER_T_EQUALS reduce using rule 69 (ID_REF -> ID O .)
    LESS_T_EQUALS   reduce using rule 69 (ID_REF -> ID O .)
    IS              reduce using rule 69 (ID_REF -> ID O .)
    AND             reduce using rule 69 (ID_REF -> ID O .)
    OR              reduce using rule 69 (ID_REF -> ID O .)
    PERCENTAGE      reduce using rule 69 (ID_REF -> ID O .)
    COMMA           reduce using rule 69 (ID_REF -> ID O .)
    TICK            reduce using rule 69 (ID_REF -> ID O .)
    R_BRACK         reduce using rule 69 (ID_REF -> ID O .)
    R_PAREN         reduce using rule 69 (ID_REF -> ID O .)
    COLON           reduce using rule 69 (ID_REF -> ID O .)


state 123

    (71) O -> empty .

    EQUALS          reduce using rule 71 (O -> empty .)
    MULTIPLY        reduce using rule 71 (O -> empty .)
    DIVIDE          reduce using rule 71 (O -> empty .)
    PLUS            reduce using rule 71 (O -> empty .)
    MINUS           reduce using rule 71 (O -> empty .)
    LESS_T          reduce using rule 71 (O -> empty .)
    GREATER_T       reduce using rule 71 (O -> empty .)
    GREATER_T_EQUALS reduce using rule 71 (O -> empty .)
    LESS_T_EQUALS   reduce using rule 71 (O -> empty .)
    IS              reduce using rule 71 (O -> empty .)
    AND             reduce using rule 71 (O -> empty .)
    OR              reduce using rule 71 (O -> empty .)
    PERCENTAGE      reduce using rule 71 (O -> empty .)
    COMMA           reduce using rule 71 (O -> empty .)
    TICK            reduce using rule 71 (O -> empty .)
    R_BRACK         reduce using rule 71 (O -> empty .)
    R_PAREN         reduce using rule 71 (O -> empty .)
    COLON           reduce using rule 71 (O -> empty .)


state 124

    (109) MOVE_UP -> MOVE_UP_R L_PAREN . EXPRESSION R_PAREN
    (33) EXPRESSION -> . EXP G
    (44) EXP -> . TERM I
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    M                              shift and go to state 47
    EXP                            shift and go to state 51
    FACTOR                         shift and go to state 52
    EXPRESSION                     shift and go to state 147
    empty                          shift and go to state 55

state 125

    (110) MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN . EXPRESSION R_PAREN
    (33) EXPRESSION -> . EXP G
    (44) EXP -> . TERM I
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    M                              shift and go to state 47
    EXP                            shift and go to state 51
    FACTOR                         shift and go to state 52
    EXPRESSION                     shift and go to state 148
    empty                          shift and go to state 55

state 126

    (54) FACTOR -> L_PAREN EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 54 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 54 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    PLUS            reduce using rule 54 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    MINUS           reduce using rule 54 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 54 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 54 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 54 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 54 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    IS              reduce using rule 54 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    AND             reduce using rule 54 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    OR              reduce using rule 54 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 54 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    TICK            reduce using rule 54 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    COLON           reduce using rule 54 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    COMMA           reduce using rule 54 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 54 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 54 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)


state 127

    (45) I -> J EXP .

    LESS_T          reduce using rule 45 (I -> J EXP .)
    GREATER_T       reduce using rule 45 (I -> J EXP .)
    GREATER_T_EQUALS reduce using rule 45 (I -> J EXP .)
    LESS_T_EQUALS   reduce using rule 45 (I -> J EXP .)
    IS              reduce using rule 45 (I -> J EXP .)
    AND             reduce using rule 45 (I -> J EXP .)
    OR              reduce using rule 45 (I -> J EXP .)
    PERCENTAGE      reduce using rule 45 (I -> J EXP .)
    COMMA           reduce using rule 45 (I -> J EXP .)
    TICK            reduce using rule 45 (I -> J EXP .)
    R_BRACK         reduce using rule 45 (I -> J EXP .)
    R_PAREN         reduce using rule 45 (I -> J EXP .)
    COLON           reduce using rule 45 (I -> J EXP .)


state 128

    (34) G -> H EXP .

    COMMA           reduce using rule 34 (G -> H EXP .)
    TICK            reduce using rule 34 (G -> H EXP .)
    R_BRACK         reduce using rule 34 (G -> H EXP .)
    R_PAREN         reduce using rule 34 (G -> H EXP .)
    COLON           reduce using rule 34 (G -> H EXP .)


state 129

    (50) K -> L TERM .

    PLUS            reduce using rule 50 (K -> L TERM .)
    MINUS           reduce using rule 50 (K -> L TERM .)
    LESS_T          reduce using rule 50 (K -> L TERM .)
    GREATER_T       reduce using rule 50 (K -> L TERM .)
    GREATER_T_EQUALS reduce using rule 50 (K -> L TERM .)
    LESS_T_EQUALS   reduce using rule 50 (K -> L TERM .)
    IS              reduce using rule 50 (K -> L TERM .)
    AND             reduce using rule 50 (K -> L TERM .)
    OR              reduce using rule 50 (K -> L TERM .)
    PERCENTAGE      reduce using rule 50 (K -> L TERM .)
    COMMA           reduce using rule 50 (K -> L TERM .)
    TICK            reduce using rule 50 (K -> L TERM .)
    R_BRACK         reduce using rule 50 (K -> L TERM .)
    R_PAREN         reduce using rule 50 (K -> L TERM .)
    COLON           reduce using rule 50 (K -> L TERM .)


state 130

    (20) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN . PARAMS R_PAREN COLON S_BLOCK TICK
    (98) PARAMS -> . TYPE store_type ID check_param_duplicates Y
    (27) TYPE -> . INT
    (28) TYPE -> . FLOAT
    (29) TYPE -> . CHAR
    (30) TYPE -> . STRING
    (31) TYPE -> . BOOL
    (32) TYPE -> . LIST

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 13
    STRING          shift and go to state 8
    BOOL            shift and go to state 14
    LIST            shift and go to state 12

    PARAMS                         shift and go to state 149
    TYPE                           shift and go to state 150

state 131

    (105) MAIN_DEFINITION -> INT MAIN_R L_PAREN R_PAREN COLON . S_BLOCK TICK
    (15) S_BLOCK -> . L_BRACE F R_BRACE

    L_BRACE         shift and go to state 151

    S_BLOCK                        shift and go to state 152

state 132

    (72) LIST_EXP -> L_BRACK EXPRESSION P R_BRACK .

    COMMA           reduce using rule 72 (LIST_EXP -> L_BRACK EXPRESSION P R_BRACK .)
    TICK            reduce using rule 72 (LIST_EXP -> L_BRACK EXPRESSION P R_BRACK .)


state 133

    (73) P -> COMMA EXPRESSION . P
    (73) P -> . COMMA EXPRESSION P
    (74) P -> . empty
    (122) empty -> .

    COMMA           shift and go to state 112
    R_BRACK         reduce using rule 122 (empty -> .)

    P                              shift and go to state 153
    empty                          shift and go to state 113

state 134

    (107) DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION . COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN

    COMMA           shift and go to state 154


state 135

    (111) MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 155


state 136

    (113) PRINT -> PRINT_R L_PAREN EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 156


state 137

    (112) MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 157


state 138

    (106) DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION . COMMA EXPRESSION COMMA EXPRESSION R_PAREN

    COMMA           shift and go to state 158


state 139

    (108) DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION . COMMA EXPRESSION COMMA EXPRESSION R_PAREN

    COMMA           shift and go to state 159


state 140

    (95) W -> NEGATION .

    COMMA           reduce using rule 95 (W -> NEGATION .)
    R_PAREN         reduce using rule 95 (W -> NEGATION .)


state 141

    (67) NEGATION -> N . EXPRESSION
    (33) EXPRESSION -> . EXP G
    (44) EXP -> . TERM I
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    M                              shift and go to state 47
    EXP                            shift and go to state 51
    FACTOR                         shift and go to state 52
    EXPRESSION                     shift and go to state 160
    empty                          shift and go to state 55

state 142

    (93) V -> W . X
    (96) X -> . COMMA V
    (97) X -> . empty
    (122) empty -> .

    COMMA           shift and go to state 162
    R_PAREN         reduce using rule 122 (empty -> .)

    X                              shift and go to state 161
    empty                          shift and go to state 163

state 143

    (92) SOLUTION_CALL -> ID L_PAREN V . R_PAREN

    R_PAREN         shift and go to state 164


state 144

    (68) N -> NOT .

    L_PAREN         reduce using rule 68 (N -> NOT .)
    PLUS            reduce using rule 68 (N -> NOT .)
    MINUS           reduce using rule 68 (N -> NOT .)
    INT_CONT        reduce using rule 68 (N -> NOT .)
    STRING_CONT     reduce using rule 68 (N -> NOT .)
    CHAR_CONT       reduce using rule 68 (N -> NOT .)
    FLOAT_CONT      reduce using rule 68 (N -> NOT .)
    BOOL_CONT       reduce using rule 68 (N -> NOT .)
    ID              reduce using rule 68 (N -> NOT .)
    DRAW_LINE_R     reduce using rule 68 (N -> NOT .)
    DRAW_CIRCLE_R   reduce using rule 68 (N -> NOT .)
    DRAW_RECTANGLE_R reduce using rule 68 (N -> NOT .)
    MOVE_UP_R       reduce using rule 68 (N -> NOT .)
    MOVE_RIGHT_R    reduce using rule 68 (N -> NOT .)
    MOVE_DOWN_R     reduce using rule 68 (N -> NOT .)
    MOVE_LEFT_R     reduce using rule 68 (N -> NOT .)
    PRINT_R         reduce using rule 68 (N -> NOT .)


state 145

    (94) W -> EXPRESSION .

    COMMA           reduce using rule 94 (W -> EXPRESSION .)
    R_PAREN         reduce using rule 94 (W -> EXPRESSION .)


state 146

    (70) O -> L_BRACK EXPRESSION . R_BRACK

    R_BRACK         shift and go to state 165


state 147

    (109) MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 166


state 148

    (110) MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 167


state 149

    (20) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS . R_PAREN COLON S_BLOCK TICK

    R_PAREN         shift and go to state 168


state 150

    (98) PARAMS -> TYPE . store_type ID check_param_duplicates Y
    (5) store_type -> .

    ID              reduce using rule 5 (store_type -> .)

    store_type                     shift and go to state 169

state 151

    (15) S_BLOCK -> L_BRACE . F R_BRACE
    (16) F -> . S_STATUTE F
    (17) F -> . empty
    (18) S_STATUTE -> . VAR_DEFINITIONS
    (19) S_STATUTE -> . STATUTE
    (122) empty -> .
    (3) VAR_DEFINITIONS -> . TYPE store_type A TICK VAR_DEFINITIONS
    (4) VAR_DEFINITIONS -> . empty
    (22) STATUTE -> . CONDITION
    (23) STATUTE -> . CYCLE
    (24) STATUTE -> . ASSIGNATION
    (27) TYPE -> . INT
    (28) TYPE -> . FLOAT
    (29) TYPE -> . CHAR
    (30) TYPE -> . STRING
    (31) TYPE -> . BOOL
    (32) TYPE -> . LIST
    (84) CONDITION -> . IF EXPRESSION COLON BLOCK R TICK
    (82) CYCLE -> . FOR
    (83) CYCLE -> . WHILE
    (75) ASSIGNATION -> . ID_REF EQUALS EXPRESSION TICK
    (81) FOR -> . FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK
    (80) WHILE -> . WHILE_CYCLE EXPRESSION COLON BLOCK TICK
    (69) ID_REF -> . ID O

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR_CYCLE resolved as shift
  ! shift/reduce conflict for WHILE_CYCLE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    R_BRACE         reduce using rule 122 (empty -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 13
    STRING          shift and go to state 8
    BOOL            shift and go to state 14
    LIST            shift and go to state 12
    IF              shift and go to state 182
    FOR_CYCLE       shift and go to state 178
    WHILE_CYCLE     shift and go to state 184
    ID              shift and go to state 181

  ! INT             [ reduce using rule 122 (empty -> .) ]
  ! FLOAT           [ reduce using rule 122 (empty -> .) ]
  ! CHAR            [ reduce using rule 122 (empty -> .) ]
  ! STRING          [ reduce using rule 122 (empty -> .) ]
  ! BOOL            [ reduce using rule 122 (empty -> .) ]
  ! LIST            [ reduce using rule 122 (empty -> .) ]
  ! IF              [ reduce using rule 122 (empty -> .) ]
  ! FOR_CYCLE       [ reduce using rule 122 (empty -> .) ]
  ! WHILE_CYCLE     [ reduce using rule 122 (empty -> .) ]
  ! ID              [ reduce using rule 122 (empty -> .) ]

    STATUTE                        shift and go to state 177
    ID_REF                         shift and go to state 174
    S_STATUTE                      shift and go to state 172
    FOR                            shift and go to state 179
    VAR_DEFINITIONS                shift and go to state 173
    F                              shift and go to state 180
    WHILE                          shift and go to state 170
    CONDITION                      shift and go to state 175
    ASSIGNATION                    shift and go to state 171
    TYPE                           shift and go to state 15
    empty                          shift and go to state 183
    CYCLE                          shift and go to state 176

state 152

    (105) MAIN_DEFINITION -> INT MAIN_R L_PAREN R_PAREN COLON S_BLOCK . TICK

    TICK            shift and go to state 185


state 153

    (73) P -> COMMA EXPRESSION P .

    R_BRACK         reduce using rule 73 (P -> COMMA EXPRESSION P .)


state 154

    (107) DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA . EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
    (33) EXPRESSION -> . EXP G
    (44) EXP -> . TERM I
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    M                              shift and go to state 47
    EXP                            shift and go to state 51
    FACTOR                         shift and go to state 52
    EXPRESSION                     shift and go to state 186
    empty                          shift and go to state 55

state 155

    (111) MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 111 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 111 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    PLUS            reduce using rule 111 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    MINUS           reduce using rule 111 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 111 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 111 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 111 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 111 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    IS              reduce using rule 111 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    AND             reduce using rule 111 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    OR              reduce using rule 111 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 111 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    COMMA           reduce using rule 111 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    TICK            reduce using rule 111 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 111 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 111 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    COLON           reduce using rule 111 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)


state 156

    (113) PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 113 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 113 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    PLUS            reduce using rule 113 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    MINUS           reduce using rule 113 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 113 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 113 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 113 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 113 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    IS              reduce using rule 113 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    AND             reduce using rule 113 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    OR              reduce using rule 113 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 113 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    COMMA           reduce using rule 113 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    TICK            reduce using rule 113 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 113 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 113 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    COLON           reduce using rule 113 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)


state 157

    (112) MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 112 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 112 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    PLUS            reduce using rule 112 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    MINUS           reduce using rule 112 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 112 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 112 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 112 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 112 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    IS              reduce using rule 112 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    AND             reduce using rule 112 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    OR              reduce using rule 112 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 112 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    COMMA           reduce using rule 112 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    TICK            reduce using rule 112 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 112 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 112 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    COLON           reduce using rule 112 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)


state 158

    (106) DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA . EXPRESSION COMMA EXPRESSION R_PAREN
    (33) EXPRESSION -> . EXP G
    (44) EXP -> . TERM I
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    M                              shift and go to state 47
    EXP                            shift and go to state 51
    FACTOR                         shift and go to state 52
    EXPRESSION                     shift and go to state 187
    empty                          shift and go to state 55

state 159

    (108) DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA . EXPRESSION COMMA EXPRESSION R_PAREN
    (33) EXPRESSION -> . EXP G
    (44) EXP -> . TERM I
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    M                              shift and go to state 47
    EXP                            shift and go to state 51
    FACTOR                         shift and go to state 52
    EXPRESSION                     shift and go to state 188
    empty                          shift and go to state 55

state 160

    (67) NEGATION -> N EXPRESSION .

    COMMA           reduce using rule 67 (NEGATION -> N EXPRESSION .)
    R_PAREN         reduce using rule 67 (NEGATION -> N EXPRESSION .)


state 161

    (93) V -> W X .

    R_PAREN         reduce using rule 93 (V -> W X .)


state 162

    (96) X -> COMMA . V
    (93) V -> . W X
    (94) W -> . EXPRESSION
    (95) W -> . NEGATION
    (33) EXPRESSION -> . EXP G
    (67) NEGATION -> . N EXPRESSION
    (44) EXP -> . TERM I
    (68) N -> . NOT
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    NOT             shift and go to state 144
    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    W                              shift and go to state 142
    FACTOR                         shift and go to state 52
    M                              shift and go to state 47
    NEGATION                       shift and go to state 140
    N                              shift and go to state 141
    EXP                            shift and go to state 51
    V                              shift and go to state 189
    EXPRESSION                     shift and go to state 145
    empty                          shift and go to state 55

state 163

    (97) X -> empty .

    R_PAREN         reduce using rule 97 (X -> empty .)


state 164

    (92) SOLUTION_CALL -> ID L_PAREN V R_PAREN .

    MULTIPLY        reduce using rule 92 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    DIVIDE          reduce using rule 92 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    PLUS            reduce using rule 92 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    MINUS           reduce using rule 92 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    LESS_T          reduce using rule 92 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    GREATER_T       reduce using rule 92 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    GREATER_T_EQUALS reduce using rule 92 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    LESS_T_EQUALS   reduce using rule 92 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    IS              reduce using rule 92 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    AND             reduce using rule 92 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    OR              reduce using rule 92 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    PERCENTAGE      reduce using rule 92 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    COMMA           reduce using rule 92 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    TICK            reduce using rule 92 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    R_BRACK         reduce using rule 92 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    R_PAREN         reduce using rule 92 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    COLON           reduce using rule 92 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)


state 165

    (70) O -> L_BRACK EXPRESSION R_BRACK .

    EQUALS          reduce using rule 70 (O -> L_BRACK EXPRESSION R_BRACK .)
    MULTIPLY        reduce using rule 70 (O -> L_BRACK EXPRESSION R_BRACK .)
    DIVIDE          reduce using rule 70 (O -> L_BRACK EXPRESSION R_BRACK .)
    PLUS            reduce using rule 70 (O -> L_BRACK EXPRESSION R_BRACK .)
    MINUS           reduce using rule 70 (O -> L_BRACK EXPRESSION R_BRACK .)
    LESS_T          reduce using rule 70 (O -> L_BRACK EXPRESSION R_BRACK .)
    GREATER_T       reduce using rule 70 (O -> L_BRACK EXPRESSION R_BRACK .)
    GREATER_T_EQUALS reduce using rule 70 (O -> L_BRACK EXPRESSION R_BRACK .)
    LESS_T_EQUALS   reduce using rule 70 (O -> L_BRACK EXPRESSION R_BRACK .)
    IS              reduce using rule 70 (O -> L_BRACK EXPRESSION R_BRACK .)
    AND             reduce using rule 70 (O -> L_BRACK EXPRESSION R_BRACK .)
    OR              reduce using rule 70 (O -> L_BRACK EXPRESSION R_BRACK .)
    PERCENTAGE      reduce using rule 70 (O -> L_BRACK EXPRESSION R_BRACK .)
    COMMA           reduce using rule 70 (O -> L_BRACK EXPRESSION R_BRACK .)
    TICK            reduce using rule 70 (O -> L_BRACK EXPRESSION R_BRACK .)
    R_BRACK         reduce using rule 70 (O -> L_BRACK EXPRESSION R_BRACK .)
    R_PAREN         reduce using rule 70 (O -> L_BRACK EXPRESSION R_BRACK .)
    COLON           reduce using rule 70 (O -> L_BRACK EXPRESSION R_BRACK .)


state 166

    (109) MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 109 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 109 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    PLUS            reduce using rule 109 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    MINUS           reduce using rule 109 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 109 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 109 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 109 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 109 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    IS              reduce using rule 109 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    AND             reduce using rule 109 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    OR              reduce using rule 109 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 109 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    COMMA           reduce using rule 109 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    TICK            reduce using rule 109 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 109 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 109 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    COLON           reduce using rule 109 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)


state 167

    (110) MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 110 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 110 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    PLUS            reduce using rule 110 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    MINUS           reduce using rule 110 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 110 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 110 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 110 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 110 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    IS              reduce using rule 110 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    AND             reduce using rule 110 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    OR              reduce using rule 110 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 110 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    COMMA           reduce using rule 110 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    TICK            reduce using rule 110 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 110 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 110 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    COLON           reduce using rule 110 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)


state 168

    (20) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN . COLON S_BLOCK TICK

    COLON           shift and go to state 190


state 169

    (98) PARAMS -> TYPE store_type . ID check_param_duplicates Y

    ID              shift and go to state 191


state 170

    (83) CYCLE -> WHILE .

    INT             reduce using rule 83 (CYCLE -> WHILE .)
    FLOAT           reduce using rule 83 (CYCLE -> WHILE .)
    CHAR            reduce using rule 83 (CYCLE -> WHILE .)
    STRING          reduce using rule 83 (CYCLE -> WHILE .)
    BOOL            reduce using rule 83 (CYCLE -> WHILE .)
    LIST            reduce using rule 83 (CYCLE -> WHILE .)
    IF              reduce using rule 83 (CYCLE -> WHILE .)
    FOR_CYCLE       reduce using rule 83 (CYCLE -> WHILE .)
    WHILE_CYCLE     reduce using rule 83 (CYCLE -> WHILE .)
    ID              reduce using rule 83 (CYCLE -> WHILE .)
    R_BRACE         reduce using rule 83 (CYCLE -> WHILE .)


state 171

    (24) STATUTE -> ASSIGNATION .

    INT             reduce using rule 24 (STATUTE -> ASSIGNATION .)
    FLOAT           reduce using rule 24 (STATUTE -> ASSIGNATION .)
    CHAR            reduce using rule 24 (STATUTE -> ASSIGNATION .)
    STRING          reduce using rule 24 (STATUTE -> ASSIGNATION .)
    BOOL            reduce using rule 24 (STATUTE -> ASSIGNATION .)
    LIST            reduce using rule 24 (STATUTE -> ASSIGNATION .)
    IF              reduce using rule 24 (STATUTE -> ASSIGNATION .)
    FOR_CYCLE       reduce using rule 24 (STATUTE -> ASSIGNATION .)
    WHILE_CYCLE     reduce using rule 24 (STATUTE -> ASSIGNATION .)
    ID              reduce using rule 24 (STATUTE -> ASSIGNATION .)
    R_BRACE         reduce using rule 24 (STATUTE -> ASSIGNATION .)


state 172

    (16) F -> S_STATUTE . F
    (16) F -> . S_STATUTE F
    (17) F -> . empty
    (18) S_STATUTE -> . VAR_DEFINITIONS
    (19) S_STATUTE -> . STATUTE
    (122) empty -> .
    (3) VAR_DEFINITIONS -> . TYPE store_type A TICK VAR_DEFINITIONS
    (4) VAR_DEFINITIONS -> . empty
    (22) STATUTE -> . CONDITION
    (23) STATUTE -> . CYCLE
    (24) STATUTE -> . ASSIGNATION
    (27) TYPE -> . INT
    (28) TYPE -> . FLOAT
    (29) TYPE -> . CHAR
    (30) TYPE -> . STRING
    (31) TYPE -> . BOOL
    (32) TYPE -> . LIST
    (84) CONDITION -> . IF EXPRESSION COLON BLOCK R TICK
    (82) CYCLE -> . FOR
    (83) CYCLE -> . WHILE
    (75) ASSIGNATION -> . ID_REF EQUALS EXPRESSION TICK
    (81) FOR -> . FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK
    (80) WHILE -> . WHILE_CYCLE EXPRESSION COLON BLOCK TICK
    (69) ID_REF -> . ID O

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for LIST resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR_CYCLE resolved as shift
  ! shift/reduce conflict for WHILE_CYCLE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    R_BRACE         reduce using rule 122 (empty -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 13
    STRING          shift and go to state 8
    BOOL            shift and go to state 14
    LIST            shift and go to state 12
    IF              shift and go to state 182
    FOR_CYCLE       shift and go to state 178
    WHILE_CYCLE     shift and go to state 184
    ID              shift and go to state 181

  ! INT             [ reduce using rule 122 (empty -> .) ]
  ! FLOAT           [ reduce using rule 122 (empty -> .) ]
  ! CHAR            [ reduce using rule 122 (empty -> .) ]
  ! STRING          [ reduce using rule 122 (empty -> .) ]
  ! BOOL            [ reduce using rule 122 (empty -> .) ]
  ! LIST            [ reduce using rule 122 (empty -> .) ]
  ! IF              [ reduce using rule 122 (empty -> .) ]
  ! FOR_CYCLE       [ reduce using rule 122 (empty -> .) ]
  ! WHILE_CYCLE     [ reduce using rule 122 (empty -> .) ]
  ! ID              [ reduce using rule 122 (empty -> .) ]

    STATUTE                        shift and go to state 177
    ID_REF                         shift and go to state 174
    S_STATUTE                      shift and go to state 172
    FOR                            shift and go to state 179
    VAR_DEFINITIONS                shift and go to state 173
    F                              shift and go to state 192
    WHILE                          shift and go to state 170
    CONDITION                      shift and go to state 175
    ASSIGNATION                    shift and go to state 171
    TYPE                           shift and go to state 15
    empty                          shift and go to state 183
    CYCLE                          shift and go to state 176

state 173

    (18) S_STATUTE -> VAR_DEFINITIONS .

    INT             reduce using rule 18 (S_STATUTE -> VAR_DEFINITIONS .)
    FLOAT           reduce using rule 18 (S_STATUTE -> VAR_DEFINITIONS .)
    CHAR            reduce using rule 18 (S_STATUTE -> VAR_DEFINITIONS .)
    STRING          reduce using rule 18 (S_STATUTE -> VAR_DEFINITIONS .)
    BOOL            reduce using rule 18 (S_STATUTE -> VAR_DEFINITIONS .)
    LIST            reduce using rule 18 (S_STATUTE -> VAR_DEFINITIONS .)
    IF              reduce using rule 18 (S_STATUTE -> VAR_DEFINITIONS .)
    FOR_CYCLE       reduce using rule 18 (S_STATUTE -> VAR_DEFINITIONS .)
    WHILE_CYCLE     reduce using rule 18 (S_STATUTE -> VAR_DEFINITIONS .)
    ID              reduce using rule 18 (S_STATUTE -> VAR_DEFINITIONS .)
    R_BRACE         reduce using rule 18 (S_STATUTE -> VAR_DEFINITIONS .)


state 174

    (75) ASSIGNATION -> ID_REF . EQUALS EXPRESSION TICK

    EQUALS          shift and go to state 193


state 175

    (22) STATUTE -> CONDITION .

    INT             reduce using rule 22 (STATUTE -> CONDITION .)
    FLOAT           reduce using rule 22 (STATUTE -> CONDITION .)
    CHAR            reduce using rule 22 (STATUTE -> CONDITION .)
    STRING          reduce using rule 22 (STATUTE -> CONDITION .)
    BOOL            reduce using rule 22 (STATUTE -> CONDITION .)
    LIST            reduce using rule 22 (STATUTE -> CONDITION .)
    IF              reduce using rule 22 (STATUTE -> CONDITION .)
    FOR_CYCLE       reduce using rule 22 (STATUTE -> CONDITION .)
    WHILE_CYCLE     reduce using rule 22 (STATUTE -> CONDITION .)
    ID              reduce using rule 22 (STATUTE -> CONDITION .)
    R_BRACE         reduce using rule 22 (STATUTE -> CONDITION .)


state 176

    (23) STATUTE -> CYCLE .

    INT             reduce using rule 23 (STATUTE -> CYCLE .)
    FLOAT           reduce using rule 23 (STATUTE -> CYCLE .)
    CHAR            reduce using rule 23 (STATUTE -> CYCLE .)
    STRING          reduce using rule 23 (STATUTE -> CYCLE .)
    BOOL            reduce using rule 23 (STATUTE -> CYCLE .)
    LIST            reduce using rule 23 (STATUTE -> CYCLE .)
    IF              reduce using rule 23 (STATUTE -> CYCLE .)
    FOR_CYCLE       reduce using rule 23 (STATUTE -> CYCLE .)
    WHILE_CYCLE     reduce using rule 23 (STATUTE -> CYCLE .)
    ID              reduce using rule 23 (STATUTE -> CYCLE .)
    R_BRACE         reduce using rule 23 (STATUTE -> CYCLE .)


state 177

    (19) S_STATUTE -> STATUTE .

    INT             reduce using rule 19 (S_STATUTE -> STATUTE .)
    FLOAT           reduce using rule 19 (S_STATUTE -> STATUTE .)
    CHAR            reduce using rule 19 (S_STATUTE -> STATUTE .)
    STRING          reduce using rule 19 (S_STATUTE -> STATUTE .)
    BOOL            reduce using rule 19 (S_STATUTE -> STATUTE .)
    LIST            reduce using rule 19 (S_STATUTE -> STATUTE .)
    IF              reduce using rule 19 (S_STATUTE -> STATUTE .)
    FOR_CYCLE       reduce using rule 19 (S_STATUTE -> STATUTE .)
    WHILE_CYCLE     reduce using rule 19 (S_STATUTE -> STATUTE .)
    ID              reduce using rule 19 (S_STATUTE -> STATUTE .)
    R_BRACE         reduce using rule 19 (S_STATUTE -> STATUTE .)


state 178

    (81) FOR -> FOR_CYCLE . S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK
    (79) S_ASSIGNATION -> . ID_REF EQUALS EXPRESSION
    (69) ID_REF -> . ID O

    ID              shift and go to state 181

    ID_REF                         shift and go to state 194
    S_ASSIGNATION                  shift and go to state 195

state 179

    (82) CYCLE -> FOR .

    INT             reduce using rule 82 (CYCLE -> FOR .)
    FLOAT           reduce using rule 82 (CYCLE -> FOR .)
    CHAR            reduce using rule 82 (CYCLE -> FOR .)
    STRING          reduce using rule 82 (CYCLE -> FOR .)
    BOOL            reduce using rule 82 (CYCLE -> FOR .)
    LIST            reduce using rule 82 (CYCLE -> FOR .)
    IF              reduce using rule 82 (CYCLE -> FOR .)
    FOR_CYCLE       reduce using rule 82 (CYCLE -> FOR .)
    WHILE_CYCLE     reduce using rule 82 (CYCLE -> FOR .)
    ID              reduce using rule 82 (CYCLE -> FOR .)
    R_BRACE         reduce using rule 82 (CYCLE -> FOR .)


state 180

    (15) S_BLOCK -> L_BRACE F . R_BRACE

    R_BRACE         shift and go to state 196


state 181

    (69) ID_REF -> ID . O
    (70) O -> . L_BRACK EXPRESSION R_BRACK
    (71) O -> . empty
    (122) empty -> .

    L_BRACK         shift and go to state 121
    EQUALS          reduce using rule 122 (empty -> .)

    empty                          shift and go to state 123
    O                              shift and go to state 122

state 182

    (84) CONDITION -> IF . EXPRESSION COLON BLOCK R TICK
    (33) EXPRESSION -> . EXP G
    (44) EXP -> . TERM I
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    M                              shift and go to state 47
    empty                          shift and go to state 55
    EXP                            shift and go to state 51
    FACTOR                         shift and go to state 52
    EXPRESSION                     shift and go to state 197

state 183

    (17) F -> empty .
    (4) VAR_DEFINITIONS -> empty .

  ! reduce/reduce conflict for R_BRACE resolved using rule 4 (VAR_DEFINITIONS -> empty .)
    INT             reduce using rule 4 (VAR_DEFINITIONS -> empty .)
    FLOAT           reduce using rule 4 (VAR_DEFINITIONS -> empty .)
    CHAR            reduce using rule 4 (VAR_DEFINITIONS -> empty .)
    STRING          reduce using rule 4 (VAR_DEFINITIONS -> empty .)
    BOOL            reduce using rule 4 (VAR_DEFINITIONS -> empty .)
    LIST            reduce using rule 4 (VAR_DEFINITIONS -> empty .)
    IF              reduce using rule 4 (VAR_DEFINITIONS -> empty .)
    FOR_CYCLE       reduce using rule 4 (VAR_DEFINITIONS -> empty .)
    WHILE_CYCLE     reduce using rule 4 (VAR_DEFINITIONS -> empty .)
    ID              reduce using rule 4 (VAR_DEFINITIONS -> empty .)
    R_BRACE         reduce using rule 4 (VAR_DEFINITIONS -> empty .)

  ! R_BRACE         [ reduce using rule 17 (F -> empty .) ]


state 184

    (80) WHILE -> WHILE_CYCLE . EXPRESSION COLON BLOCK TICK
    (33) EXPRESSION -> . EXP G
    (44) EXP -> . TERM I
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    M                              shift and go to state 47
    empty                          shift and go to state 55
    EXP                            shift and go to state 51
    FACTOR                         shift and go to state 52
    EXPRESSION                     shift and go to state 198

state 185

    (105) MAIN_DEFINITION -> INT MAIN_R L_PAREN R_PAREN COLON S_BLOCK TICK .

    $end            reduce using rule 105 (MAIN_DEFINITION -> INT MAIN_R L_PAREN R_PAREN COLON S_BLOCK TICK .)


state 186

    (107) DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION . COMMA EXPRESSION COMMA EXPRESSION R_PAREN

    COMMA           shift and go to state 199


state 187

    (106) DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION . COMMA EXPRESSION R_PAREN

    COMMA           shift and go to state 200


state 188

    (108) DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION . COMMA EXPRESSION R_PAREN

    COMMA           shift and go to state 201


state 189

    (96) X -> COMMA V .

    R_PAREN         reduce using rule 96 (X -> COMMA V .)


state 190

    (20) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON . S_BLOCK TICK
    (15) S_BLOCK -> . L_BRACE F R_BRACE

    L_BRACE         shift and go to state 151

    S_BLOCK                        shift and go to state 202

state 191

    (98) PARAMS -> TYPE store_type ID . check_param_duplicates Y
    (99) check_param_duplicates -> .

    COMMA           reduce using rule 99 (check_param_duplicates -> .)
    R_PAREN         reduce using rule 99 (check_param_duplicates -> .)

    check_param_duplicates         shift and go to state 203

state 192

    (16) F -> S_STATUTE F .

    R_BRACE         reduce using rule 16 (F -> S_STATUTE F .)


state 193

    (75) ASSIGNATION -> ID_REF EQUALS . EXPRESSION TICK
    (33) EXPRESSION -> . EXP G
    (44) EXP -> . TERM I
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    M                              shift and go to state 47
    EXP                            shift and go to state 51
    FACTOR                         shift and go to state 52
    EXPRESSION                     shift and go to state 204
    empty                          shift and go to state 55

state 194

    (79) S_ASSIGNATION -> ID_REF . EQUALS EXPRESSION

    EQUALS          shift and go to state 205


state 195

    (81) FOR -> FOR_CYCLE S_ASSIGNATION . TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK

    TICK            shift and go to state 206


state 196

    (15) S_BLOCK -> L_BRACE F R_BRACE .

    TICK            reduce using rule 15 (S_BLOCK -> L_BRACE F R_BRACE .)


state 197

    (84) CONDITION -> IF EXPRESSION . COLON BLOCK R TICK

    COLON           shift and go to state 207


state 198

    (80) WHILE -> WHILE_CYCLE EXPRESSION . COLON BLOCK TICK

    COLON           shift and go to state 208


state 199

    (107) DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA . EXPRESSION COMMA EXPRESSION R_PAREN
    (33) EXPRESSION -> . EXP G
    (44) EXP -> . TERM I
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    M                              shift and go to state 47
    EXP                            shift and go to state 51
    FACTOR                         shift and go to state 52
    EXPRESSION                     shift and go to state 209
    empty                          shift and go to state 55

state 200

    (106) DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA . EXPRESSION R_PAREN
    (33) EXPRESSION -> . EXP G
    (44) EXP -> . TERM I
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    M                              shift and go to state 47
    EXP                            shift and go to state 51
    FACTOR                         shift and go to state 52
    EXPRESSION                     shift and go to state 210
    empty                          shift and go to state 55

state 201

    (108) DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA . EXPRESSION R_PAREN
    (33) EXPRESSION -> . EXP G
    (44) EXP -> . TERM I
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    M                              shift and go to state 47
    EXP                            shift and go to state 51
    FACTOR                         shift and go to state 52
    EXPRESSION                     shift and go to state 211
    empty                          shift and go to state 55

state 202

    (20) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK . TICK

    TICK            shift and go to state 212


state 203

    (98) PARAMS -> TYPE store_type ID check_param_duplicates . Y
    (100) Y -> . COMMA PARAMS
    (101) Y -> . empty
    (122) empty -> .

    COMMA           shift and go to state 213
    R_PAREN         reduce using rule 122 (empty -> .)

    Y                              shift and go to state 214
    empty                          shift and go to state 215

state 204

    (75) ASSIGNATION -> ID_REF EQUALS EXPRESSION . TICK

    TICK            shift and go to state 216


state 205

    (79) S_ASSIGNATION -> ID_REF EQUALS . EXPRESSION
    (33) EXPRESSION -> . EXP G
    (44) EXP -> . TERM I
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    M                              shift and go to state 47
    EXP                            shift and go to state 51
    FACTOR                         shift and go to state 52
    EXPRESSION                     shift and go to state 217
    empty                          shift and go to state 55

state 206

    (81) FOR -> FOR_CYCLE S_ASSIGNATION TICK . EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK
    (33) EXPRESSION -> . EXP G
    (44) EXP -> . TERM I
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    M                              shift and go to state 47
    empty                          shift and go to state 55
    EXP                            shift and go to state 51
    FACTOR                         shift and go to state 52
    EXPRESSION                     shift and go to state 218

state 207

    (84) CONDITION -> IF EXPRESSION COLON . BLOCK R TICK
    (76) BLOCK -> . L_BRACE Q R_BRACE

    L_BRACE         shift and go to state 219

    BLOCK                          shift and go to state 220

state 208

    (80) WHILE -> WHILE_CYCLE EXPRESSION COLON . BLOCK TICK
    (76) BLOCK -> . L_BRACE Q R_BRACE

    L_BRACE         shift and go to state 219

    BLOCK                          shift and go to state 221

state 209

    (107) DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION . COMMA EXPRESSION R_PAREN

    COMMA           shift and go to state 222


state 210

    (106) DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 223


state 211

    (108) DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 224


state 212

    (20) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK .

    SOL             reduce using rule 20 (SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK .)
    INT             reduce using rule 20 (SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK .)


state 213

    (100) Y -> COMMA . PARAMS
    (98) PARAMS -> . TYPE store_type ID check_param_duplicates Y
    (27) TYPE -> . INT
    (28) TYPE -> . FLOAT
    (29) TYPE -> . CHAR
    (30) TYPE -> . STRING
    (31) TYPE -> . BOOL
    (32) TYPE -> . LIST

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 13
    STRING          shift and go to state 8
    BOOL            shift and go to state 14
    LIST            shift and go to state 12

    TYPE                           shift and go to state 150
    PARAMS                         shift and go to state 225

state 214

    (98) PARAMS -> TYPE store_type ID check_param_duplicates Y .

    R_PAREN         reduce using rule 98 (PARAMS -> TYPE store_type ID check_param_duplicates Y .)


state 215

    (101) Y -> empty .

    R_PAREN         reduce using rule 101 (Y -> empty .)


state 216

    (75) ASSIGNATION -> ID_REF EQUALS EXPRESSION TICK .

    INT             reduce using rule 75 (ASSIGNATION -> ID_REF EQUALS EXPRESSION TICK .)
    FLOAT           reduce using rule 75 (ASSIGNATION -> ID_REF EQUALS EXPRESSION TICK .)
    CHAR            reduce using rule 75 (ASSIGNATION -> ID_REF EQUALS EXPRESSION TICK .)
    STRING          reduce using rule 75 (ASSIGNATION -> ID_REF EQUALS EXPRESSION TICK .)
    BOOL            reduce using rule 75 (ASSIGNATION -> ID_REF EQUALS EXPRESSION TICK .)
    LIST            reduce using rule 75 (ASSIGNATION -> ID_REF EQUALS EXPRESSION TICK .)
    IF              reduce using rule 75 (ASSIGNATION -> ID_REF EQUALS EXPRESSION TICK .)
    FOR_CYCLE       reduce using rule 75 (ASSIGNATION -> ID_REF EQUALS EXPRESSION TICK .)
    WHILE_CYCLE     reduce using rule 75 (ASSIGNATION -> ID_REF EQUALS EXPRESSION TICK .)
    ID              reduce using rule 75 (ASSIGNATION -> ID_REF EQUALS EXPRESSION TICK .)
    R_BRACE         reduce using rule 75 (ASSIGNATION -> ID_REF EQUALS EXPRESSION TICK .)


state 217

    (79) S_ASSIGNATION -> ID_REF EQUALS EXPRESSION .

    COLON           reduce using rule 79 (S_ASSIGNATION -> ID_REF EQUALS EXPRESSION .)
    TICK            reduce using rule 79 (S_ASSIGNATION -> ID_REF EQUALS EXPRESSION .)


state 218

    (81) FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION . TICK S_ASSIGNATION COLON BLOCK TICK

    TICK            shift and go to state 226


state 219

    (76) BLOCK -> L_BRACE . Q R_BRACE
    (77) Q -> . STATUTE Q
    (78) Q -> . empty
    (22) STATUTE -> . CONDITION
    (23) STATUTE -> . CYCLE
    (24) STATUTE -> . ASSIGNATION
    (122) empty -> .
    (84) CONDITION -> . IF EXPRESSION COLON BLOCK R TICK
    (82) CYCLE -> . FOR
    (83) CYCLE -> . WHILE
    (75) ASSIGNATION -> . ID_REF EQUALS EXPRESSION TICK
    (81) FOR -> . FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK
    (80) WHILE -> . WHILE_CYCLE EXPRESSION COLON BLOCK TICK
    (69) ID_REF -> . ID O

    R_BRACE         reduce using rule 122 (empty -> .)
    IF              shift and go to state 182
    FOR_CYCLE       shift and go to state 178
    WHILE_CYCLE     shift and go to state 184
    ID              shift and go to state 181

    STATUTE                        shift and go to state 228
    ASSIGNATION                    shift and go to state 171
    FOR                            shift and go to state 179
    ID_REF                         shift and go to state 174
    Q                              shift and go to state 229
    WHILE                          shift and go to state 170
    empty                          shift and go to state 227
    CONDITION                      shift and go to state 175
    CYCLE                          shift and go to state 176

state 220

    (84) CONDITION -> IF EXPRESSION COLON BLOCK . R TICK
    (85) R -> . S
    (86) R -> . T
    (87) S -> . ELIF EXPRESSION COLON BLOCK U
    (91) T -> . ELSE COLON BLOCK

    ELIF            shift and go to state 230
    ELSE            shift and go to state 231

    S                              shift and go to state 232
    R                              shift and go to state 233
    T                              shift and go to state 234

state 221

    (80) WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK . TICK

    TICK            shift and go to state 235


state 222

    (107) DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA . EXPRESSION R_PAREN
    (33) EXPRESSION -> . EXP G
    (44) EXP -> . TERM I
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    M                              shift and go to state 47
    EXP                            shift and go to state 51
    FACTOR                         shift and go to state 52
    EXPRESSION                     shift and go to state 236
    empty                          shift and go to state 55

state 223

    (106) DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 106 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 106 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    PLUS            reduce using rule 106 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    MINUS           reduce using rule 106 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 106 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 106 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 106 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 106 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    IS              reduce using rule 106 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    AND             reduce using rule 106 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    OR              reduce using rule 106 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 106 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    COMMA           reduce using rule 106 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    TICK            reduce using rule 106 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 106 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 106 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    COLON           reduce using rule 106 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)


state 224

    (108) DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 108 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 108 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    PLUS            reduce using rule 108 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    MINUS           reduce using rule 108 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 108 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 108 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 108 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 108 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    IS              reduce using rule 108 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    AND             reduce using rule 108 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    OR              reduce using rule 108 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 108 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    COMMA           reduce using rule 108 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    TICK            reduce using rule 108 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 108 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 108 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    COLON           reduce using rule 108 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)


state 225

    (100) Y -> COMMA PARAMS .

    R_PAREN         reduce using rule 100 (Y -> COMMA PARAMS .)


state 226

    (81) FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK . S_ASSIGNATION COLON BLOCK TICK
    (79) S_ASSIGNATION -> . ID_REF EQUALS EXPRESSION
    (69) ID_REF -> . ID O

    ID              shift and go to state 181

    ID_REF                         shift and go to state 194
    S_ASSIGNATION                  shift and go to state 237

state 227

    (78) Q -> empty .

    R_BRACE         reduce using rule 78 (Q -> empty .)


state 228

    (77) Q -> STATUTE . Q
    (77) Q -> . STATUTE Q
    (78) Q -> . empty
    (22) STATUTE -> . CONDITION
    (23) STATUTE -> . CYCLE
    (24) STATUTE -> . ASSIGNATION
    (122) empty -> .
    (84) CONDITION -> . IF EXPRESSION COLON BLOCK R TICK
    (82) CYCLE -> . FOR
    (83) CYCLE -> . WHILE
    (75) ASSIGNATION -> . ID_REF EQUALS EXPRESSION TICK
    (81) FOR -> . FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK
    (80) WHILE -> . WHILE_CYCLE EXPRESSION COLON BLOCK TICK
    (69) ID_REF -> . ID O

    R_BRACE         reduce using rule 122 (empty -> .)
    IF              shift and go to state 182
    FOR_CYCLE       shift and go to state 178
    WHILE_CYCLE     shift and go to state 184
    ID              shift and go to state 181

    STATUTE                        shift and go to state 228
    ASSIGNATION                    shift and go to state 171
    FOR                            shift and go to state 179
    ID_REF                         shift and go to state 174
    Q                              shift and go to state 238
    WHILE                          shift and go to state 170
    empty                          shift and go to state 227
    CONDITION                      shift and go to state 175
    CYCLE                          shift and go to state 176

state 229

    (76) BLOCK -> L_BRACE Q . R_BRACE

    R_BRACE         shift and go to state 239


state 230

    (87) S -> ELIF . EXPRESSION COLON BLOCK U
    (33) EXPRESSION -> . EXP G
    (44) EXP -> . TERM I
    (49) TERM -> . FACTOR K
    (54) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (55) FACTOR -> . M CON_VAR
    (56) M -> . PLUS
    (57) M -> . MINUS
    (58) M -> . empty
    (122) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    INT_CONT        reduce using rule 122 (empty -> .)
    STRING_CONT     reduce using rule 122 (empty -> .)
    CHAR_CONT       reduce using rule 122 (empty -> .)
    FLOAT_CONT      reduce using rule 122 (empty -> .)
    BOOL_CONT       reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    DRAW_LINE_R     reduce using rule 122 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 122 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 122 (empty -> .)
    MOVE_UP_R       reduce using rule 122 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 122 (empty -> .)
    MOVE_DOWN_R     reduce using rule 122 (empty -> .)
    MOVE_LEFT_R     reduce using rule 122 (empty -> .)
    PRINT_R         reduce using rule 122 (empty -> .)

    TERM                           shift and go to state 49
    M                              shift and go to state 47
    empty                          shift and go to state 55
    EXP                            shift and go to state 51
    FACTOR                         shift and go to state 52
    EXPRESSION                     shift and go to state 240

state 231

    (91) T -> ELSE . COLON BLOCK

    COLON           shift and go to state 241


state 232

    (85) R -> S .

    TICK            reduce using rule 85 (R -> S .)


state 233

    (84) CONDITION -> IF EXPRESSION COLON BLOCK R . TICK

    TICK            shift and go to state 242


state 234

    (86) R -> T .

    TICK            reduce using rule 86 (R -> T .)


state 235

    (80) WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .

    INT             reduce using rule 80 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    FLOAT           reduce using rule 80 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    CHAR            reduce using rule 80 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    STRING          reduce using rule 80 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    BOOL            reduce using rule 80 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    LIST            reduce using rule 80 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    IF              reduce using rule 80 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    FOR_CYCLE       reduce using rule 80 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    WHILE_CYCLE     reduce using rule 80 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    ID              reduce using rule 80 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    R_BRACE         reduce using rule 80 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)


state 236

    (107) DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 243


state 237

    (81) FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION . COLON BLOCK TICK

    COLON           shift and go to state 244


state 238

    (77) Q -> STATUTE Q .

    R_BRACE         reduce using rule 77 (Q -> STATUTE Q .)


state 239

    (76) BLOCK -> L_BRACE Q R_BRACE .

    TICK            reduce using rule 76 (BLOCK -> L_BRACE Q R_BRACE .)
    ELIF            reduce using rule 76 (BLOCK -> L_BRACE Q R_BRACE .)
    ELSE            reduce using rule 76 (BLOCK -> L_BRACE Q R_BRACE .)


state 240

    (87) S -> ELIF EXPRESSION . COLON BLOCK U

    COLON           shift and go to state 245


state 241

    (91) T -> ELSE COLON . BLOCK
    (76) BLOCK -> . L_BRACE Q R_BRACE

    L_BRACE         shift and go to state 219

    BLOCK                          shift and go to state 246

state 242

    (84) CONDITION -> IF EXPRESSION COLON BLOCK R TICK .

    INT             reduce using rule 84 (CONDITION -> IF EXPRESSION COLON BLOCK R TICK .)
    FLOAT           reduce using rule 84 (CONDITION -> IF EXPRESSION COLON BLOCK R TICK .)
    CHAR            reduce using rule 84 (CONDITION -> IF EXPRESSION COLON BLOCK R TICK .)
    STRING          reduce using rule 84 (CONDITION -> IF EXPRESSION COLON BLOCK R TICK .)
    BOOL            reduce using rule 84 (CONDITION -> IF EXPRESSION COLON BLOCK R TICK .)
    LIST            reduce using rule 84 (CONDITION -> IF EXPRESSION COLON BLOCK R TICK .)
    IF              reduce using rule 84 (CONDITION -> IF EXPRESSION COLON BLOCK R TICK .)
    FOR_CYCLE       reduce using rule 84 (CONDITION -> IF EXPRESSION COLON BLOCK R TICK .)
    WHILE_CYCLE     reduce using rule 84 (CONDITION -> IF EXPRESSION COLON BLOCK R TICK .)
    ID              reduce using rule 84 (CONDITION -> IF EXPRESSION COLON BLOCK R TICK .)
    R_BRACE         reduce using rule 84 (CONDITION -> IF EXPRESSION COLON BLOCK R TICK .)


state 243

    (107) DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 107 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 107 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    PLUS            reduce using rule 107 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    MINUS           reduce using rule 107 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 107 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 107 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 107 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 107 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    IS              reduce using rule 107 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    AND             reduce using rule 107 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    OR              reduce using rule 107 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 107 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    COMMA           reduce using rule 107 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    TICK            reduce using rule 107 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 107 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 107 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    COLON           reduce using rule 107 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)


state 244

    (81) FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON . BLOCK TICK
    (76) BLOCK -> . L_BRACE Q R_BRACE

    L_BRACE         shift and go to state 219

    BLOCK                          shift and go to state 247

state 245

    (87) S -> ELIF EXPRESSION COLON . BLOCK U
    (76) BLOCK -> . L_BRACE Q R_BRACE

    L_BRACE         shift and go to state 219

    BLOCK                          shift and go to state 248

state 246

    (91) T -> ELSE COLON BLOCK .

    TICK            reduce using rule 91 (T -> ELSE COLON BLOCK .)


state 247

    (81) FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK . TICK

    TICK            shift and go to state 249


state 248

    (87) S -> ELIF EXPRESSION COLON BLOCK . U
    (88) U -> . S
    (89) U -> . T
    (90) U -> . empty
    (87) S -> . ELIF EXPRESSION COLON BLOCK U
    (91) T -> . ELSE COLON BLOCK
    (122) empty -> .

    ELIF            shift and go to state 230
    ELSE            shift and go to state 231
    TICK            reduce using rule 122 (empty -> .)

    S                              shift and go to state 250
    U                              shift and go to state 253
    T                              shift and go to state 252
    empty                          shift and go to state 251

state 249

    (81) FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .

    IF              reduce using rule 81 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    FOR_CYCLE       reduce using rule 81 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    WHILE_CYCLE     reduce using rule 81 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    ID              reduce using rule 81 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    R_BRACE         reduce using rule 81 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    INT             reduce using rule 81 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    FLOAT           reduce using rule 81 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    CHAR            reduce using rule 81 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    STRING          reduce using rule 81 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    BOOL            reduce using rule 81 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    LIST            reduce using rule 81 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)


state 250

    (88) U -> S .

    TICK            reduce using rule 88 (U -> S .)


state 251

    (90) U -> empty .

    TICK            reduce using rule 90 (U -> empty .)


state 252

    (89) U -> T .

    TICK            reduce using rule 89 (U -> T .)


state 253

    (87) S -> ELIF EXPRESSION COLON BLOCK U .

    TICK            reduce using rule 87 (S -> ELIF EXPRESSION COLON BLOCK U .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT in state 27 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 27 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 27 resolved as shift
WARNING: shift/reduce conflict for STRING in state 27 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 27 resolved as shift
WARNING: shift/reduce conflict for LIST in state 27 resolved as shift
WARNING: shift/reduce conflict for INT in state 151 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 151 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 151 resolved as shift
WARNING: shift/reduce conflict for STRING in state 151 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 151 resolved as shift
WARNING: shift/reduce conflict for LIST in state 151 resolved as shift
WARNING: shift/reduce conflict for IF in state 151 resolved as shift
WARNING: shift/reduce conflict for FOR_CYCLE in state 151 resolved as shift
WARNING: shift/reduce conflict for WHILE_CYCLE in state 151 resolved as shift
WARNING: shift/reduce conflict for ID in state 151 resolved as shift
WARNING: shift/reduce conflict for INT in state 172 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 172 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 172 resolved as shift
WARNING: shift/reduce conflict for STRING in state 172 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 172 resolved as shift
WARNING: shift/reduce conflict for LIST in state 172 resolved as shift
WARNING: shift/reduce conflict for IF in state 172 resolved as shift
WARNING: shift/reduce conflict for FOR_CYCLE in state 172 resolved as shift
WARNING: shift/reduce conflict for WHILE_CYCLE in state 172 resolved as shift
WARNING: shift/reduce conflict for ID in state 172 resolved as shift
WARNING: reduce/reduce conflict in state 183 resolved using rule (VAR_DEFINITIONS -> empty)
WARNING: rejected rule (F -> empty) in state 183
WARNING: Rule (F -> empty) is never reduced
