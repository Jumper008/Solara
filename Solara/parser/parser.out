Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    MULTI_COMMENT
    SINGLE_COMMENT

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID create_global_fun COLON VAR_BLOCK update_global_fun print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION update_constant_number free_symbol_table print_funDir
Rule 2     print_funDir -> <empty>
Rule 3     free_symbol_table -> <empty>
Rule 4     update_constant_number -> <empty>
Rule 5     create_global_fun -> <empty>
Rule 6     update_global_fun -> <empty>
Rule 7     print_currentSymTab -> <empty>
Rule 8     VAR_BLOCK -> VARS COLON AA
Rule 9     AA -> VAR_DEFINITIONS AA
Rule 10    AA -> empty
Rule 11    VAR_DEFINITIONS -> TYPE store_type A TICK
Rule 12    store_type -> <empty>
Rule 13    A -> ID check_var_duplicates update_local_count B D
Rule 14    check_var_duplicates -> <empty>
Rule 15    update_local_count -> <empty>
Rule 16    B -> EQUALS C assign_var_value
Rule 17    B -> empty
Rule 18    assign_var_value -> <empty>
Rule 19    C -> S_EXPRESSION
Rule 20    C -> LIST_EXP
Rule 21    D -> COMMA A
Rule 22    D -> empty
Rule 23    S_BLOCK -> L_BRACE F R_BRACE
Rule 24    F -> S_STATUTE F
Rule 25    F -> empty
Rule 26    S_STATUTE -> VAR_DEFINITIONS
Rule 27    S_STATUTE -> STATUTE
Rule 28    SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block
Rule 29    reset_execution_block -> <empty>
Rule 30    check_sol_duplicates -> <empty>
Rule 31    update_fun -> <empty>
Rule 32    STATUTE -> CONDITION
Rule 33    STATUTE -> CYCLE
Rule 34    STATUTE -> ASSIGNATION
Rule 35    STATUTE -> CON_VAR TICK
Rule 36    STATUTE -> RETURN_STATEMENT
Rule 37    RETURN_STATEMENT -> RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value
Rule 38    RETURN_STATEMENT -> RETURN TICK process_return_operation_without_return_value
Rule 39    check_return_type_correspondence -> <empty>
Rule 40    process_return_operation_with_return_value -> <empty>
Rule 41    process_return_operation_without_return_value -> <empty>
Rule 42    S_TYPE -> VOID
Rule 43    S_TYPE -> TYPE
Rule 44    TYPE -> INT
Rule 45    TYPE -> FLOAT
Rule 46    TYPE -> CHAR
Rule 47    TYPE -> STRING
Rule 48    TYPE -> BOOL
Rule 49    TYPE -> LIST
Rule 50    EXPRESSION -> EXP G
Rule 51    G -> H EXP process_possible_relop_operation
Rule 52    G -> empty
Rule 53    process_possible_relop_operation -> <empty>
Rule 54    H -> LESS_T
Rule 55    H -> GREATER_T
Rule 56    H -> GREATER_T_EQUALS
Rule 57    H -> LESS_T_EQUALS
Rule 58    H -> IS
Rule 59    H -> AND
Rule 60    H -> OR
Rule 61    H -> PERCENTAGE
Rule 62    EXP -> TERM process_possible_plus_minus_operation I
Rule 63    process_possible_plus_minus_operation -> <empty>
Rule 64    I -> J EXP
Rule 65    I -> empty
Rule 66    J -> PLUS
Rule 67    J -> MINUS
Rule 68    TERM -> FACTOR process_possible_multiply_divide_operation K
Rule 69    process_possible_multiply_divide_operation -> <empty>
Rule 70    K -> L TERM
Rule 71    K -> empty
Rule 72    L -> MULTIPLY
Rule 73    L -> DIVIDE
Rule 74    FACTOR -> L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
Rule 75    FACTOR -> CON_VAR
Rule 76    push_false_bottom -> <empty>
Rule 77    pop_false_bottom -> <empty>
Rule 78    CON_VAR -> ID_REF
Rule 79    CON_VAR -> CON_VAR_TERMINAL
Rule 80    CON_VAR -> SOLUTION_CALL
Rule 81    CON_VAR -> PREDEFINED_SOLS
Rule 82    CON_VAR_TERMINAL -> INT_CONT
Rule 83    CON_VAR_TERMINAL -> STRING_CONT
Rule 84    CON_VAR_TERMINAL -> CHAR_CONT
Rule 85    CON_VAR_TERMINAL -> FLOAT_CONT
Rule 86    CON_VAR_TERMINAL -> BOOL_CONT
Rule 87    NEGATION -> N S_EXPRESSION process_negation_operation
Rule 88    process_negation_operation -> <empty>
Rule 89    N -> NOT
Rule 90    ID_REF -> ID check_var_existence get_var_type O
Rule 91    check_var_existence -> <empty>
Rule 92    get_var_type -> <empty>
Rule 93    O -> L_BRACK S_EXPRESSION check_int_type R_BRACK
Rule 94    O -> empty
Rule 95    check_int_type -> <empty>
Rule 96    LIST_EXP -> L_BRACK S_EXPRESSION P R_BRACK
Rule 97    P -> COMMA S_EXPRESSION P
Rule 98    P -> empty
Rule 99    ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK
Rule 100   append_equals -> <empty>
Rule 101   process_assignation_operation -> <empty>
Rule 102   BLOCK -> L_BRACE Q R_BRACE
Rule 103   Q -> STATUTE Q
Rule 104   Q -> empty
Rule 105   S_ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation
Rule 106   WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK
Rule 107   append_jump -> <empty>
Rule 108   end_while_operation_processing -> <empty>
Rule 109   FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK
Rule 110   process_for_condition_operation -> <empty>
Rule 111   process_for_assignation_operation -> <empty>
Rule 112   end_for_operation_processing -> <empty>
Rule 113   CYCLE -> FOR
Rule 114   CYCLE -> WHILE
Rule 115   CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing
Rule 116   end_condition_operation_processing -> <empty>
Rule 117   append_false_bottom -> <empty>
Rule 118   process_condition_operation -> <empty>
Rule 119   R -> S
Rule 120   R -> T
Rule 121   R -> empty
Rule 122   S -> ELIF process_elif_operation S_EXPRESSION process_condition_operation COLON BLOCK U
Rule 123   process_elif_operation -> <empty>
Rule 124   U -> S
Rule 125   U -> T
Rule 126   U -> empty
Rule 127   T -> ELSE process_else_operation COLON BLOCK end_else_operation_processing
Rule 128   process_else_operation -> <empty>
Rule 129   end_else_operation_processing -> <empty>
Rule 130   SOLUTION_CALL -> ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
Rule 131   end_argument_processing -> <empty>
Rule 132   generate_era_quad -> <empty>
Rule 133   check_sol_existence -> <empty>
Rule 134   V -> S_EXPRESSION process_argument X
Rule 135   process_argument -> <empty>
Rule 136   X -> COMMA update_parameter_counter V
Rule 137   X -> empty
Rule 138   update_parameter_counter -> <empty>
Rule 139   S_EXPRESSION -> EXPRESSION
Rule 140   S_EXPRESSION -> NEGATION
Rule 141   PARAMS -> TYPE store_type ID check_param_duplicates update_param_count Y
Rule 142   check_param_duplicates -> <empty>
Rule 143   update_param_count -> <empty>
Rule 144   Y -> COMMA PARAMS
Rule 145   Y -> empty
Rule 146   SOL_DEFINITIONS -> Z
Rule 147   Z -> SOLUTION_DEF Z
Rule 148   Z -> empty
Rule 149   MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block
Rule 150   DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
Rule 151   DRAW_LINE -> DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
Rule 152   DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
Rule 153   MOVE_UP -> MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
Rule 154   MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
Rule 155   MOVE_DOWN -> MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
Rule 156   MOVE_LEFT -> MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
Rule 157   PRINT -> PRINT_R L_PAREN S_EXPRESSION R_PAREN
Rule 158   PREDEFINED_SOLS -> DRAW_LINE
Rule 159   PREDEFINED_SOLS -> DRAW_CIRCLE
Rule 160   PREDEFINED_SOLS -> DRAW_RECTANGLE
Rule 161   PREDEFINED_SOLS -> MOVE_UP
Rule 162   PREDEFINED_SOLS -> MOVE_RIGHT
Rule 163   PREDEFINED_SOLS -> MOVE_DOWN
Rule 164   PREDEFINED_SOLS -> MOVE_LEFT
Rule 165   PREDEFINED_SOLS -> PRINT
Rule 166   empty -> <empty>

Terminals, with rules where they appear

AND                  : 59
BOOL                 : 48
BOOL_CONT            : 86
CHAR                 : 46
CHAR_CONT            : 84
COLON                : 1 1 8 28 106 109 115 122 127 149
COMMA                : 21 97 136 144 150 150 151 151 151 152 152
DIVIDE               : 73
DRAW_CIRCLE_R        : 150
DRAW_LINE_R          : 151
DRAW_RECTANGLE_R     : 152
ELIF                 : 122
ELSE                 : 127
EQUALS               : 16 99 105
FLOAT                : 45
FLOAT_CONT           : 85
FOR_CYCLE            : 109
GREATER_T            : 55
GREATER_T_EQUALS     : 56
ID                   : 1 13 28 90 130 141
IF                   : 115
INT                  : 44 149
INT_CONT             : 82
IS                   : 58
LESS_T               : 54
LESS_T_EQUALS        : 57
LIST                 : 49
L_BRACE              : 23 102
L_BRACK              : 93 96
L_PAREN              : 28 74 130 149 150 151 152 153 154 155 156 157
MAIN_R               : 149
MINUS                : 67
MOVE_DOWN_R          : 155
MOVE_LEFT_R          : 156
MOVE_RIGHT_R         : 154
MOVE_UP_R            : 153
MULTIPLY             : 72
MULTI_COMMENT        : 
NOT                  : 89
OR                   : 60
PERCENTAGE           : 61
PLUS                 : 66
PRINT_R              : 157
PROGRAM              : 1
RETURN               : 37 38
R_BRACE              : 23 102
R_BRACK              : 93 96
R_PAREN              : 28 74 130 149 150 151 152 153 154 155 156 157
SINGLE_COMMENT       : 
SOL                  : 28
SOLS                 : 1
STRING               : 47
STRING_CONT          : 83
TICK                 : 11 28 35 37 38 99 106 109 109 109 115 149
VARS                 : 8
VOID                 : 42
WHILE_CYCLE          : 106
error                : 

Nonterminals, with rules where they appear

A                    : 11 21
AA                   : 8 9
ASSIGNATION          : 34
B                    : 13
BLOCK                : 106 109 115 122 127
C                    : 16
CONDITION            : 32
CON_VAR              : 35 75
CON_VAR_TERMINAL     : 79
CYCLE                : 33
D                    : 13
DRAW_CIRCLE          : 159
DRAW_LINE            : 158
DRAW_RECTANGLE       : 160
EXP                  : 50 51 64
EXPRESSION           : 139
F                    : 23 24
FACTOR               : 68
FOR                  : 113
G                    : 50
H                    : 51
I                    : 62
ID_REF               : 78 99 105
J                    : 64
K                    : 68
L                    : 70
LIST_EXP             : 20
MAIN_DEFINITION      : 1
MOVE_DOWN            : 163
MOVE_LEFT            : 164
MOVE_RIGHT           : 162
MOVE_UP              : 161
N                    : 87
NEGATION             : 140
O                    : 90
P                    : 96 97
PARAMS               : 28 144
PREDEFINED_SOLS      : 81
PRINT                : 165
Q                    : 102 103
R                    : 115
RETURN_STATEMENT     : 36
S                    : 119 124
SOLUTION_CALL        : 80
SOLUTION_DEF         : 147
SOL_DEFINITIONS      : 1
STATUTE              : 27 103
S_ASSIGNATION        : 109 109
S_BLOCK              : 28 149
S_EXPRESSION         : 19 37 74 87 93 96 97 99 105 106 109 115 122 134 150 150 150 151 151 151 151 152 152 152 153 154 155 156 157
S_STATUTE            : 24
S_TYPE               : 28
T                    : 120 125
TERM                 : 62 70
TYPE                 : 11 43 141
U                    : 122
V                    : 130 136
VAR_BLOCK            : 1
VAR_DEFINITIONS      : 9 26
WHILE                : 114
X                    : 134
Y                    : 141
Z                    : 146 147
append_equals        : 99 105
append_false_bottom  : 115
append_jump          : 106 109
assign_var_value     : 16
check_int_type       : 93
check_param_duplicates : 141
check_return_type_correspondence : 37
check_sol_duplicates : 28 149
check_sol_existence  : 130
check_var_duplicates : 13
check_var_existence  : 90
create_global_fun    : 1
empty                : 10 17 22 25 52 65 71 94 98 104 121 126 137 145 148
end_argument_processing : 130
end_condition_operation_processing : 115
end_else_operation_processing : 127
end_for_operation_processing : 109
end_while_operation_processing : 106
free_symbol_table    : 1 28 149
generate_era_quad    : 130
get_var_type         : 90
pop_false_bottom     : 74
print_currentSymTab  : 1 28 149
print_funDir         : 1
process_argument     : 134
process_assignation_operation : 99 105
process_condition_operation : 106 115 122
process_elif_operation : 122
process_else_operation : 127
process_for_assignation_operation : 109
process_for_condition_operation : 109
process_negation_operation : 87
process_possible_multiply_divide_operation : 68
process_possible_plus_minus_operation : 62
process_possible_relop_operation : 51
process_return_operation_with_return_value : 37
process_return_operation_without_return_value : 38
program              : 0
push_false_bottom    : 74
reset_execution_block : 28 149
store_type           : 11 28 141 149
update_constant_number : 1
update_fun           : 28 149
update_global_fun    : 1
update_local_count   : 13
update_param_count   : 141
update_parameter_counter : 136

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID create_global_fun COLON VAR_BLOCK update_global_fun print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION update_constant_number free_symbol_table print_funDir

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID create_global_fun COLON VAR_BLOCK update_global_fun print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION update_constant_number free_symbol_table print_funDir

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . create_global_fun COLON VAR_BLOCK update_global_fun print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION update_constant_number free_symbol_table print_funDir
    (5) create_global_fun -> .

    COLON           reduce using rule 5 (create_global_fun -> .)

    create_global_fun              shift and go to state 4

state 4

    (1) program -> PROGRAM ID create_global_fun . COLON VAR_BLOCK update_global_fun print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION update_constant_number free_symbol_table print_funDir

    COLON           shift and go to state 5


state 5

    (1) program -> PROGRAM ID create_global_fun COLON . VAR_BLOCK update_global_fun print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION update_constant_number free_symbol_table print_funDir
    (8) VAR_BLOCK -> . VARS COLON AA

    VARS            shift and go to state 6

    VAR_BLOCK                      shift and go to state 7

state 6

    (8) VAR_BLOCK -> VARS . COLON AA

    COLON           shift and go to state 8


state 7

    (1) program -> PROGRAM ID create_global_fun COLON VAR_BLOCK . update_global_fun print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION update_constant_number free_symbol_table print_funDir
    (6) update_global_fun -> .

    SOLS            reduce using rule 6 (update_global_fun -> .)

    update_global_fun              shift and go to state 9

state 8

    (8) VAR_BLOCK -> VARS COLON . AA
    (9) AA -> . VAR_DEFINITIONS AA
    (10) AA -> . empty
    (11) VAR_DEFINITIONS -> . TYPE store_type A TICK
    (166) empty -> .
    (44) TYPE -> . INT
    (45) TYPE -> . FLOAT
    (46) TYPE -> . CHAR
    (47) TYPE -> . STRING
    (48) TYPE -> . BOOL
    (49) TYPE -> . LIST

    SOLS            reduce using rule 166 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 16
    STRING          shift and go to state 11
    BOOL            shift and go to state 17
    LIST            shift and go to state 15

    AA                             shift and go to state 10
    VAR_DEFINITIONS                shift and go to state 12
    TYPE                           shift and go to state 18
    empty                          shift and go to state 19

state 9

    (1) program -> PROGRAM ID create_global_fun COLON VAR_BLOCK update_global_fun . print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION update_constant_number free_symbol_table print_funDir
    (7) print_currentSymTab -> .

    SOLS            reduce using rule 7 (print_currentSymTab -> .)

    print_currentSymTab            shift and go to state 20

state 10

    (8) VAR_BLOCK -> VARS COLON AA .

    SOLS            reduce using rule 8 (VAR_BLOCK -> VARS COLON AA .)


state 11

    (47) TYPE -> STRING .

    ID              reduce using rule 47 (TYPE -> STRING .)


state 12

    (9) AA -> VAR_DEFINITIONS . AA
    (9) AA -> . VAR_DEFINITIONS AA
    (10) AA -> . empty
    (11) VAR_DEFINITIONS -> . TYPE store_type A TICK
    (166) empty -> .
    (44) TYPE -> . INT
    (45) TYPE -> . FLOAT
    (46) TYPE -> . CHAR
    (47) TYPE -> . STRING
    (48) TYPE -> . BOOL
    (49) TYPE -> . LIST

    SOLS            reduce using rule 166 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 16
    STRING          shift and go to state 11
    BOOL            shift and go to state 17
    LIST            shift and go to state 15

    AA                             shift and go to state 21
    VAR_DEFINITIONS                shift and go to state 12
    TYPE                           shift and go to state 18
    empty                          shift and go to state 19

state 13

    (44) TYPE -> INT .

    ID              reduce using rule 44 (TYPE -> INT .)


state 14

    (45) TYPE -> FLOAT .

    ID              reduce using rule 45 (TYPE -> FLOAT .)


state 15

    (49) TYPE -> LIST .

    ID              reduce using rule 49 (TYPE -> LIST .)


state 16

    (46) TYPE -> CHAR .

    ID              reduce using rule 46 (TYPE -> CHAR .)


state 17

    (48) TYPE -> BOOL .

    ID              reduce using rule 48 (TYPE -> BOOL .)


state 18

    (11) VAR_DEFINITIONS -> TYPE . store_type A TICK
    (12) store_type -> .

    ID              reduce using rule 12 (store_type -> .)

    store_type                     shift and go to state 22

state 19

    (10) AA -> empty .

    SOLS            reduce using rule 10 (AA -> empty .)


state 20

    (1) program -> PROGRAM ID create_global_fun COLON VAR_BLOCK update_global_fun print_currentSymTab . SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION update_constant_number free_symbol_table print_funDir

    SOLS            shift and go to state 23


state 21

    (9) AA -> VAR_DEFINITIONS AA .

    SOLS            reduce using rule 9 (AA -> VAR_DEFINITIONS AA .)


state 22

    (11) VAR_DEFINITIONS -> TYPE store_type . A TICK
    (13) A -> . ID check_var_duplicates update_local_count B D

    ID              shift and go to state 25

    A                              shift and go to state 24

state 23

    (1) program -> PROGRAM ID create_global_fun COLON VAR_BLOCK update_global_fun print_currentSymTab SOLS . COLON SOL_DEFINITIONS MAIN_DEFINITION update_constant_number free_symbol_table print_funDir

    COLON           shift and go to state 26


state 24

    (11) VAR_DEFINITIONS -> TYPE store_type A . TICK

    TICK            shift and go to state 27


state 25

    (13) A -> ID . check_var_duplicates update_local_count B D
    (14) check_var_duplicates -> .

    EQUALS          reduce using rule 14 (check_var_duplicates -> .)
    COMMA           reduce using rule 14 (check_var_duplicates -> .)
    TICK            reduce using rule 14 (check_var_duplicates -> .)

    check_var_duplicates           shift and go to state 28

state 26

    (1) program -> PROGRAM ID create_global_fun COLON VAR_BLOCK update_global_fun print_currentSymTab SOLS COLON . SOL_DEFINITIONS MAIN_DEFINITION update_constant_number free_symbol_table print_funDir
    (146) SOL_DEFINITIONS -> . Z
    (147) Z -> . SOLUTION_DEF Z
    (148) Z -> . empty
    (28) SOLUTION_DEF -> . SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block
    (166) empty -> .

    SOL             shift and go to state 30
    INT             reduce using rule 166 (empty -> .)

    SOLUTION_DEF                   shift and go to state 29
    SOL_DEFINITIONS                shift and go to state 32
    Z                              shift and go to state 33
    empty                          shift and go to state 31

state 27

    (11) VAR_DEFINITIONS -> TYPE store_type A TICK .

    INT             reduce using rule 11 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    FLOAT           reduce using rule 11 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    CHAR            reduce using rule 11 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    STRING          reduce using rule 11 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    BOOL            reduce using rule 11 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    LIST            reduce using rule 11 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    SOLS            reduce using rule 11 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    IF              reduce using rule 11 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    RETURN          reduce using rule 11 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    FOR_CYCLE       reduce using rule 11 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    WHILE_CYCLE     reduce using rule 11 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    ID              reduce using rule 11 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    INT_CONT        reduce using rule 11 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    STRING_CONT     reduce using rule 11 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    CHAR_CONT       reduce using rule 11 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    FLOAT_CONT      reduce using rule 11 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    BOOL_CONT       reduce using rule 11 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    DRAW_LINE_R     reduce using rule 11 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    DRAW_CIRCLE_R   reduce using rule 11 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    DRAW_RECTANGLE_R reduce using rule 11 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    MOVE_UP_R       reduce using rule 11 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    MOVE_RIGHT_R    reduce using rule 11 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    MOVE_DOWN_R     reduce using rule 11 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    MOVE_LEFT_R     reduce using rule 11 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    PRINT_R         reduce using rule 11 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    R_BRACE         reduce using rule 11 (VAR_DEFINITIONS -> TYPE store_type A TICK .)


state 28

    (13) A -> ID check_var_duplicates . update_local_count B D
    (15) update_local_count -> .

    EQUALS          reduce using rule 15 (update_local_count -> .)
    COMMA           reduce using rule 15 (update_local_count -> .)
    TICK            reduce using rule 15 (update_local_count -> .)

    update_local_count             shift and go to state 34

state 29

    (147) Z -> SOLUTION_DEF . Z
    (147) Z -> . SOLUTION_DEF Z
    (148) Z -> . empty
    (28) SOLUTION_DEF -> . SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block
    (166) empty -> .

    SOL             shift and go to state 30
    INT             reduce using rule 166 (empty -> .)

    SOLUTION_DEF                   shift and go to state 29
    Z                              shift and go to state 35
    empty                          shift and go to state 31

state 30

    (28) SOLUTION_DEF -> SOL . S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block
    (42) S_TYPE -> . VOID
    (43) S_TYPE -> . TYPE
    (44) TYPE -> . INT
    (45) TYPE -> . FLOAT
    (46) TYPE -> . CHAR
    (47) TYPE -> . STRING
    (48) TYPE -> . BOOL
    (49) TYPE -> . LIST

    VOID            shift and go to state 36
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 16
    STRING          shift and go to state 11
    BOOL            shift and go to state 17
    LIST            shift and go to state 15

    S_TYPE                         shift and go to state 37
    TYPE                           shift and go to state 38

state 31

    (148) Z -> empty .

    INT             reduce using rule 148 (Z -> empty .)


state 32

    (1) program -> PROGRAM ID create_global_fun COLON VAR_BLOCK update_global_fun print_currentSymTab SOLS COLON SOL_DEFINITIONS . MAIN_DEFINITION update_constant_number free_symbol_table print_funDir
    (149) MAIN_DEFINITION -> . INT store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block

    INT             shift and go to state 39

    MAIN_DEFINITION                shift and go to state 40

state 33

    (146) SOL_DEFINITIONS -> Z .

    INT             reduce using rule 146 (SOL_DEFINITIONS -> Z .)


state 34

    (13) A -> ID check_var_duplicates update_local_count . B D
    (16) B -> . EQUALS C assign_var_value
    (17) B -> . empty
    (166) empty -> .

    EQUALS          shift and go to state 42
    COMMA           reduce using rule 166 (empty -> .)
    TICK            reduce using rule 166 (empty -> .)

    B                              shift and go to state 41
    empty                          shift and go to state 43

state 35

    (147) Z -> SOLUTION_DEF Z .

    INT             reduce using rule 147 (Z -> SOLUTION_DEF Z .)


state 36

    (42) S_TYPE -> VOID .

    ID              reduce using rule 42 (S_TYPE -> VOID .)


state 37

    (28) SOLUTION_DEF -> SOL S_TYPE . store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block
    (12) store_type -> .

    ID              reduce using rule 12 (store_type -> .)

    store_type                     shift and go to state 44

state 38

    (43) S_TYPE -> TYPE .

    ID              reduce using rule 43 (S_TYPE -> TYPE .)


state 39

    (149) MAIN_DEFINITION -> INT . store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block
    (12) store_type -> .

    MAIN_R          reduce using rule 12 (store_type -> .)

    store_type                     shift and go to state 45

state 40

    (1) program -> PROGRAM ID create_global_fun COLON VAR_BLOCK update_global_fun print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION . update_constant_number free_symbol_table print_funDir
    (4) update_constant_number -> .

    $end            reduce using rule 4 (update_constant_number -> .)

    update_constant_number         shift and go to state 46

state 41

    (13) A -> ID check_var_duplicates update_local_count B . D
    (21) D -> . COMMA A
    (22) D -> . empty
    (166) empty -> .

    COMMA           shift and go to state 48
    TICK            reduce using rule 166 (empty -> .)

    D                              shift and go to state 47
    empty                          shift and go to state 49

state 42

    (16) B -> EQUALS . C assign_var_value
    (19) C -> . S_EXPRESSION
    (20) C -> . LIST_EXP
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (96) LIST_EXP -> . L_BRACK S_EXPRESSION P R_BRACK
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    L_BRACK         shift and go to state 78
    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    LIST_EXP                       shift and go to state 50
    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 53
    SOLUTION_CALL                  shift and go to state 55
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    C                              shift and go to state 71
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    NEGATION                       shift and go to state 81
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 43

    (17) B -> empty .

    COMMA           reduce using rule 17 (B -> empty .)
    TICK            reduce using rule 17 (B -> empty .)


state 44

    (28) SOLUTION_DEF -> SOL S_TYPE store_type . ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block

    ID              shift and go to state 89


state 45

    (149) MAIN_DEFINITION -> INT store_type . MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block

    MAIN_R          shift and go to state 90


state 46

    (1) program -> PROGRAM ID create_global_fun COLON VAR_BLOCK update_global_fun print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION update_constant_number . free_symbol_table print_funDir
    (3) free_symbol_table -> .

    $end            reduce using rule 3 (free_symbol_table -> .)

    free_symbol_table              shift and go to state 91

state 47

    (13) A -> ID check_var_duplicates update_local_count B D .

    TICK            reduce using rule 13 (A -> ID check_var_duplicates update_local_count B D .)


state 48

    (21) D -> COMMA . A
    (13) A -> . ID check_var_duplicates update_local_count B D

    ID              shift and go to state 25

    A                              shift and go to state 92

state 49

    (22) D -> empty .

    TICK            reduce using rule 22 (D -> empty .)


state 50

    (20) C -> LIST_EXP .

    COMMA           reduce using rule 20 (C -> LIST_EXP .)
    TICK            reduce using rule 20 (C -> LIST_EXP .)


state 51

    (151) DRAW_LINE -> DRAW_LINE_R . L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN

    L_PAREN         shift and go to state 93


state 52

    (155) MOVE_DOWN -> MOVE_DOWN_R . L_PAREN S_EXPRESSION R_PAREN

    L_PAREN         shift and go to state 94


state 53

    (19) C -> S_EXPRESSION .

    COMMA           reduce using rule 19 (C -> S_EXPRESSION .)
    TICK            reduce using rule 19 (C -> S_EXPRESSION .)


state 54

    (74) FACTOR -> L_PAREN . push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (76) push_false_bottom -> .

    NOT             reduce using rule 76 (push_false_bottom -> .)
    L_PAREN         reduce using rule 76 (push_false_bottom -> .)
    ID              reduce using rule 76 (push_false_bottom -> .)
    INT_CONT        reduce using rule 76 (push_false_bottom -> .)
    STRING_CONT     reduce using rule 76 (push_false_bottom -> .)
    CHAR_CONT       reduce using rule 76 (push_false_bottom -> .)
    FLOAT_CONT      reduce using rule 76 (push_false_bottom -> .)
    BOOL_CONT       reduce using rule 76 (push_false_bottom -> .)
    DRAW_LINE_R     reduce using rule 76 (push_false_bottom -> .)
    DRAW_CIRCLE_R   reduce using rule 76 (push_false_bottom -> .)
    DRAW_RECTANGLE_R reduce using rule 76 (push_false_bottom -> .)
    MOVE_UP_R       reduce using rule 76 (push_false_bottom -> .)
    MOVE_RIGHT_R    reduce using rule 76 (push_false_bottom -> .)
    MOVE_DOWN_R     reduce using rule 76 (push_false_bottom -> .)
    MOVE_LEFT_R     reduce using rule 76 (push_false_bottom -> .)
    PRINT_R         reduce using rule 76 (push_false_bottom -> .)

    push_false_bottom              shift and go to state 95

state 55

    (80) CON_VAR -> SOLUTION_CALL .

    MULTIPLY        reduce using rule 80 (CON_VAR -> SOLUTION_CALL .)
    DIVIDE          reduce using rule 80 (CON_VAR -> SOLUTION_CALL .)
    PLUS            reduce using rule 80 (CON_VAR -> SOLUTION_CALL .)
    MINUS           reduce using rule 80 (CON_VAR -> SOLUTION_CALL .)
    LESS_T          reduce using rule 80 (CON_VAR -> SOLUTION_CALL .)
    GREATER_T       reduce using rule 80 (CON_VAR -> SOLUTION_CALL .)
    GREATER_T_EQUALS reduce using rule 80 (CON_VAR -> SOLUTION_CALL .)
    LESS_T_EQUALS   reduce using rule 80 (CON_VAR -> SOLUTION_CALL .)
    IS              reduce using rule 80 (CON_VAR -> SOLUTION_CALL .)
    AND             reduce using rule 80 (CON_VAR -> SOLUTION_CALL .)
    OR              reduce using rule 80 (CON_VAR -> SOLUTION_CALL .)
    PERCENTAGE      reduce using rule 80 (CON_VAR -> SOLUTION_CALL .)
    COMMA           reduce using rule 80 (CON_VAR -> SOLUTION_CALL .)
    R_PAREN         reduce using rule 80 (CON_VAR -> SOLUTION_CALL .)
    TICK            reduce using rule 80 (CON_VAR -> SOLUTION_CALL .)
    R_BRACK         reduce using rule 80 (CON_VAR -> SOLUTION_CALL .)
    COLON           reduce using rule 80 (CON_VAR -> SOLUTION_CALL .)


state 56

    (152) DRAW_RECTANGLE -> DRAW_RECTANGLE_R . L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN

    L_PAREN         shift and go to state 96


state 57

    (50) EXPRESSION -> EXP . G
    (51) G -> . H EXP process_possible_relop_operation
    (52) G -> . empty
    (54) H -> . LESS_T
    (55) H -> . GREATER_T
    (56) H -> . GREATER_T_EQUALS
    (57) H -> . LESS_T_EQUALS
    (58) H -> . IS
    (59) H -> . AND
    (60) H -> . OR
    (61) H -> . PERCENTAGE
    (166) empty -> .

    LESS_T          shift and go to state 102
    GREATER_T       shift and go to state 98
    GREATER_T_EQUALS shift and go to state 104
    LESS_T_EQUALS   shift and go to state 103
    IS              shift and go to state 101
    AND             shift and go to state 97
    OR              shift and go to state 106
    PERCENTAGE      shift and go to state 105
    COMMA           reduce using rule 166 (empty -> .)
    TICK            reduce using rule 166 (empty -> .)
    R_BRACK         reduce using rule 166 (empty -> .)
    R_PAREN         reduce using rule 166 (empty -> .)
    COLON           reduce using rule 166 (empty -> .)

    H                              shift and go to state 100
    empty                          shift and go to state 107
    G                              shift and go to state 99

state 58

    (165) PREDEFINED_SOLS -> PRINT .

    MULTIPLY        reduce using rule 165 (PREDEFINED_SOLS -> PRINT .)
    DIVIDE          reduce using rule 165 (PREDEFINED_SOLS -> PRINT .)
    PLUS            reduce using rule 165 (PREDEFINED_SOLS -> PRINT .)
    MINUS           reduce using rule 165 (PREDEFINED_SOLS -> PRINT .)
    LESS_T          reduce using rule 165 (PREDEFINED_SOLS -> PRINT .)
    GREATER_T       reduce using rule 165 (PREDEFINED_SOLS -> PRINT .)
    GREATER_T_EQUALS reduce using rule 165 (PREDEFINED_SOLS -> PRINT .)
    LESS_T_EQUALS   reduce using rule 165 (PREDEFINED_SOLS -> PRINT .)
    IS              reduce using rule 165 (PREDEFINED_SOLS -> PRINT .)
    AND             reduce using rule 165 (PREDEFINED_SOLS -> PRINT .)
    OR              reduce using rule 165 (PREDEFINED_SOLS -> PRINT .)
    PERCENTAGE      reduce using rule 165 (PREDEFINED_SOLS -> PRINT .)
    R_PAREN         reduce using rule 165 (PREDEFINED_SOLS -> PRINT .)
    TICK            reduce using rule 165 (PREDEFINED_SOLS -> PRINT .)
    COMMA           reduce using rule 165 (PREDEFINED_SOLS -> PRINT .)
    R_BRACK         reduce using rule 165 (PREDEFINED_SOLS -> PRINT .)
    COLON           reduce using rule 165 (PREDEFINED_SOLS -> PRINT .)


state 59

    (82) CON_VAR_TERMINAL -> INT_CONT .

    MULTIPLY        reduce using rule 82 (CON_VAR_TERMINAL -> INT_CONT .)
    DIVIDE          reduce using rule 82 (CON_VAR_TERMINAL -> INT_CONT .)
    PLUS            reduce using rule 82 (CON_VAR_TERMINAL -> INT_CONT .)
    MINUS           reduce using rule 82 (CON_VAR_TERMINAL -> INT_CONT .)
    LESS_T          reduce using rule 82 (CON_VAR_TERMINAL -> INT_CONT .)
    GREATER_T       reduce using rule 82 (CON_VAR_TERMINAL -> INT_CONT .)
    GREATER_T_EQUALS reduce using rule 82 (CON_VAR_TERMINAL -> INT_CONT .)
    LESS_T_EQUALS   reduce using rule 82 (CON_VAR_TERMINAL -> INT_CONT .)
    IS              reduce using rule 82 (CON_VAR_TERMINAL -> INT_CONT .)
    AND             reduce using rule 82 (CON_VAR_TERMINAL -> INT_CONT .)
    OR              reduce using rule 82 (CON_VAR_TERMINAL -> INT_CONT .)
    PERCENTAGE      reduce using rule 82 (CON_VAR_TERMINAL -> INT_CONT .)
    TICK            reduce using rule 82 (CON_VAR_TERMINAL -> INT_CONT .)
    COLON           reduce using rule 82 (CON_VAR_TERMINAL -> INT_CONT .)
    R_PAREN         reduce using rule 82 (CON_VAR_TERMINAL -> INT_CONT .)
    COMMA           reduce using rule 82 (CON_VAR_TERMINAL -> INT_CONT .)
    R_BRACK         reduce using rule 82 (CON_VAR_TERMINAL -> INT_CONT .)


state 60

    (150) DRAW_CIRCLE -> DRAW_CIRCLE_R . L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN

    L_PAREN         shift and go to state 108


state 61

    (83) CON_VAR_TERMINAL -> STRING_CONT .

    MULTIPLY        reduce using rule 83 (CON_VAR_TERMINAL -> STRING_CONT .)
    DIVIDE          reduce using rule 83 (CON_VAR_TERMINAL -> STRING_CONT .)
    PLUS            reduce using rule 83 (CON_VAR_TERMINAL -> STRING_CONT .)
    MINUS           reduce using rule 83 (CON_VAR_TERMINAL -> STRING_CONT .)
    LESS_T          reduce using rule 83 (CON_VAR_TERMINAL -> STRING_CONT .)
    GREATER_T       reduce using rule 83 (CON_VAR_TERMINAL -> STRING_CONT .)
    GREATER_T_EQUALS reduce using rule 83 (CON_VAR_TERMINAL -> STRING_CONT .)
    LESS_T_EQUALS   reduce using rule 83 (CON_VAR_TERMINAL -> STRING_CONT .)
    IS              reduce using rule 83 (CON_VAR_TERMINAL -> STRING_CONT .)
    AND             reduce using rule 83 (CON_VAR_TERMINAL -> STRING_CONT .)
    OR              reduce using rule 83 (CON_VAR_TERMINAL -> STRING_CONT .)
    PERCENTAGE      reduce using rule 83 (CON_VAR_TERMINAL -> STRING_CONT .)
    TICK            reduce using rule 83 (CON_VAR_TERMINAL -> STRING_CONT .)
    COLON           reduce using rule 83 (CON_VAR_TERMINAL -> STRING_CONT .)
    R_PAREN         reduce using rule 83 (CON_VAR_TERMINAL -> STRING_CONT .)
    COMMA           reduce using rule 83 (CON_VAR_TERMINAL -> STRING_CONT .)
    R_BRACK         reduce using rule 83 (CON_VAR_TERMINAL -> STRING_CONT .)


state 62

    (62) EXP -> TERM . process_possible_plus_minus_operation I
    (63) process_possible_plus_minus_operation -> .

    PLUS            reduce using rule 63 (process_possible_plus_minus_operation -> .)
    MINUS           reduce using rule 63 (process_possible_plus_minus_operation -> .)
    LESS_T          reduce using rule 63 (process_possible_plus_minus_operation -> .)
    GREATER_T       reduce using rule 63 (process_possible_plus_minus_operation -> .)
    GREATER_T_EQUALS reduce using rule 63 (process_possible_plus_minus_operation -> .)
    LESS_T_EQUALS   reduce using rule 63 (process_possible_plus_minus_operation -> .)
    IS              reduce using rule 63 (process_possible_plus_minus_operation -> .)
    AND             reduce using rule 63 (process_possible_plus_minus_operation -> .)
    OR              reduce using rule 63 (process_possible_plus_minus_operation -> .)
    PERCENTAGE      reduce using rule 63 (process_possible_plus_minus_operation -> .)
    COMMA           reduce using rule 63 (process_possible_plus_minus_operation -> .)
    TICK            reduce using rule 63 (process_possible_plus_minus_operation -> .)
    R_BRACK         reduce using rule 63 (process_possible_plus_minus_operation -> .)
    R_PAREN         reduce using rule 63 (process_possible_plus_minus_operation -> .)
    COLON           reduce using rule 63 (process_possible_plus_minus_operation -> .)

    process_possible_plus_minus_operation shift and go to state 109

state 63

    (164) PREDEFINED_SOLS -> MOVE_LEFT .

    MULTIPLY        reduce using rule 164 (PREDEFINED_SOLS -> MOVE_LEFT .)
    DIVIDE          reduce using rule 164 (PREDEFINED_SOLS -> MOVE_LEFT .)
    PLUS            reduce using rule 164 (PREDEFINED_SOLS -> MOVE_LEFT .)
    MINUS           reduce using rule 164 (PREDEFINED_SOLS -> MOVE_LEFT .)
    LESS_T          reduce using rule 164 (PREDEFINED_SOLS -> MOVE_LEFT .)
    GREATER_T       reduce using rule 164 (PREDEFINED_SOLS -> MOVE_LEFT .)
    GREATER_T_EQUALS reduce using rule 164 (PREDEFINED_SOLS -> MOVE_LEFT .)
    LESS_T_EQUALS   reduce using rule 164 (PREDEFINED_SOLS -> MOVE_LEFT .)
    IS              reduce using rule 164 (PREDEFINED_SOLS -> MOVE_LEFT .)
    AND             reduce using rule 164 (PREDEFINED_SOLS -> MOVE_LEFT .)
    OR              reduce using rule 164 (PREDEFINED_SOLS -> MOVE_LEFT .)
    PERCENTAGE      reduce using rule 164 (PREDEFINED_SOLS -> MOVE_LEFT .)
    R_PAREN         reduce using rule 164 (PREDEFINED_SOLS -> MOVE_LEFT .)
    TICK            reduce using rule 164 (PREDEFINED_SOLS -> MOVE_LEFT .)
    COMMA           reduce using rule 164 (PREDEFINED_SOLS -> MOVE_LEFT .)
    R_BRACK         reduce using rule 164 (PREDEFINED_SOLS -> MOVE_LEFT .)
    COLON           reduce using rule 164 (PREDEFINED_SOLS -> MOVE_LEFT .)


state 64

    (78) CON_VAR -> ID_REF .

    MULTIPLY        reduce using rule 78 (CON_VAR -> ID_REF .)
    DIVIDE          reduce using rule 78 (CON_VAR -> ID_REF .)
    PLUS            reduce using rule 78 (CON_VAR -> ID_REF .)
    MINUS           reduce using rule 78 (CON_VAR -> ID_REF .)
    LESS_T          reduce using rule 78 (CON_VAR -> ID_REF .)
    GREATER_T       reduce using rule 78 (CON_VAR -> ID_REF .)
    GREATER_T_EQUALS reduce using rule 78 (CON_VAR -> ID_REF .)
    LESS_T_EQUALS   reduce using rule 78 (CON_VAR -> ID_REF .)
    IS              reduce using rule 78 (CON_VAR -> ID_REF .)
    AND             reduce using rule 78 (CON_VAR -> ID_REF .)
    OR              reduce using rule 78 (CON_VAR -> ID_REF .)
    PERCENTAGE      reduce using rule 78 (CON_VAR -> ID_REF .)
    COMMA           reduce using rule 78 (CON_VAR -> ID_REF .)
    R_PAREN         reduce using rule 78 (CON_VAR -> ID_REF .)
    TICK            reduce using rule 78 (CON_VAR -> ID_REF .)
    R_BRACK         reduce using rule 78 (CON_VAR -> ID_REF .)
    COLON           reduce using rule 78 (CON_VAR -> ID_REF .)


state 65

    (162) PREDEFINED_SOLS -> MOVE_RIGHT .

    MULTIPLY        reduce using rule 162 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    DIVIDE          reduce using rule 162 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    PLUS            reduce using rule 162 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    MINUS           reduce using rule 162 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    LESS_T          reduce using rule 162 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    GREATER_T       reduce using rule 162 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    GREATER_T_EQUALS reduce using rule 162 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    LESS_T_EQUALS   reduce using rule 162 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    IS              reduce using rule 162 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    AND             reduce using rule 162 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    OR              reduce using rule 162 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    PERCENTAGE      reduce using rule 162 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    R_PAREN         reduce using rule 162 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    TICK            reduce using rule 162 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    COMMA           reduce using rule 162 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    R_BRACK         reduce using rule 162 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    COLON           reduce using rule 162 (PREDEFINED_SOLS -> MOVE_RIGHT .)


state 66

    (161) PREDEFINED_SOLS -> MOVE_UP .

    MULTIPLY        reduce using rule 161 (PREDEFINED_SOLS -> MOVE_UP .)
    DIVIDE          reduce using rule 161 (PREDEFINED_SOLS -> MOVE_UP .)
    PLUS            reduce using rule 161 (PREDEFINED_SOLS -> MOVE_UP .)
    MINUS           reduce using rule 161 (PREDEFINED_SOLS -> MOVE_UP .)
    LESS_T          reduce using rule 161 (PREDEFINED_SOLS -> MOVE_UP .)
    GREATER_T       reduce using rule 161 (PREDEFINED_SOLS -> MOVE_UP .)
    GREATER_T_EQUALS reduce using rule 161 (PREDEFINED_SOLS -> MOVE_UP .)
    LESS_T_EQUALS   reduce using rule 161 (PREDEFINED_SOLS -> MOVE_UP .)
    IS              reduce using rule 161 (PREDEFINED_SOLS -> MOVE_UP .)
    AND             reduce using rule 161 (PREDEFINED_SOLS -> MOVE_UP .)
    OR              reduce using rule 161 (PREDEFINED_SOLS -> MOVE_UP .)
    PERCENTAGE      reduce using rule 161 (PREDEFINED_SOLS -> MOVE_UP .)
    R_PAREN         reduce using rule 161 (PREDEFINED_SOLS -> MOVE_UP .)
    TICK            reduce using rule 161 (PREDEFINED_SOLS -> MOVE_UP .)
    COMMA           reduce using rule 161 (PREDEFINED_SOLS -> MOVE_UP .)
    R_BRACK         reduce using rule 161 (PREDEFINED_SOLS -> MOVE_UP .)
    COLON           reduce using rule 161 (PREDEFINED_SOLS -> MOVE_UP .)


state 67

    (75) FACTOR -> CON_VAR .

    MULTIPLY        reduce using rule 75 (FACTOR -> CON_VAR .)
    DIVIDE          reduce using rule 75 (FACTOR -> CON_VAR .)
    PLUS            reduce using rule 75 (FACTOR -> CON_VAR .)
    MINUS           reduce using rule 75 (FACTOR -> CON_VAR .)
    LESS_T          reduce using rule 75 (FACTOR -> CON_VAR .)
    GREATER_T       reduce using rule 75 (FACTOR -> CON_VAR .)
    GREATER_T_EQUALS reduce using rule 75 (FACTOR -> CON_VAR .)
    LESS_T_EQUALS   reduce using rule 75 (FACTOR -> CON_VAR .)
    IS              reduce using rule 75 (FACTOR -> CON_VAR .)
    AND             reduce using rule 75 (FACTOR -> CON_VAR .)
    OR              reduce using rule 75 (FACTOR -> CON_VAR .)
    PERCENTAGE      reduce using rule 75 (FACTOR -> CON_VAR .)
    COMMA           reduce using rule 75 (FACTOR -> CON_VAR .)
    TICK            reduce using rule 75 (FACTOR -> CON_VAR .)
    R_BRACK         reduce using rule 75 (FACTOR -> CON_VAR .)
    R_PAREN         reduce using rule 75 (FACTOR -> CON_VAR .)
    COLON           reduce using rule 75 (FACTOR -> CON_VAR .)


state 68

    (156) MOVE_LEFT -> MOVE_LEFT_R . L_PAREN S_EXPRESSION R_PAREN

    L_PAREN         shift and go to state 110


state 69

    (139) S_EXPRESSION -> EXPRESSION .

    COMMA           reduce using rule 139 (S_EXPRESSION -> EXPRESSION .)
    R_PAREN         reduce using rule 139 (S_EXPRESSION -> EXPRESSION .)
    TICK            reduce using rule 139 (S_EXPRESSION -> EXPRESSION .)
    COLON           reduce using rule 139 (S_EXPRESSION -> EXPRESSION .)
    R_BRACK         reduce using rule 139 (S_EXPRESSION -> EXPRESSION .)


state 70

    (84) CON_VAR_TERMINAL -> CHAR_CONT .

    MULTIPLY        reduce using rule 84 (CON_VAR_TERMINAL -> CHAR_CONT .)
    DIVIDE          reduce using rule 84 (CON_VAR_TERMINAL -> CHAR_CONT .)
    PLUS            reduce using rule 84 (CON_VAR_TERMINAL -> CHAR_CONT .)
    MINUS           reduce using rule 84 (CON_VAR_TERMINAL -> CHAR_CONT .)
    LESS_T          reduce using rule 84 (CON_VAR_TERMINAL -> CHAR_CONT .)
    GREATER_T       reduce using rule 84 (CON_VAR_TERMINAL -> CHAR_CONT .)
    GREATER_T_EQUALS reduce using rule 84 (CON_VAR_TERMINAL -> CHAR_CONT .)
    LESS_T_EQUALS   reduce using rule 84 (CON_VAR_TERMINAL -> CHAR_CONT .)
    IS              reduce using rule 84 (CON_VAR_TERMINAL -> CHAR_CONT .)
    AND             reduce using rule 84 (CON_VAR_TERMINAL -> CHAR_CONT .)
    OR              reduce using rule 84 (CON_VAR_TERMINAL -> CHAR_CONT .)
    PERCENTAGE      reduce using rule 84 (CON_VAR_TERMINAL -> CHAR_CONT .)
    TICK            reduce using rule 84 (CON_VAR_TERMINAL -> CHAR_CONT .)
    COLON           reduce using rule 84 (CON_VAR_TERMINAL -> CHAR_CONT .)
    R_PAREN         reduce using rule 84 (CON_VAR_TERMINAL -> CHAR_CONT .)
    COMMA           reduce using rule 84 (CON_VAR_TERMINAL -> CHAR_CONT .)
    R_BRACK         reduce using rule 84 (CON_VAR_TERMINAL -> CHAR_CONT .)


state 71

    (16) B -> EQUALS C . assign_var_value
    (18) assign_var_value -> .

    COMMA           reduce using rule 18 (assign_var_value -> .)
    TICK            reduce using rule 18 (assign_var_value -> .)

    assign_var_value               shift and go to state 111

state 72

    (87) NEGATION -> N . S_EXPRESSION process_negation_operation
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 112
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    SOLUTION_CALL                  shift and go to state 55
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    NEGATION                       shift and go to state 81
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 73

    (160) PREDEFINED_SOLS -> DRAW_RECTANGLE .

    MULTIPLY        reduce using rule 160 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    DIVIDE          reduce using rule 160 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    PLUS            reduce using rule 160 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    MINUS           reduce using rule 160 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    LESS_T          reduce using rule 160 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    GREATER_T       reduce using rule 160 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    GREATER_T_EQUALS reduce using rule 160 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    LESS_T_EQUALS   reduce using rule 160 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    IS              reduce using rule 160 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    AND             reduce using rule 160 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    OR              reduce using rule 160 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    PERCENTAGE      reduce using rule 160 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    R_PAREN         reduce using rule 160 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    TICK            reduce using rule 160 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    COMMA           reduce using rule 160 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    R_BRACK         reduce using rule 160 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    COLON           reduce using rule 160 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)


state 74

    (158) PREDEFINED_SOLS -> DRAW_LINE .

    MULTIPLY        reduce using rule 158 (PREDEFINED_SOLS -> DRAW_LINE .)
    DIVIDE          reduce using rule 158 (PREDEFINED_SOLS -> DRAW_LINE .)
    PLUS            reduce using rule 158 (PREDEFINED_SOLS -> DRAW_LINE .)
    MINUS           reduce using rule 158 (PREDEFINED_SOLS -> DRAW_LINE .)
    LESS_T          reduce using rule 158 (PREDEFINED_SOLS -> DRAW_LINE .)
    GREATER_T       reduce using rule 158 (PREDEFINED_SOLS -> DRAW_LINE .)
    GREATER_T_EQUALS reduce using rule 158 (PREDEFINED_SOLS -> DRAW_LINE .)
    LESS_T_EQUALS   reduce using rule 158 (PREDEFINED_SOLS -> DRAW_LINE .)
    IS              reduce using rule 158 (PREDEFINED_SOLS -> DRAW_LINE .)
    AND             reduce using rule 158 (PREDEFINED_SOLS -> DRAW_LINE .)
    OR              reduce using rule 158 (PREDEFINED_SOLS -> DRAW_LINE .)
    PERCENTAGE      reduce using rule 158 (PREDEFINED_SOLS -> DRAW_LINE .)
    R_PAREN         reduce using rule 158 (PREDEFINED_SOLS -> DRAW_LINE .)
    TICK            reduce using rule 158 (PREDEFINED_SOLS -> DRAW_LINE .)
    COMMA           reduce using rule 158 (PREDEFINED_SOLS -> DRAW_LINE .)
    R_BRACK         reduce using rule 158 (PREDEFINED_SOLS -> DRAW_LINE .)
    COLON           reduce using rule 158 (PREDEFINED_SOLS -> DRAW_LINE .)


state 75

    (90) ID_REF -> ID . check_var_existence get_var_type O
    (130) SOLUTION_CALL -> ID . check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (91) check_var_existence -> .
    (133) check_sol_existence -> .

    L_BRACK         reduce using rule 91 (check_var_existence -> .)
    MULTIPLY        reduce using rule 91 (check_var_existence -> .)
    DIVIDE          reduce using rule 91 (check_var_existence -> .)
    PLUS            reduce using rule 91 (check_var_existence -> .)
    MINUS           reduce using rule 91 (check_var_existence -> .)
    LESS_T          reduce using rule 91 (check_var_existence -> .)
    GREATER_T       reduce using rule 91 (check_var_existence -> .)
    GREATER_T_EQUALS reduce using rule 91 (check_var_existence -> .)
    LESS_T_EQUALS   reduce using rule 91 (check_var_existence -> .)
    IS              reduce using rule 91 (check_var_existence -> .)
    AND             reduce using rule 91 (check_var_existence -> .)
    OR              reduce using rule 91 (check_var_existence -> .)
    PERCENTAGE      reduce using rule 91 (check_var_existence -> .)
    COMMA           reduce using rule 91 (check_var_existence -> .)
    TICK            reduce using rule 91 (check_var_existence -> .)
    R_BRACK         reduce using rule 91 (check_var_existence -> .)
    R_PAREN         reduce using rule 91 (check_var_existence -> .)
    COLON           reduce using rule 91 (check_var_existence -> .)
    EQUALS          reduce using rule 91 (check_var_existence -> .)
    L_PAREN         reduce using rule 133 (check_sol_existence -> .)

    check_sol_existence            shift and go to state 113
    check_var_existence            shift and go to state 114

state 76

    (86) CON_VAR_TERMINAL -> BOOL_CONT .

    MULTIPLY        reduce using rule 86 (CON_VAR_TERMINAL -> BOOL_CONT .)
    DIVIDE          reduce using rule 86 (CON_VAR_TERMINAL -> BOOL_CONT .)
    PLUS            reduce using rule 86 (CON_VAR_TERMINAL -> BOOL_CONT .)
    MINUS           reduce using rule 86 (CON_VAR_TERMINAL -> BOOL_CONT .)
    LESS_T          reduce using rule 86 (CON_VAR_TERMINAL -> BOOL_CONT .)
    GREATER_T       reduce using rule 86 (CON_VAR_TERMINAL -> BOOL_CONT .)
    GREATER_T_EQUALS reduce using rule 86 (CON_VAR_TERMINAL -> BOOL_CONT .)
    LESS_T_EQUALS   reduce using rule 86 (CON_VAR_TERMINAL -> BOOL_CONT .)
    IS              reduce using rule 86 (CON_VAR_TERMINAL -> BOOL_CONT .)
    AND             reduce using rule 86 (CON_VAR_TERMINAL -> BOOL_CONT .)
    OR              reduce using rule 86 (CON_VAR_TERMINAL -> BOOL_CONT .)
    PERCENTAGE      reduce using rule 86 (CON_VAR_TERMINAL -> BOOL_CONT .)
    TICK            reduce using rule 86 (CON_VAR_TERMINAL -> BOOL_CONT .)
    COLON           reduce using rule 86 (CON_VAR_TERMINAL -> BOOL_CONT .)
    R_PAREN         reduce using rule 86 (CON_VAR_TERMINAL -> BOOL_CONT .)
    COMMA           reduce using rule 86 (CON_VAR_TERMINAL -> BOOL_CONT .)
    R_BRACK         reduce using rule 86 (CON_VAR_TERMINAL -> BOOL_CONT .)


state 77

    (85) CON_VAR_TERMINAL -> FLOAT_CONT .

    MULTIPLY        reduce using rule 85 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    DIVIDE          reduce using rule 85 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    PLUS            reduce using rule 85 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    MINUS           reduce using rule 85 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    LESS_T          reduce using rule 85 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    GREATER_T       reduce using rule 85 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    GREATER_T_EQUALS reduce using rule 85 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    LESS_T_EQUALS   reduce using rule 85 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    IS              reduce using rule 85 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    AND             reduce using rule 85 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    OR              reduce using rule 85 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    PERCENTAGE      reduce using rule 85 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    TICK            reduce using rule 85 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    COLON           reduce using rule 85 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    R_PAREN         reduce using rule 85 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    COMMA           reduce using rule 85 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    R_BRACK         reduce using rule 85 (CON_VAR_TERMINAL -> FLOAT_CONT .)


state 78

    (96) LIST_EXP -> L_BRACK . S_EXPRESSION P R_BRACK
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 115
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    SOLUTION_CALL                  shift and go to state 55
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    NEGATION                       shift and go to state 81
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 79

    (79) CON_VAR -> CON_VAR_TERMINAL .

    MULTIPLY        reduce using rule 79 (CON_VAR -> CON_VAR_TERMINAL .)
    DIVIDE          reduce using rule 79 (CON_VAR -> CON_VAR_TERMINAL .)
    PLUS            reduce using rule 79 (CON_VAR -> CON_VAR_TERMINAL .)
    MINUS           reduce using rule 79 (CON_VAR -> CON_VAR_TERMINAL .)
    LESS_T          reduce using rule 79 (CON_VAR -> CON_VAR_TERMINAL .)
    GREATER_T       reduce using rule 79 (CON_VAR -> CON_VAR_TERMINAL .)
    GREATER_T_EQUALS reduce using rule 79 (CON_VAR -> CON_VAR_TERMINAL .)
    LESS_T_EQUALS   reduce using rule 79 (CON_VAR -> CON_VAR_TERMINAL .)
    IS              reduce using rule 79 (CON_VAR -> CON_VAR_TERMINAL .)
    AND             reduce using rule 79 (CON_VAR -> CON_VAR_TERMINAL .)
    OR              reduce using rule 79 (CON_VAR -> CON_VAR_TERMINAL .)
    PERCENTAGE      reduce using rule 79 (CON_VAR -> CON_VAR_TERMINAL .)
    COMMA           reduce using rule 79 (CON_VAR -> CON_VAR_TERMINAL .)
    R_PAREN         reduce using rule 79 (CON_VAR -> CON_VAR_TERMINAL .)
    TICK            reduce using rule 79 (CON_VAR -> CON_VAR_TERMINAL .)
    R_BRACK         reduce using rule 79 (CON_VAR -> CON_VAR_TERMINAL .)
    COLON           reduce using rule 79 (CON_VAR -> CON_VAR_TERMINAL .)


state 80

    (153) MOVE_UP -> MOVE_UP_R . L_PAREN S_EXPRESSION R_PAREN

    L_PAREN         shift and go to state 116


state 81

    (140) S_EXPRESSION -> NEGATION .

    COMMA           reduce using rule 140 (S_EXPRESSION -> NEGATION .)
    R_PAREN         reduce using rule 140 (S_EXPRESSION -> NEGATION .)
    TICK            reduce using rule 140 (S_EXPRESSION -> NEGATION .)
    COLON           reduce using rule 140 (S_EXPRESSION -> NEGATION .)
    R_BRACK         reduce using rule 140 (S_EXPRESSION -> NEGATION .)


state 82

    (81) CON_VAR -> PREDEFINED_SOLS .

    MULTIPLY        reduce using rule 81 (CON_VAR -> PREDEFINED_SOLS .)
    DIVIDE          reduce using rule 81 (CON_VAR -> PREDEFINED_SOLS .)
    PLUS            reduce using rule 81 (CON_VAR -> PREDEFINED_SOLS .)
    MINUS           reduce using rule 81 (CON_VAR -> PREDEFINED_SOLS .)
    LESS_T          reduce using rule 81 (CON_VAR -> PREDEFINED_SOLS .)
    GREATER_T       reduce using rule 81 (CON_VAR -> PREDEFINED_SOLS .)
    GREATER_T_EQUALS reduce using rule 81 (CON_VAR -> PREDEFINED_SOLS .)
    LESS_T_EQUALS   reduce using rule 81 (CON_VAR -> PREDEFINED_SOLS .)
    IS              reduce using rule 81 (CON_VAR -> PREDEFINED_SOLS .)
    AND             reduce using rule 81 (CON_VAR -> PREDEFINED_SOLS .)
    OR              reduce using rule 81 (CON_VAR -> PREDEFINED_SOLS .)
    PERCENTAGE      reduce using rule 81 (CON_VAR -> PREDEFINED_SOLS .)
    COMMA           reduce using rule 81 (CON_VAR -> PREDEFINED_SOLS .)
    R_PAREN         reduce using rule 81 (CON_VAR -> PREDEFINED_SOLS .)
    TICK            reduce using rule 81 (CON_VAR -> PREDEFINED_SOLS .)
    R_BRACK         reduce using rule 81 (CON_VAR -> PREDEFINED_SOLS .)
    COLON           reduce using rule 81 (CON_VAR -> PREDEFINED_SOLS .)


state 83

    (163) PREDEFINED_SOLS -> MOVE_DOWN .

    MULTIPLY        reduce using rule 163 (PREDEFINED_SOLS -> MOVE_DOWN .)
    DIVIDE          reduce using rule 163 (PREDEFINED_SOLS -> MOVE_DOWN .)
    PLUS            reduce using rule 163 (PREDEFINED_SOLS -> MOVE_DOWN .)
    MINUS           reduce using rule 163 (PREDEFINED_SOLS -> MOVE_DOWN .)
    LESS_T          reduce using rule 163 (PREDEFINED_SOLS -> MOVE_DOWN .)
    GREATER_T       reduce using rule 163 (PREDEFINED_SOLS -> MOVE_DOWN .)
    GREATER_T_EQUALS reduce using rule 163 (PREDEFINED_SOLS -> MOVE_DOWN .)
    LESS_T_EQUALS   reduce using rule 163 (PREDEFINED_SOLS -> MOVE_DOWN .)
    IS              reduce using rule 163 (PREDEFINED_SOLS -> MOVE_DOWN .)
    AND             reduce using rule 163 (PREDEFINED_SOLS -> MOVE_DOWN .)
    OR              reduce using rule 163 (PREDEFINED_SOLS -> MOVE_DOWN .)
    PERCENTAGE      reduce using rule 163 (PREDEFINED_SOLS -> MOVE_DOWN .)
    R_PAREN         reduce using rule 163 (PREDEFINED_SOLS -> MOVE_DOWN .)
    TICK            reduce using rule 163 (PREDEFINED_SOLS -> MOVE_DOWN .)
    COMMA           reduce using rule 163 (PREDEFINED_SOLS -> MOVE_DOWN .)
    R_BRACK         reduce using rule 163 (PREDEFINED_SOLS -> MOVE_DOWN .)
    COLON           reduce using rule 163 (PREDEFINED_SOLS -> MOVE_DOWN .)


state 84

    (154) MOVE_RIGHT -> MOVE_RIGHT_R . L_PAREN S_EXPRESSION R_PAREN

    L_PAREN         shift and go to state 117


state 85

    (68) TERM -> FACTOR . process_possible_multiply_divide_operation K
    (69) process_possible_multiply_divide_operation -> .

    MULTIPLY        reduce using rule 69 (process_possible_multiply_divide_operation -> .)
    DIVIDE          reduce using rule 69 (process_possible_multiply_divide_operation -> .)
    PLUS            reduce using rule 69 (process_possible_multiply_divide_operation -> .)
    MINUS           reduce using rule 69 (process_possible_multiply_divide_operation -> .)
    LESS_T          reduce using rule 69 (process_possible_multiply_divide_operation -> .)
    GREATER_T       reduce using rule 69 (process_possible_multiply_divide_operation -> .)
    GREATER_T_EQUALS reduce using rule 69 (process_possible_multiply_divide_operation -> .)
    LESS_T_EQUALS   reduce using rule 69 (process_possible_multiply_divide_operation -> .)
    IS              reduce using rule 69 (process_possible_multiply_divide_operation -> .)
    AND             reduce using rule 69 (process_possible_multiply_divide_operation -> .)
    OR              reduce using rule 69 (process_possible_multiply_divide_operation -> .)
    PERCENTAGE      reduce using rule 69 (process_possible_multiply_divide_operation -> .)
    COMMA           reduce using rule 69 (process_possible_multiply_divide_operation -> .)
    TICK            reduce using rule 69 (process_possible_multiply_divide_operation -> .)
    R_BRACK         reduce using rule 69 (process_possible_multiply_divide_operation -> .)
    R_PAREN         reduce using rule 69 (process_possible_multiply_divide_operation -> .)
    COLON           reduce using rule 69 (process_possible_multiply_divide_operation -> .)

    process_possible_multiply_divide_operation shift and go to state 118

state 86

    (89) N -> NOT .

    NOT             reduce using rule 89 (N -> NOT .)
    L_PAREN         reduce using rule 89 (N -> NOT .)
    ID              reduce using rule 89 (N -> NOT .)
    INT_CONT        reduce using rule 89 (N -> NOT .)
    STRING_CONT     reduce using rule 89 (N -> NOT .)
    CHAR_CONT       reduce using rule 89 (N -> NOT .)
    FLOAT_CONT      reduce using rule 89 (N -> NOT .)
    BOOL_CONT       reduce using rule 89 (N -> NOT .)
    DRAW_LINE_R     reduce using rule 89 (N -> NOT .)
    DRAW_CIRCLE_R   reduce using rule 89 (N -> NOT .)
    DRAW_RECTANGLE_R reduce using rule 89 (N -> NOT .)
    MOVE_UP_R       reduce using rule 89 (N -> NOT .)
    MOVE_RIGHT_R    reduce using rule 89 (N -> NOT .)
    MOVE_DOWN_R     reduce using rule 89 (N -> NOT .)
    MOVE_LEFT_R     reduce using rule 89 (N -> NOT .)
    PRINT_R         reduce using rule 89 (N -> NOT .)


state 87

    (157) PRINT -> PRINT_R . L_PAREN S_EXPRESSION R_PAREN

    L_PAREN         shift and go to state 119


state 88

    (159) PREDEFINED_SOLS -> DRAW_CIRCLE .

    MULTIPLY        reduce using rule 159 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    DIVIDE          reduce using rule 159 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    PLUS            reduce using rule 159 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    MINUS           reduce using rule 159 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    LESS_T          reduce using rule 159 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    GREATER_T       reduce using rule 159 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    GREATER_T_EQUALS reduce using rule 159 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    LESS_T_EQUALS   reduce using rule 159 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    IS              reduce using rule 159 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    AND             reduce using rule 159 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    OR              reduce using rule 159 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    PERCENTAGE      reduce using rule 159 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    R_PAREN         reduce using rule 159 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    TICK            reduce using rule 159 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    COMMA           reduce using rule 159 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    R_BRACK         reduce using rule 159 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    COLON           reduce using rule 159 (PREDEFINED_SOLS -> DRAW_CIRCLE .)


state 89

    (28) SOLUTION_DEF -> SOL S_TYPE store_type ID . check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block
    (30) check_sol_duplicates -> .

    L_PAREN         reduce using rule 30 (check_sol_duplicates -> .)

    check_sol_duplicates           shift and go to state 120

state 90

    (149) MAIN_DEFINITION -> INT store_type MAIN_R . check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block
    (30) check_sol_duplicates -> .

    L_PAREN         reduce using rule 30 (check_sol_duplicates -> .)

    check_sol_duplicates           shift and go to state 121

state 91

    (1) program -> PROGRAM ID create_global_fun COLON VAR_BLOCK update_global_fun print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION update_constant_number free_symbol_table . print_funDir
    (2) print_funDir -> .

    $end            reduce using rule 2 (print_funDir -> .)

    print_funDir                   shift and go to state 122

state 92

    (21) D -> COMMA A .

    TICK            reduce using rule 21 (D -> COMMA A .)


state 93

    (151) DRAW_LINE -> DRAW_LINE_R L_PAREN . S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 123
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    SOLUTION_CALL                  shift and go to state 55
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    NEGATION                       shift and go to state 81
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 94

    (155) MOVE_DOWN -> MOVE_DOWN_R L_PAREN . S_EXPRESSION R_PAREN
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 124
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    SOLUTION_CALL                  shift and go to state 55
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    NEGATION                       shift and go to state 81
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 95

    (74) FACTOR -> L_PAREN push_false_bottom . S_EXPRESSION R_PAREN pop_false_bottom
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 125
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    SOLUTION_CALL                  shift and go to state 55
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    NEGATION                       shift and go to state 81
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 96

    (152) DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN . S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 126
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    SOLUTION_CALL                  shift and go to state 55
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    NEGATION                       shift and go to state 81
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 97

    (59) H -> AND .

    L_PAREN         reduce using rule 59 (H -> AND .)
    ID              reduce using rule 59 (H -> AND .)
    INT_CONT        reduce using rule 59 (H -> AND .)
    STRING_CONT     reduce using rule 59 (H -> AND .)
    CHAR_CONT       reduce using rule 59 (H -> AND .)
    FLOAT_CONT      reduce using rule 59 (H -> AND .)
    BOOL_CONT       reduce using rule 59 (H -> AND .)
    DRAW_LINE_R     reduce using rule 59 (H -> AND .)
    DRAW_CIRCLE_R   reduce using rule 59 (H -> AND .)
    DRAW_RECTANGLE_R reduce using rule 59 (H -> AND .)
    MOVE_UP_R       reduce using rule 59 (H -> AND .)
    MOVE_RIGHT_R    reduce using rule 59 (H -> AND .)
    MOVE_DOWN_R     reduce using rule 59 (H -> AND .)
    MOVE_LEFT_R     reduce using rule 59 (H -> AND .)
    PRINT_R         reduce using rule 59 (H -> AND .)


state 98

    (55) H -> GREATER_T .

    L_PAREN         reduce using rule 55 (H -> GREATER_T .)
    ID              reduce using rule 55 (H -> GREATER_T .)
    INT_CONT        reduce using rule 55 (H -> GREATER_T .)
    STRING_CONT     reduce using rule 55 (H -> GREATER_T .)
    CHAR_CONT       reduce using rule 55 (H -> GREATER_T .)
    FLOAT_CONT      reduce using rule 55 (H -> GREATER_T .)
    BOOL_CONT       reduce using rule 55 (H -> GREATER_T .)
    DRAW_LINE_R     reduce using rule 55 (H -> GREATER_T .)
    DRAW_CIRCLE_R   reduce using rule 55 (H -> GREATER_T .)
    DRAW_RECTANGLE_R reduce using rule 55 (H -> GREATER_T .)
    MOVE_UP_R       reduce using rule 55 (H -> GREATER_T .)
    MOVE_RIGHT_R    reduce using rule 55 (H -> GREATER_T .)
    MOVE_DOWN_R     reduce using rule 55 (H -> GREATER_T .)
    MOVE_LEFT_R     reduce using rule 55 (H -> GREATER_T .)
    PRINT_R         reduce using rule 55 (H -> GREATER_T .)


state 99

    (50) EXPRESSION -> EXP G .

    COMMA           reduce using rule 50 (EXPRESSION -> EXP G .)
    R_BRACK         reduce using rule 50 (EXPRESSION -> EXP G .)
    TICK            reduce using rule 50 (EXPRESSION -> EXP G .)
    COLON           reduce using rule 50 (EXPRESSION -> EXP G .)
    R_PAREN         reduce using rule 50 (EXPRESSION -> EXP G .)


state 100

    (51) G -> H . EXP process_possible_relop_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 127
    SOLUTION_CALL                  shift and go to state 55
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    FACTOR                         shift and go to state 85
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    DRAW_CIRCLE                    shift and go to state 88

state 101

    (58) H -> IS .

    L_PAREN         reduce using rule 58 (H -> IS .)
    ID              reduce using rule 58 (H -> IS .)
    INT_CONT        reduce using rule 58 (H -> IS .)
    STRING_CONT     reduce using rule 58 (H -> IS .)
    CHAR_CONT       reduce using rule 58 (H -> IS .)
    FLOAT_CONT      reduce using rule 58 (H -> IS .)
    BOOL_CONT       reduce using rule 58 (H -> IS .)
    DRAW_LINE_R     reduce using rule 58 (H -> IS .)
    DRAW_CIRCLE_R   reduce using rule 58 (H -> IS .)
    DRAW_RECTANGLE_R reduce using rule 58 (H -> IS .)
    MOVE_UP_R       reduce using rule 58 (H -> IS .)
    MOVE_RIGHT_R    reduce using rule 58 (H -> IS .)
    MOVE_DOWN_R     reduce using rule 58 (H -> IS .)
    MOVE_LEFT_R     reduce using rule 58 (H -> IS .)
    PRINT_R         reduce using rule 58 (H -> IS .)


state 102

    (54) H -> LESS_T .

    L_PAREN         reduce using rule 54 (H -> LESS_T .)
    ID              reduce using rule 54 (H -> LESS_T .)
    INT_CONT        reduce using rule 54 (H -> LESS_T .)
    STRING_CONT     reduce using rule 54 (H -> LESS_T .)
    CHAR_CONT       reduce using rule 54 (H -> LESS_T .)
    FLOAT_CONT      reduce using rule 54 (H -> LESS_T .)
    BOOL_CONT       reduce using rule 54 (H -> LESS_T .)
    DRAW_LINE_R     reduce using rule 54 (H -> LESS_T .)
    DRAW_CIRCLE_R   reduce using rule 54 (H -> LESS_T .)
    DRAW_RECTANGLE_R reduce using rule 54 (H -> LESS_T .)
    MOVE_UP_R       reduce using rule 54 (H -> LESS_T .)
    MOVE_RIGHT_R    reduce using rule 54 (H -> LESS_T .)
    MOVE_DOWN_R     reduce using rule 54 (H -> LESS_T .)
    MOVE_LEFT_R     reduce using rule 54 (H -> LESS_T .)
    PRINT_R         reduce using rule 54 (H -> LESS_T .)


state 103

    (57) H -> LESS_T_EQUALS .

    L_PAREN         reduce using rule 57 (H -> LESS_T_EQUALS .)
    ID              reduce using rule 57 (H -> LESS_T_EQUALS .)
    INT_CONT        reduce using rule 57 (H -> LESS_T_EQUALS .)
    STRING_CONT     reduce using rule 57 (H -> LESS_T_EQUALS .)
    CHAR_CONT       reduce using rule 57 (H -> LESS_T_EQUALS .)
    FLOAT_CONT      reduce using rule 57 (H -> LESS_T_EQUALS .)
    BOOL_CONT       reduce using rule 57 (H -> LESS_T_EQUALS .)
    DRAW_LINE_R     reduce using rule 57 (H -> LESS_T_EQUALS .)
    DRAW_CIRCLE_R   reduce using rule 57 (H -> LESS_T_EQUALS .)
    DRAW_RECTANGLE_R reduce using rule 57 (H -> LESS_T_EQUALS .)
    MOVE_UP_R       reduce using rule 57 (H -> LESS_T_EQUALS .)
    MOVE_RIGHT_R    reduce using rule 57 (H -> LESS_T_EQUALS .)
    MOVE_DOWN_R     reduce using rule 57 (H -> LESS_T_EQUALS .)
    MOVE_LEFT_R     reduce using rule 57 (H -> LESS_T_EQUALS .)
    PRINT_R         reduce using rule 57 (H -> LESS_T_EQUALS .)


state 104

    (56) H -> GREATER_T_EQUALS .

    L_PAREN         reduce using rule 56 (H -> GREATER_T_EQUALS .)
    ID              reduce using rule 56 (H -> GREATER_T_EQUALS .)
    INT_CONT        reduce using rule 56 (H -> GREATER_T_EQUALS .)
    STRING_CONT     reduce using rule 56 (H -> GREATER_T_EQUALS .)
    CHAR_CONT       reduce using rule 56 (H -> GREATER_T_EQUALS .)
    FLOAT_CONT      reduce using rule 56 (H -> GREATER_T_EQUALS .)
    BOOL_CONT       reduce using rule 56 (H -> GREATER_T_EQUALS .)
    DRAW_LINE_R     reduce using rule 56 (H -> GREATER_T_EQUALS .)
    DRAW_CIRCLE_R   reduce using rule 56 (H -> GREATER_T_EQUALS .)
    DRAW_RECTANGLE_R reduce using rule 56 (H -> GREATER_T_EQUALS .)
    MOVE_UP_R       reduce using rule 56 (H -> GREATER_T_EQUALS .)
    MOVE_RIGHT_R    reduce using rule 56 (H -> GREATER_T_EQUALS .)
    MOVE_DOWN_R     reduce using rule 56 (H -> GREATER_T_EQUALS .)
    MOVE_LEFT_R     reduce using rule 56 (H -> GREATER_T_EQUALS .)
    PRINT_R         reduce using rule 56 (H -> GREATER_T_EQUALS .)


state 105

    (61) H -> PERCENTAGE .

    L_PAREN         reduce using rule 61 (H -> PERCENTAGE .)
    ID              reduce using rule 61 (H -> PERCENTAGE .)
    INT_CONT        reduce using rule 61 (H -> PERCENTAGE .)
    STRING_CONT     reduce using rule 61 (H -> PERCENTAGE .)
    CHAR_CONT       reduce using rule 61 (H -> PERCENTAGE .)
    FLOAT_CONT      reduce using rule 61 (H -> PERCENTAGE .)
    BOOL_CONT       reduce using rule 61 (H -> PERCENTAGE .)
    DRAW_LINE_R     reduce using rule 61 (H -> PERCENTAGE .)
    DRAW_CIRCLE_R   reduce using rule 61 (H -> PERCENTAGE .)
    DRAW_RECTANGLE_R reduce using rule 61 (H -> PERCENTAGE .)
    MOVE_UP_R       reduce using rule 61 (H -> PERCENTAGE .)
    MOVE_RIGHT_R    reduce using rule 61 (H -> PERCENTAGE .)
    MOVE_DOWN_R     reduce using rule 61 (H -> PERCENTAGE .)
    MOVE_LEFT_R     reduce using rule 61 (H -> PERCENTAGE .)
    PRINT_R         reduce using rule 61 (H -> PERCENTAGE .)


state 106

    (60) H -> OR .

    L_PAREN         reduce using rule 60 (H -> OR .)
    ID              reduce using rule 60 (H -> OR .)
    INT_CONT        reduce using rule 60 (H -> OR .)
    STRING_CONT     reduce using rule 60 (H -> OR .)
    CHAR_CONT       reduce using rule 60 (H -> OR .)
    FLOAT_CONT      reduce using rule 60 (H -> OR .)
    BOOL_CONT       reduce using rule 60 (H -> OR .)
    DRAW_LINE_R     reduce using rule 60 (H -> OR .)
    DRAW_CIRCLE_R   reduce using rule 60 (H -> OR .)
    DRAW_RECTANGLE_R reduce using rule 60 (H -> OR .)
    MOVE_UP_R       reduce using rule 60 (H -> OR .)
    MOVE_RIGHT_R    reduce using rule 60 (H -> OR .)
    MOVE_DOWN_R     reduce using rule 60 (H -> OR .)
    MOVE_LEFT_R     reduce using rule 60 (H -> OR .)
    PRINT_R         reduce using rule 60 (H -> OR .)


state 107

    (52) G -> empty .

    COMMA           reduce using rule 52 (G -> empty .)
    TICK            reduce using rule 52 (G -> empty .)
    R_BRACK         reduce using rule 52 (G -> empty .)
    R_PAREN         reduce using rule 52 (G -> empty .)
    COLON           reduce using rule 52 (G -> empty .)


state 108

    (150) DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN . S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 128
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    SOLUTION_CALL                  shift and go to state 55
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    NEGATION                       shift and go to state 81
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 109

    (62) EXP -> TERM process_possible_plus_minus_operation . I
    (64) I -> . J EXP
    (65) I -> . empty
    (66) J -> . PLUS
    (67) J -> . MINUS
    (166) empty -> .

    PLUS            shift and go to state 131
    MINUS           shift and go to state 132
    LESS_T          reduce using rule 166 (empty -> .)
    GREATER_T       reduce using rule 166 (empty -> .)
    GREATER_T_EQUALS reduce using rule 166 (empty -> .)
    LESS_T_EQUALS   reduce using rule 166 (empty -> .)
    IS              reduce using rule 166 (empty -> .)
    AND             reduce using rule 166 (empty -> .)
    OR              reduce using rule 166 (empty -> .)
    PERCENTAGE      reduce using rule 166 (empty -> .)
    COMMA           reduce using rule 166 (empty -> .)
    TICK            reduce using rule 166 (empty -> .)
    R_BRACK         reduce using rule 166 (empty -> .)
    R_PAREN         reduce using rule 166 (empty -> .)
    COLON           reduce using rule 166 (empty -> .)

    I                              shift and go to state 129
    J                              shift and go to state 130
    empty                          shift and go to state 133

state 110

    (156) MOVE_LEFT -> MOVE_LEFT_R L_PAREN . S_EXPRESSION R_PAREN
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 134
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    SOLUTION_CALL                  shift and go to state 55
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    NEGATION                       shift and go to state 81
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 111

    (16) B -> EQUALS C assign_var_value .

    COMMA           reduce using rule 16 (B -> EQUALS C assign_var_value .)
    TICK            reduce using rule 16 (B -> EQUALS C assign_var_value .)


state 112

    (87) NEGATION -> N S_EXPRESSION . process_negation_operation
    (88) process_negation_operation -> .

    COMMA           reduce using rule 88 (process_negation_operation -> .)
    TICK            reduce using rule 88 (process_negation_operation -> .)
    R_BRACK         reduce using rule 88 (process_negation_operation -> .)
    R_PAREN         reduce using rule 88 (process_negation_operation -> .)
    COLON           reduce using rule 88 (process_negation_operation -> .)

    process_negation_operation     shift and go to state 135

state 113

    (130) SOLUTION_CALL -> ID check_sol_existence . L_PAREN generate_era_quad V R_PAREN end_argument_processing

    L_PAREN         shift and go to state 136


state 114

    (90) ID_REF -> ID check_var_existence . get_var_type O
    (92) get_var_type -> .

    L_BRACK         reduce using rule 92 (get_var_type -> .)
    MULTIPLY        reduce using rule 92 (get_var_type -> .)
    DIVIDE          reduce using rule 92 (get_var_type -> .)
    PLUS            reduce using rule 92 (get_var_type -> .)
    MINUS           reduce using rule 92 (get_var_type -> .)
    LESS_T          reduce using rule 92 (get_var_type -> .)
    GREATER_T       reduce using rule 92 (get_var_type -> .)
    GREATER_T_EQUALS reduce using rule 92 (get_var_type -> .)
    LESS_T_EQUALS   reduce using rule 92 (get_var_type -> .)
    IS              reduce using rule 92 (get_var_type -> .)
    AND             reduce using rule 92 (get_var_type -> .)
    OR              reduce using rule 92 (get_var_type -> .)
    PERCENTAGE      reduce using rule 92 (get_var_type -> .)
    COMMA           reduce using rule 92 (get_var_type -> .)
    TICK            reduce using rule 92 (get_var_type -> .)
    R_BRACK         reduce using rule 92 (get_var_type -> .)
    R_PAREN         reduce using rule 92 (get_var_type -> .)
    COLON           reduce using rule 92 (get_var_type -> .)
    EQUALS          reduce using rule 92 (get_var_type -> .)

    get_var_type                   shift and go to state 137

state 115

    (96) LIST_EXP -> L_BRACK S_EXPRESSION . P R_BRACK
    (97) P -> . COMMA S_EXPRESSION P
    (98) P -> . empty
    (166) empty -> .

    COMMA           shift and go to state 139
    R_BRACK         reduce using rule 166 (empty -> .)

    P                              shift and go to state 138
    empty                          shift and go to state 140

state 116

    (153) MOVE_UP -> MOVE_UP_R L_PAREN . S_EXPRESSION R_PAREN
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 141
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    SOLUTION_CALL                  shift and go to state 55
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    NEGATION                       shift and go to state 81
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 117

    (154) MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN . S_EXPRESSION R_PAREN
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 142
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    SOLUTION_CALL                  shift and go to state 55
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    NEGATION                       shift and go to state 81
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 118

    (68) TERM -> FACTOR process_possible_multiply_divide_operation . K
    (70) K -> . L TERM
    (71) K -> . empty
    (72) L -> . MULTIPLY
    (73) L -> . DIVIDE
    (166) empty -> .

    MULTIPLY        shift and go to state 146
    DIVIDE          shift and go to state 143
    PLUS            reduce using rule 166 (empty -> .)
    MINUS           reduce using rule 166 (empty -> .)
    LESS_T          reduce using rule 166 (empty -> .)
    GREATER_T       reduce using rule 166 (empty -> .)
    GREATER_T_EQUALS reduce using rule 166 (empty -> .)
    LESS_T_EQUALS   reduce using rule 166 (empty -> .)
    IS              reduce using rule 166 (empty -> .)
    AND             reduce using rule 166 (empty -> .)
    OR              reduce using rule 166 (empty -> .)
    PERCENTAGE      reduce using rule 166 (empty -> .)
    COMMA           reduce using rule 166 (empty -> .)
    TICK            reduce using rule 166 (empty -> .)
    R_BRACK         reduce using rule 166 (empty -> .)
    R_PAREN         reduce using rule 166 (empty -> .)
    COLON           reduce using rule 166 (empty -> .)

    K                              shift and go to state 144
    L                              shift and go to state 145
    empty                          shift and go to state 147

state 119

    (157) PRINT -> PRINT_R L_PAREN . S_EXPRESSION R_PAREN
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 148
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    SOLUTION_CALL                  shift and go to state 55
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    NEGATION                       shift and go to state 81
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 120

    (28) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates . L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block

    L_PAREN         shift and go to state 149


state 121

    (149) MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates . L_PAREN R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block

    L_PAREN         shift and go to state 150


state 122

    (1) program -> PROGRAM ID create_global_fun COLON VAR_BLOCK update_global_fun print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION update_constant_number free_symbol_table print_funDir .

    $end            reduce using rule 1 (program -> PROGRAM ID create_global_fun COLON VAR_BLOCK update_global_fun print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION update_constant_number free_symbol_table print_funDir .)


state 123

    (151) DRAW_LINE -> DRAW_LINE_R L_PAREN S_EXPRESSION . COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN

    COMMA           shift and go to state 151


state 124

    (155) MOVE_DOWN -> MOVE_DOWN_R L_PAREN S_EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 152


state 125

    (74) FACTOR -> L_PAREN push_false_bottom S_EXPRESSION . R_PAREN pop_false_bottom

    R_PAREN         shift and go to state 153


state 126

    (152) DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN S_EXPRESSION . COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN

    COMMA           shift and go to state 154


state 127

    (51) G -> H EXP . process_possible_relop_operation
    (53) process_possible_relop_operation -> .

    COMMA           reduce using rule 53 (process_possible_relop_operation -> .)
    TICK            reduce using rule 53 (process_possible_relop_operation -> .)
    R_BRACK         reduce using rule 53 (process_possible_relop_operation -> .)
    R_PAREN         reduce using rule 53 (process_possible_relop_operation -> .)
    COLON           reduce using rule 53 (process_possible_relop_operation -> .)

    process_possible_relop_operation shift and go to state 155

state 128

    (150) DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN S_EXPRESSION . COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN

    COMMA           shift and go to state 156


state 129

    (62) EXP -> TERM process_possible_plus_minus_operation I .

    LESS_T          reduce using rule 62 (EXP -> TERM process_possible_plus_minus_operation I .)
    GREATER_T       reduce using rule 62 (EXP -> TERM process_possible_plus_minus_operation I .)
    GREATER_T_EQUALS reduce using rule 62 (EXP -> TERM process_possible_plus_minus_operation I .)
    LESS_T_EQUALS   reduce using rule 62 (EXP -> TERM process_possible_plus_minus_operation I .)
    IS              reduce using rule 62 (EXP -> TERM process_possible_plus_minus_operation I .)
    AND             reduce using rule 62 (EXP -> TERM process_possible_plus_minus_operation I .)
    OR              reduce using rule 62 (EXP -> TERM process_possible_plus_minus_operation I .)
    PERCENTAGE      reduce using rule 62 (EXP -> TERM process_possible_plus_minus_operation I .)
    TICK            reduce using rule 62 (EXP -> TERM process_possible_plus_minus_operation I .)
    COLON           reduce using rule 62 (EXP -> TERM process_possible_plus_minus_operation I .)
    R_PAREN         reduce using rule 62 (EXP -> TERM process_possible_plus_minus_operation I .)
    COMMA           reduce using rule 62 (EXP -> TERM process_possible_plus_minus_operation I .)
    R_BRACK         reduce using rule 62 (EXP -> TERM process_possible_plus_minus_operation I .)


state 130

    (64) I -> J . EXP
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 157
    SOLUTION_CALL                  shift and go to state 55
    PRINT                          shift and go to state 58
    FACTOR                         shift and go to state 85
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    DRAW_CIRCLE                    shift and go to state 88

state 131

    (66) J -> PLUS .

    L_PAREN         reduce using rule 66 (J -> PLUS .)
    ID              reduce using rule 66 (J -> PLUS .)
    INT_CONT        reduce using rule 66 (J -> PLUS .)
    STRING_CONT     reduce using rule 66 (J -> PLUS .)
    CHAR_CONT       reduce using rule 66 (J -> PLUS .)
    FLOAT_CONT      reduce using rule 66 (J -> PLUS .)
    BOOL_CONT       reduce using rule 66 (J -> PLUS .)
    DRAW_LINE_R     reduce using rule 66 (J -> PLUS .)
    DRAW_CIRCLE_R   reduce using rule 66 (J -> PLUS .)
    DRAW_RECTANGLE_R reduce using rule 66 (J -> PLUS .)
    MOVE_UP_R       reduce using rule 66 (J -> PLUS .)
    MOVE_RIGHT_R    reduce using rule 66 (J -> PLUS .)
    MOVE_DOWN_R     reduce using rule 66 (J -> PLUS .)
    MOVE_LEFT_R     reduce using rule 66 (J -> PLUS .)
    PRINT_R         reduce using rule 66 (J -> PLUS .)


state 132

    (67) J -> MINUS .

    L_PAREN         reduce using rule 67 (J -> MINUS .)
    ID              reduce using rule 67 (J -> MINUS .)
    INT_CONT        reduce using rule 67 (J -> MINUS .)
    STRING_CONT     reduce using rule 67 (J -> MINUS .)
    CHAR_CONT       reduce using rule 67 (J -> MINUS .)
    FLOAT_CONT      reduce using rule 67 (J -> MINUS .)
    BOOL_CONT       reduce using rule 67 (J -> MINUS .)
    DRAW_LINE_R     reduce using rule 67 (J -> MINUS .)
    DRAW_CIRCLE_R   reduce using rule 67 (J -> MINUS .)
    DRAW_RECTANGLE_R reduce using rule 67 (J -> MINUS .)
    MOVE_UP_R       reduce using rule 67 (J -> MINUS .)
    MOVE_RIGHT_R    reduce using rule 67 (J -> MINUS .)
    MOVE_DOWN_R     reduce using rule 67 (J -> MINUS .)
    MOVE_LEFT_R     reduce using rule 67 (J -> MINUS .)
    PRINT_R         reduce using rule 67 (J -> MINUS .)


state 133

    (65) I -> empty .

    LESS_T          reduce using rule 65 (I -> empty .)
    GREATER_T       reduce using rule 65 (I -> empty .)
    GREATER_T_EQUALS reduce using rule 65 (I -> empty .)
    LESS_T_EQUALS   reduce using rule 65 (I -> empty .)
    IS              reduce using rule 65 (I -> empty .)
    AND             reduce using rule 65 (I -> empty .)
    OR              reduce using rule 65 (I -> empty .)
    PERCENTAGE      reduce using rule 65 (I -> empty .)
    COMMA           reduce using rule 65 (I -> empty .)
    TICK            reduce using rule 65 (I -> empty .)
    R_BRACK         reduce using rule 65 (I -> empty .)
    R_PAREN         reduce using rule 65 (I -> empty .)
    COLON           reduce using rule 65 (I -> empty .)


state 134

    (156) MOVE_LEFT -> MOVE_LEFT_R L_PAREN S_EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 158


state 135

    (87) NEGATION -> N S_EXPRESSION process_negation_operation .

    COMMA           reduce using rule 87 (NEGATION -> N S_EXPRESSION process_negation_operation .)
    TICK            reduce using rule 87 (NEGATION -> N S_EXPRESSION process_negation_operation .)
    R_BRACK         reduce using rule 87 (NEGATION -> N S_EXPRESSION process_negation_operation .)
    R_PAREN         reduce using rule 87 (NEGATION -> N S_EXPRESSION process_negation_operation .)
    COLON           reduce using rule 87 (NEGATION -> N S_EXPRESSION process_negation_operation .)


state 136

    (130) SOLUTION_CALL -> ID check_sol_existence L_PAREN . generate_era_quad V R_PAREN end_argument_processing
    (132) generate_era_quad -> .

    NOT             reduce using rule 132 (generate_era_quad -> .)
    L_PAREN         reduce using rule 132 (generate_era_quad -> .)
    ID              reduce using rule 132 (generate_era_quad -> .)
    INT_CONT        reduce using rule 132 (generate_era_quad -> .)
    STRING_CONT     reduce using rule 132 (generate_era_quad -> .)
    CHAR_CONT       reduce using rule 132 (generate_era_quad -> .)
    FLOAT_CONT      reduce using rule 132 (generate_era_quad -> .)
    BOOL_CONT       reduce using rule 132 (generate_era_quad -> .)
    DRAW_LINE_R     reduce using rule 132 (generate_era_quad -> .)
    DRAW_CIRCLE_R   reduce using rule 132 (generate_era_quad -> .)
    DRAW_RECTANGLE_R reduce using rule 132 (generate_era_quad -> .)
    MOVE_UP_R       reduce using rule 132 (generate_era_quad -> .)
    MOVE_RIGHT_R    reduce using rule 132 (generate_era_quad -> .)
    MOVE_DOWN_R     reduce using rule 132 (generate_era_quad -> .)
    MOVE_LEFT_R     reduce using rule 132 (generate_era_quad -> .)
    PRINT_R         reduce using rule 132 (generate_era_quad -> .)

    generate_era_quad              shift and go to state 159

state 137

    (90) ID_REF -> ID check_var_existence get_var_type . O
    (93) O -> . L_BRACK S_EXPRESSION check_int_type R_BRACK
    (94) O -> . empty
    (166) empty -> .

    L_BRACK         shift and go to state 160
    MULTIPLY        reduce using rule 166 (empty -> .)
    DIVIDE          reduce using rule 166 (empty -> .)
    PLUS            reduce using rule 166 (empty -> .)
    MINUS           reduce using rule 166 (empty -> .)
    LESS_T          reduce using rule 166 (empty -> .)
    GREATER_T       reduce using rule 166 (empty -> .)
    GREATER_T_EQUALS reduce using rule 166 (empty -> .)
    LESS_T_EQUALS   reduce using rule 166 (empty -> .)
    IS              reduce using rule 166 (empty -> .)
    AND             reduce using rule 166 (empty -> .)
    OR              reduce using rule 166 (empty -> .)
    PERCENTAGE      reduce using rule 166 (empty -> .)
    COMMA           reduce using rule 166 (empty -> .)
    TICK            reduce using rule 166 (empty -> .)
    R_BRACK         reduce using rule 166 (empty -> .)
    R_PAREN         reduce using rule 166 (empty -> .)
    COLON           reduce using rule 166 (empty -> .)
    EQUALS          reduce using rule 166 (empty -> .)

    O                              shift and go to state 161
    empty                          shift and go to state 162

state 138

    (96) LIST_EXP -> L_BRACK S_EXPRESSION P . R_BRACK

    R_BRACK         shift and go to state 163


state 139

    (97) P -> COMMA . S_EXPRESSION P
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 164
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    SOLUTION_CALL                  shift and go to state 55
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    NEGATION                       shift and go to state 81
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 140

    (98) P -> empty .

    R_BRACK         reduce using rule 98 (P -> empty .)


state 141

    (153) MOVE_UP -> MOVE_UP_R L_PAREN S_EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 165


state 142

    (154) MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN S_EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 166


state 143

    (73) L -> DIVIDE .

    L_PAREN         reduce using rule 73 (L -> DIVIDE .)
    ID              reduce using rule 73 (L -> DIVIDE .)
    INT_CONT        reduce using rule 73 (L -> DIVIDE .)
    STRING_CONT     reduce using rule 73 (L -> DIVIDE .)
    CHAR_CONT       reduce using rule 73 (L -> DIVIDE .)
    FLOAT_CONT      reduce using rule 73 (L -> DIVIDE .)
    BOOL_CONT       reduce using rule 73 (L -> DIVIDE .)
    DRAW_LINE_R     reduce using rule 73 (L -> DIVIDE .)
    DRAW_CIRCLE_R   reduce using rule 73 (L -> DIVIDE .)
    DRAW_RECTANGLE_R reduce using rule 73 (L -> DIVIDE .)
    MOVE_UP_R       reduce using rule 73 (L -> DIVIDE .)
    MOVE_RIGHT_R    reduce using rule 73 (L -> DIVIDE .)
    MOVE_DOWN_R     reduce using rule 73 (L -> DIVIDE .)
    MOVE_LEFT_R     reduce using rule 73 (L -> DIVIDE .)
    PRINT_R         reduce using rule 73 (L -> DIVIDE .)


state 144

    (68) TERM -> FACTOR process_possible_multiply_divide_operation K .

    PLUS            reduce using rule 68 (TERM -> FACTOR process_possible_multiply_divide_operation K .)
    MINUS           reduce using rule 68 (TERM -> FACTOR process_possible_multiply_divide_operation K .)
    LESS_T          reduce using rule 68 (TERM -> FACTOR process_possible_multiply_divide_operation K .)
    GREATER_T       reduce using rule 68 (TERM -> FACTOR process_possible_multiply_divide_operation K .)
    GREATER_T_EQUALS reduce using rule 68 (TERM -> FACTOR process_possible_multiply_divide_operation K .)
    LESS_T_EQUALS   reduce using rule 68 (TERM -> FACTOR process_possible_multiply_divide_operation K .)
    IS              reduce using rule 68 (TERM -> FACTOR process_possible_multiply_divide_operation K .)
    AND             reduce using rule 68 (TERM -> FACTOR process_possible_multiply_divide_operation K .)
    OR              reduce using rule 68 (TERM -> FACTOR process_possible_multiply_divide_operation K .)
    PERCENTAGE      reduce using rule 68 (TERM -> FACTOR process_possible_multiply_divide_operation K .)
    R_PAREN         reduce using rule 68 (TERM -> FACTOR process_possible_multiply_divide_operation K .)
    COMMA           reduce using rule 68 (TERM -> FACTOR process_possible_multiply_divide_operation K .)
    R_BRACK         reduce using rule 68 (TERM -> FACTOR process_possible_multiply_divide_operation K .)
    TICK            reduce using rule 68 (TERM -> FACTOR process_possible_multiply_divide_operation K .)
    COLON           reduce using rule 68 (TERM -> FACTOR process_possible_multiply_divide_operation K .)


state 145

    (70) K -> L . TERM
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    PRINT                          shift and go to state 58
    TERM                           shift and go to state 167
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    SOLUTION_CALL                  shift and go to state 55
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    FACTOR                         shift and go to state 85
    DRAW_LINE                      shift and go to state 74
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    MOVE_UP                        shift and go to state 66
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    DRAW_CIRCLE                    shift and go to state 88

state 146

    (72) L -> MULTIPLY .

    L_PAREN         reduce using rule 72 (L -> MULTIPLY .)
    ID              reduce using rule 72 (L -> MULTIPLY .)
    INT_CONT        reduce using rule 72 (L -> MULTIPLY .)
    STRING_CONT     reduce using rule 72 (L -> MULTIPLY .)
    CHAR_CONT       reduce using rule 72 (L -> MULTIPLY .)
    FLOAT_CONT      reduce using rule 72 (L -> MULTIPLY .)
    BOOL_CONT       reduce using rule 72 (L -> MULTIPLY .)
    DRAW_LINE_R     reduce using rule 72 (L -> MULTIPLY .)
    DRAW_CIRCLE_R   reduce using rule 72 (L -> MULTIPLY .)
    DRAW_RECTANGLE_R reduce using rule 72 (L -> MULTIPLY .)
    MOVE_UP_R       reduce using rule 72 (L -> MULTIPLY .)
    MOVE_RIGHT_R    reduce using rule 72 (L -> MULTIPLY .)
    MOVE_DOWN_R     reduce using rule 72 (L -> MULTIPLY .)
    MOVE_LEFT_R     reduce using rule 72 (L -> MULTIPLY .)
    PRINT_R         reduce using rule 72 (L -> MULTIPLY .)


state 147

    (71) K -> empty .

    PLUS            reduce using rule 71 (K -> empty .)
    MINUS           reduce using rule 71 (K -> empty .)
    LESS_T          reduce using rule 71 (K -> empty .)
    GREATER_T       reduce using rule 71 (K -> empty .)
    GREATER_T_EQUALS reduce using rule 71 (K -> empty .)
    LESS_T_EQUALS   reduce using rule 71 (K -> empty .)
    IS              reduce using rule 71 (K -> empty .)
    AND             reduce using rule 71 (K -> empty .)
    OR              reduce using rule 71 (K -> empty .)
    PERCENTAGE      reduce using rule 71 (K -> empty .)
    COMMA           reduce using rule 71 (K -> empty .)
    TICK            reduce using rule 71 (K -> empty .)
    R_BRACK         reduce using rule 71 (K -> empty .)
    R_PAREN         reduce using rule 71 (K -> empty .)
    COLON           reduce using rule 71 (K -> empty .)


state 148

    (157) PRINT -> PRINT_R L_PAREN S_EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 168


state 149

    (28) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN . PARAMS R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block
    (141) PARAMS -> . TYPE store_type ID check_param_duplicates update_param_count Y
    (44) TYPE -> . INT
    (45) TYPE -> . FLOAT
    (46) TYPE -> . CHAR
    (47) TYPE -> . STRING
    (48) TYPE -> . BOOL
    (49) TYPE -> . LIST

    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 16
    STRING          shift and go to state 11
    BOOL            shift and go to state 17
    LIST            shift and go to state 15

    PARAMS                         shift and go to state 169
    TYPE                           shift and go to state 170

state 150

    (149) MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates L_PAREN . R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block

    R_PAREN         shift and go to state 171


state 151

    (151) DRAW_LINE -> DRAW_LINE_R L_PAREN S_EXPRESSION COMMA . S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 172
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    SOLUTION_CALL                  shift and go to state 55
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    NEGATION                       shift and go to state 81
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 152

    (155) MOVE_DOWN -> MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 155 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 155 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN .)
    PLUS            reduce using rule 155 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN .)
    MINUS           reduce using rule 155 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 155 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 155 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 155 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 155 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN .)
    IS              reduce using rule 155 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN .)
    AND             reduce using rule 155 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN .)
    OR              reduce using rule 155 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 155 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN .)
    COMMA           reduce using rule 155 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 155 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN .)
    TICK            reduce using rule 155 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 155 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN .)
    COLON           reduce using rule 155 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN .)


state 153

    (74) FACTOR -> L_PAREN push_false_bottom S_EXPRESSION R_PAREN . pop_false_bottom
    (77) pop_false_bottom -> .

    MULTIPLY        reduce using rule 77 (pop_false_bottom -> .)
    DIVIDE          reduce using rule 77 (pop_false_bottom -> .)
    PLUS            reduce using rule 77 (pop_false_bottom -> .)
    MINUS           reduce using rule 77 (pop_false_bottom -> .)
    LESS_T          reduce using rule 77 (pop_false_bottom -> .)
    GREATER_T       reduce using rule 77 (pop_false_bottom -> .)
    GREATER_T_EQUALS reduce using rule 77 (pop_false_bottom -> .)
    LESS_T_EQUALS   reduce using rule 77 (pop_false_bottom -> .)
    IS              reduce using rule 77 (pop_false_bottom -> .)
    AND             reduce using rule 77 (pop_false_bottom -> .)
    OR              reduce using rule 77 (pop_false_bottom -> .)
    PERCENTAGE      reduce using rule 77 (pop_false_bottom -> .)
    COMMA           reduce using rule 77 (pop_false_bottom -> .)
    TICK            reduce using rule 77 (pop_false_bottom -> .)
    R_BRACK         reduce using rule 77 (pop_false_bottom -> .)
    R_PAREN         reduce using rule 77 (pop_false_bottom -> .)
    COLON           reduce using rule 77 (pop_false_bottom -> .)

    pop_false_bottom               shift and go to state 173

state 154

    (152) DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA . S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 174
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    SOLUTION_CALL                  shift and go to state 55
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    NEGATION                       shift and go to state 81
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 155

    (51) G -> H EXP process_possible_relop_operation .

    COMMA           reduce using rule 51 (G -> H EXP process_possible_relop_operation .)
    TICK            reduce using rule 51 (G -> H EXP process_possible_relop_operation .)
    R_BRACK         reduce using rule 51 (G -> H EXP process_possible_relop_operation .)
    R_PAREN         reduce using rule 51 (G -> H EXP process_possible_relop_operation .)
    COLON           reduce using rule 51 (G -> H EXP process_possible_relop_operation .)


state 156

    (150) DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA . S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 175
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    SOLUTION_CALL                  shift and go to state 55
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    NEGATION                       shift and go to state 81
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 157

    (64) I -> J EXP .

    LESS_T          reduce using rule 64 (I -> J EXP .)
    GREATER_T       reduce using rule 64 (I -> J EXP .)
    GREATER_T_EQUALS reduce using rule 64 (I -> J EXP .)
    LESS_T_EQUALS   reduce using rule 64 (I -> J EXP .)
    IS              reduce using rule 64 (I -> J EXP .)
    AND             reduce using rule 64 (I -> J EXP .)
    OR              reduce using rule 64 (I -> J EXP .)
    PERCENTAGE      reduce using rule 64 (I -> J EXP .)
    COMMA           reduce using rule 64 (I -> J EXP .)
    TICK            reduce using rule 64 (I -> J EXP .)
    R_BRACK         reduce using rule 64 (I -> J EXP .)
    R_PAREN         reduce using rule 64 (I -> J EXP .)
    COLON           reduce using rule 64 (I -> J EXP .)


state 158

    (156) MOVE_LEFT -> MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 156 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 156 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN .)
    PLUS            reduce using rule 156 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN .)
    MINUS           reduce using rule 156 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 156 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 156 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 156 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 156 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN .)
    IS              reduce using rule 156 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN .)
    AND             reduce using rule 156 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN .)
    OR              reduce using rule 156 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 156 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN .)
    TICK            reduce using rule 156 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN .)
    COLON           reduce using rule 156 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN .)
    COMMA           reduce using rule 156 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 156 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 156 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN .)


state 159

    (130) SOLUTION_CALL -> ID check_sol_existence L_PAREN generate_era_quad . V R_PAREN end_argument_processing
    (134) V -> . S_EXPRESSION process_argument X
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 176
    NEGATION                       shift and go to state 81
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    SOLUTION_CALL                  shift and go to state 55
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    V                              shift and go to state 177
    MOVE_UP                        shift and go to state 66
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 160

    (93) O -> L_BRACK . S_EXPRESSION check_int_type R_BRACK
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 178
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    SOLUTION_CALL                  shift and go to state 55
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    NEGATION                       shift and go to state 81
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 161

    (90) ID_REF -> ID check_var_existence get_var_type O .

    MULTIPLY        reduce using rule 90 (ID_REF -> ID check_var_existence get_var_type O .)
    DIVIDE          reduce using rule 90 (ID_REF -> ID check_var_existence get_var_type O .)
    PLUS            reduce using rule 90 (ID_REF -> ID check_var_existence get_var_type O .)
    MINUS           reduce using rule 90 (ID_REF -> ID check_var_existence get_var_type O .)
    COMMA           reduce using rule 90 (ID_REF -> ID check_var_existence get_var_type O .)
    TICK            reduce using rule 90 (ID_REF -> ID check_var_existence get_var_type O .)
    R_BRACK         reduce using rule 90 (ID_REF -> ID check_var_existence get_var_type O .)
    R_PAREN         reduce using rule 90 (ID_REF -> ID check_var_existence get_var_type O .)
    COLON           reduce using rule 90 (ID_REF -> ID check_var_existence get_var_type O .)
    LESS_T          reduce using rule 90 (ID_REF -> ID check_var_existence get_var_type O .)
    GREATER_T       reduce using rule 90 (ID_REF -> ID check_var_existence get_var_type O .)
    GREATER_T_EQUALS reduce using rule 90 (ID_REF -> ID check_var_existence get_var_type O .)
    LESS_T_EQUALS   reduce using rule 90 (ID_REF -> ID check_var_existence get_var_type O .)
    IS              reduce using rule 90 (ID_REF -> ID check_var_existence get_var_type O .)
    AND             reduce using rule 90 (ID_REF -> ID check_var_existence get_var_type O .)
    OR              reduce using rule 90 (ID_REF -> ID check_var_existence get_var_type O .)
    PERCENTAGE      reduce using rule 90 (ID_REF -> ID check_var_existence get_var_type O .)
    EQUALS          reduce using rule 90 (ID_REF -> ID check_var_existence get_var_type O .)


state 162

    (94) O -> empty .

    MULTIPLY        reduce using rule 94 (O -> empty .)
    DIVIDE          reduce using rule 94 (O -> empty .)
    PLUS            reduce using rule 94 (O -> empty .)
    MINUS           reduce using rule 94 (O -> empty .)
    LESS_T          reduce using rule 94 (O -> empty .)
    GREATER_T       reduce using rule 94 (O -> empty .)
    GREATER_T_EQUALS reduce using rule 94 (O -> empty .)
    LESS_T_EQUALS   reduce using rule 94 (O -> empty .)
    IS              reduce using rule 94 (O -> empty .)
    AND             reduce using rule 94 (O -> empty .)
    OR              reduce using rule 94 (O -> empty .)
    PERCENTAGE      reduce using rule 94 (O -> empty .)
    COMMA           reduce using rule 94 (O -> empty .)
    TICK            reduce using rule 94 (O -> empty .)
    R_BRACK         reduce using rule 94 (O -> empty .)
    R_PAREN         reduce using rule 94 (O -> empty .)
    COLON           reduce using rule 94 (O -> empty .)
    EQUALS          reduce using rule 94 (O -> empty .)


state 163

    (96) LIST_EXP -> L_BRACK S_EXPRESSION P R_BRACK .

    COMMA           reduce using rule 96 (LIST_EXP -> L_BRACK S_EXPRESSION P R_BRACK .)
    TICK            reduce using rule 96 (LIST_EXP -> L_BRACK S_EXPRESSION P R_BRACK .)


state 164

    (97) P -> COMMA S_EXPRESSION . P
    (97) P -> . COMMA S_EXPRESSION P
    (98) P -> . empty
    (166) empty -> .

    COMMA           shift and go to state 139
    R_BRACK         reduce using rule 166 (empty -> .)

    P                              shift and go to state 179
    empty                          shift and go to state 140

state 165

    (153) MOVE_UP -> MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 153 (MOVE_UP -> MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 153 (MOVE_UP -> MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN .)
    PLUS            reduce using rule 153 (MOVE_UP -> MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN .)
    MINUS           reduce using rule 153 (MOVE_UP -> MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 153 (MOVE_UP -> MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 153 (MOVE_UP -> MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 153 (MOVE_UP -> MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 153 (MOVE_UP -> MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN .)
    IS              reduce using rule 153 (MOVE_UP -> MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN .)
    AND             reduce using rule 153 (MOVE_UP -> MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN .)
    OR              reduce using rule 153 (MOVE_UP -> MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 153 (MOVE_UP -> MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 153 (MOVE_UP -> MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN .)
    COMMA           reduce using rule 153 (MOVE_UP -> MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN .)
    TICK            reduce using rule 153 (MOVE_UP -> MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 153 (MOVE_UP -> MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN .)
    COLON           reduce using rule 153 (MOVE_UP -> MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN .)


state 166

    (154) MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 154 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 154 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN .)
    PLUS            reduce using rule 154 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN .)
    MINUS           reduce using rule 154 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 154 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 154 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 154 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 154 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN .)
    IS              reduce using rule 154 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN .)
    AND             reduce using rule 154 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN .)
    OR              reduce using rule 154 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 154 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN .)
    COMMA           reduce using rule 154 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 154 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 154 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN .)
    TICK            reduce using rule 154 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN .)
    COLON           reduce using rule 154 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN .)


state 167

    (70) K -> L TERM .

    PLUS            reduce using rule 70 (K -> L TERM .)
    MINUS           reduce using rule 70 (K -> L TERM .)
    LESS_T          reduce using rule 70 (K -> L TERM .)
    GREATER_T       reduce using rule 70 (K -> L TERM .)
    GREATER_T_EQUALS reduce using rule 70 (K -> L TERM .)
    LESS_T_EQUALS   reduce using rule 70 (K -> L TERM .)
    IS              reduce using rule 70 (K -> L TERM .)
    AND             reduce using rule 70 (K -> L TERM .)
    OR              reduce using rule 70 (K -> L TERM .)
    PERCENTAGE      reduce using rule 70 (K -> L TERM .)
    COMMA           reduce using rule 70 (K -> L TERM .)
    TICK            reduce using rule 70 (K -> L TERM .)
    R_BRACK         reduce using rule 70 (K -> L TERM .)
    R_PAREN         reduce using rule 70 (K -> L TERM .)
    COLON           reduce using rule 70 (K -> L TERM .)


state 168

    (157) PRINT -> PRINT_R L_PAREN S_EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 157 (PRINT -> PRINT_R L_PAREN S_EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 157 (PRINT -> PRINT_R L_PAREN S_EXPRESSION R_PAREN .)
    PLUS            reduce using rule 157 (PRINT -> PRINT_R L_PAREN S_EXPRESSION R_PAREN .)
    MINUS           reduce using rule 157 (PRINT -> PRINT_R L_PAREN S_EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 157 (PRINT -> PRINT_R L_PAREN S_EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 157 (PRINT -> PRINT_R L_PAREN S_EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 157 (PRINT -> PRINT_R L_PAREN S_EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 157 (PRINT -> PRINT_R L_PAREN S_EXPRESSION R_PAREN .)
    IS              reduce using rule 157 (PRINT -> PRINT_R L_PAREN S_EXPRESSION R_PAREN .)
    AND             reduce using rule 157 (PRINT -> PRINT_R L_PAREN S_EXPRESSION R_PAREN .)
    OR              reduce using rule 157 (PRINT -> PRINT_R L_PAREN S_EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 157 (PRINT -> PRINT_R L_PAREN S_EXPRESSION R_PAREN .)
    COMMA           reduce using rule 157 (PRINT -> PRINT_R L_PAREN S_EXPRESSION R_PAREN .)
    TICK            reduce using rule 157 (PRINT -> PRINT_R L_PAREN S_EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 157 (PRINT -> PRINT_R L_PAREN S_EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 157 (PRINT -> PRINT_R L_PAREN S_EXPRESSION R_PAREN .)
    COLON           reduce using rule 157 (PRINT -> PRINT_R L_PAREN S_EXPRESSION R_PAREN .)


state 169

    (28) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS . R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block

    R_PAREN         shift and go to state 180


state 170

    (141) PARAMS -> TYPE . store_type ID check_param_duplicates update_param_count Y
    (12) store_type -> .

    ID              reduce using rule 12 (store_type -> .)

    store_type                     shift and go to state 181

state 171

    (149) MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN . COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block

    COLON           shift and go to state 182


state 172

    (151) DRAW_LINE -> DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION . COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN

    COMMA           shift and go to state 183


state 173

    (74) FACTOR -> L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom .

    MULTIPLY        reduce using rule 74 (FACTOR -> L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom .)
    DIVIDE          reduce using rule 74 (FACTOR -> L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom .)
    PLUS            reduce using rule 74 (FACTOR -> L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom .)
    MINUS           reduce using rule 74 (FACTOR -> L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom .)
    LESS_T          reduce using rule 74 (FACTOR -> L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom .)
    GREATER_T       reduce using rule 74 (FACTOR -> L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom .)
    GREATER_T_EQUALS reduce using rule 74 (FACTOR -> L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom .)
    LESS_T_EQUALS   reduce using rule 74 (FACTOR -> L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom .)
    IS              reduce using rule 74 (FACTOR -> L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom .)
    AND             reduce using rule 74 (FACTOR -> L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom .)
    OR              reduce using rule 74 (FACTOR -> L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom .)
    PERCENTAGE      reduce using rule 74 (FACTOR -> L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom .)
    COMMA           reduce using rule 74 (FACTOR -> L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom .)
    TICK            reduce using rule 74 (FACTOR -> L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom .)
    R_BRACK         reduce using rule 74 (FACTOR -> L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom .)
    R_PAREN         reduce using rule 74 (FACTOR -> L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom .)
    COLON           reduce using rule 74 (FACTOR -> L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom .)


state 174

    (152) DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION . COMMA S_EXPRESSION R_PAREN

    COMMA           shift and go to state 184


state 175

    (150) DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION . COMMA S_EXPRESSION R_PAREN

    COMMA           shift and go to state 185


state 176

    (134) V -> S_EXPRESSION . process_argument X
    (135) process_argument -> .

    COMMA           reduce using rule 135 (process_argument -> .)
    R_PAREN         reduce using rule 135 (process_argument -> .)

    process_argument               shift and go to state 186

state 177

    (130) SOLUTION_CALL -> ID check_sol_existence L_PAREN generate_era_quad V . R_PAREN end_argument_processing

    R_PAREN         shift and go to state 187


state 178

    (93) O -> L_BRACK S_EXPRESSION . check_int_type R_BRACK
    (95) check_int_type -> .

    R_BRACK         reduce using rule 95 (check_int_type -> .)

    check_int_type                 shift and go to state 188

state 179

    (97) P -> COMMA S_EXPRESSION P .

    R_BRACK         reduce using rule 97 (P -> COMMA S_EXPRESSION P .)


state 180

    (28) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN . COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block

    COLON           shift and go to state 189


state 181

    (141) PARAMS -> TYPE store_type . ID check_param_duplicates update_param_count Y

    ID              shift and go to state 190


state 182

    (149) MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON . S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block
    (23) S_BLOCK -> . L_BRACE F R_BRACE

    L_BRACE         shift and go to state 191

    S_BLOCK                        shift and go to state 192

state 183

    (151) DRAW_LINE -> DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA . S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 193
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    SOLUTION_CALL                  shift and go to state 55
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    NEGATION                       shift and go to state 81
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 184

    (152) DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA . S_EXPRESSION R_PAREN
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 194
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    SOLUTION_CALL                  shift and go to state 55
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    NEGATION                       shift and go to state 81
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 185

    (150) DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA . S_EXPRESSION R_PAREN
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 195
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    SOLUTION_CALL                  shift and go to state 55
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    NEGATION                       shift and go to state 81
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 186

    (134) V -> S_EXPRESSION process_argument . X
    (136) X -> . COMMA update_parameter_counter V
    (137) X -> . empty
    (166) empty -> .

    COMMA           shift and go to state 196
    R_PAREN         reduce using rule 166 (empty -> .)

    X                              shift and go to state 197
    empty                          shift and go to state 198

state 187

    (130) SOLUTION_CALL -> ID check_sol_existence L_PAREN generate_era_quad V R_PAREN . end_argument_processing
    (131) end_argument_processing -> .

    MULTIPLY        reduce using rule 131 (end_argument_processing -> .)
    DIVIDE          reduce using rule 131 (end_argument_processing -> .)
    PLUS            reduce using rule 131 (end_argument_processing -> .)
    MINUS           reduce using rule 131 (end_argument_processing -> .)
    LESS_T          reduce using rule 131 (end_argument_processing -> .)
    GREATER_T       reduce using rule 131 (end_argument_processing -> .)
    GREATER_T_EQUALS reduce using rule 131 (end_argument_processing -> .)
    LESS_T_EQUALS   reduce using rule 131 (end_argument_processing -> .)
    IS              reduce using rule 131 (end_argument_processing -> .)
    AND             reduce using rule 131 (end_argument_processing -> .)
    OR              reduce using rule 131 (end_argument_processing -> .)
    PERCENTAGE      reduce using rule 131 (end_argument_processing -> .)
    COMMA           reduce using rule 131 (end_argument_processing -> .)
    TICK            reduce using rule 131 (end_argument_processing -> .)
    R_BRACK         reduce using rule 131 (end_argument_processing -> .)
    R_PAREN         reduce using rule 131 (end_argument_processing -> .)
    COLON           reduce using rule 131 (end_argument_processing -> .)

    end_argument_processing        shift and go to state 199

state 188

    (93) O -> L_BRACK S_EXPRESSION check_int_type . R_BRACK

    R_BRACK         shift and go to state 200


state 189

    (28) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON . S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block
    (23) S_BLOCK -> . L_BRACE F R_BRACE

    L_BRACE         shift and go to state 191

    S_BLOCK                        shift and go to state 201

state 190

    (141) PARAMS -> TYPE store_type ID . check_param_duplicates update_param_count Y
    (142) check_param_duplicates -> .

    COMMA           reduce using rule 142 (check_param_duplicates -> .)
    R_PAREN         reduce using rule 142 (check_param_duplicates -> .)

    check_param_duplicates         shift and go to state 202

state 191

    (23) S_BLOCK -> L_BRACE . F R_BRACE
    (24) F -> . S_STATUTE F
    (25) F -> . empty
    (26) S_STATUTE -> . VAR_DEFINITIONS
    (27) S_STATUTE -> . STATUTE
    (166) empty -> .
    (11) VAR_DEFINITIONS -> . TYPE store_type A TICK
    (32) STATUTE -> . CONDITION
    (33) STATUTE -> . CYCLE
    (34) STATUTE -> . ASSIGNATION
    (35) STATUTE -> . CON_VAR TICK
    (36) STATUTE -> . RETURN_STATEMENT
    (44) TYPE -> . INT
    (45) TYPE -> . FLOAT
    (46) TYPE -> . CHAR
    (47) TYPE -> . STRING
    (48) TYPE -> . BOOL
    (49) TYPE -> . LIST
    (115) CONDITION -> . IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing
    (113) CYCLE -> . FOR
    (114) CYCLE -> . WHILE
    (99) ASSIGNATION -> . ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (37) RETURN_STATEMENT -> . RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value
    (38) RETURN_STATEMENT -> . RETURN TICK process_return_operation_without_return_value
    (109) FOR -> . FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK
    (106) WHILE -> . WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    R_BRACE         reduce using rule 166 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 16
    STRING          shift and go to state 11
    BOOL            shift and go to state 17
    LIST            shift and go to state 15
    IF              shift and go to state 218
    RETURN          shift and go to state 206
    FOR_CYCLE       shift and go to state 215
    WHILE_CYCLE     shift and go to state 203
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    RETURN_STATEMENT               shift and go to state 204
    WHILE                          shift and go to state 205
    PRINT                          shift and go to state 58
    S_STATUTE                      shift and go to state 208
    VAR_DEFINITIONS                shift and go to state 209
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 210
    SOLUTION_CALL                  shift and go to state 55
    MOVE_RIGHT                     shift and go to state 65
    MOVE_DOWN                      shift and go to state 83
    CON_VAR                        shift and go to state 211
    CONDITION                      shift and go to state 212
    CYCLE                          shift and go to state 213
    STATUTE                        shift and go to state 214
    ASSIGNATION                    shift and go to state 207
    FOR                            shift and go to state 216
    F                              shift and go to state 217
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    PREDEFINED_SOLS                shift and go to state 82
    empty                          shift and go to state 219
    TYPE                           shift and go to state 18
    DRAW_CIRCLE                    shift and go to state 88

state 192

    (149) MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK . TICK update_fun print_currentSymTab free_symbol_table reset_execution_block

    TICK            shift and go to state 220


state 193

    (151) DRAW_LINE -> DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION . COMMA S_EXPRESSION R_PAREN

    COMMA           shift and go to state 221


state 194

    (152) DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 222


state 195

    (150) DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 223


state 196

    (136) X -> COMMA . update_parameter_counter V
    (138) update_parameter_counter -> .

    NOT             reduce using rule 138 (update_parameter_counter -> .)
    L_PAREN         reduce using rule 138 (update_parameter_counter -> .)
    ID              reduce using rule 138 (update_parameter_counter -> .)
    INT_CONT        reduce using rule 138 (update_parameter_counter -> .)
    STRING_CONT     reduce using rule 138 (update_parameter_counter -> .)
    CHAR_CONT       reduce using rule 138 (update_parameter_counter -> .)
    FLOAT_CONT      reduce using rule 138 (update_parameter_counter -> .)
    BOOL_CONT       reduce using rule 138 (update_parameter_counter -> .)
    DRAW_LINE_R     reduce using rule 138 (update_parameter_counter -> .)
    DRAW_CIRCLE_R   reduce using rule 138 (update_parameter_counter -> .)
    DRAW_RECTANGLE_R reduce using rule 138 (update_parameter_counter -> .)
    MOVE_UP_R       reduce using rule 138 (update_parameter_counter -> .)
    MOVE_RIGHT_R    reduce using rule 138 (update_parameter_counter -> .)
    MOVE_DOWN_R     reduce using rule 138 (update_parameter_counter -> .)
    MOVE_LEFT_R     reduce using rule 138 (update_parameter_counter -> .)
    PRINT_R         reduce using rule 138 (update_parameter_counter -> .)

    update_parameter_counter       shift and go to state 224

state 197

    (134) V -> S_EXPRESSION process_argument X .

    R_PAREN         reduce using rule 134 (V -> S_EXPRESSION process_argument X .)


state 198

    (137) X -> empty .

    R_PAREN         reduce using rule 137 (X -> empty .)


state 199

    (130) SOLUTION_CALL -> ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing .

    MULTIPLY        reduce using rule 130 (SOLUTION_CALL -> ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing .)
    DIVIDE          reduce using rule 130 (SOLUTION_CALL -> ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing .)
    PLUS            reduce using rule 130 (SOLUTION_CALL -> ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing .)
    MINUS           reduce using rule 130 (SOLUTION_CALL -> ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing .)
    COMMA           reduce using rule 130 (SOLUTION_CALL -> ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing .)
    TICK            reduce using rule 130 (SOLUTION_CALL -> ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing .)
    R_BRACK         reduce using rule 130 (SOLUTION_CALL -> ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing .)
    R_PAREN         reduce using rule 130 (SOLUTION_CALL -> ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing .)
    COLON           reduce using rule 130 (SOLUTION_CALL -> ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing .)
    LESS_T          reduce using rule 130 (SOLUTION_CALL -> ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing .)
    GREATER_T       reduce using rule 130 (SOLUTION_CALL -> ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing .)
    GREATER_T_EQUALS reduce using rule 130 (SOLUTION_CALL -> ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing .)
    LESS_T_EQUALS   reduce using rule 130 (SOLUTION_CALL -> ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing .)
    IS              reduce using rule 130 (SOLUTION_CALL -> ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing .)
    AND             reduce using rule 130 (SOLUTION_CALL -> ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing .)
    OR              reduce using rule 130 (SOLUTION_CALL -> ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing .)
    PERCENTAGE      reduce using rule 130 (SOLUTION_CALL -> ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing .)


state 200

    (93) O -> L_BRACK S_EXPRESSION check_int_type R_BRACK .

    MULTIPLY        reduce using rule 93 (O -> L_BRACK S_EXPRESSION check_int_type R_BRACK .)
    DIVIDE          reduce using rule 93 (O -> L_BRACK S_EXPRESSION check_int_type R_BRACK .)
    PLUS            reduce using rule 93 (O -> L_BRACK S_EXPRESSION check_int_type R_BRACK .)
    MINUS           reduce using rule 93 (O -> L_BRACK S_EXPRESSION check_int_type R_BRACK .)
    LESS_T          reduce using rule 93 (O -> L_BRACK S_EXPRESSION check_int_type R_BRACK .)
    GREATER_T       reduce using rule 93 (O -> L_BRACK S_EXPRESSION check_int_type R_BRACK .)
    GREATER_T_EQUALS reduce using rule 93 (O -> L_BRACK S_EXPRESSION check_int_type R_BRACK .)
    LESS_T_EQUALS   reduce using rule 93 (O -> L_BRACK S_EXPRESSION check_int_type R_BRACK .)
    IS              reduce using rule 93 (O -> L_BRACK S_EXPRESSION check_int_type R_BRACK .)
    AND             reduce using rule 93 (O -> L_BRACK S_EXPRESSION check_int_type R_BRACK .)
    OR              reduce using rule 93 (O -> L_BRACK S_EXPRESSION check_int_type R_BRACK .)
    PERCENTAGE      reduce using rule 93 (O -> L_BRACK S_EXPRESSION check_int_type R_BRACK .)
    COMMA           reduce using rule 93 (O -> L_BRACK S_EXPRESSION check_int_type R_BRACK .)
    TICK            reduce using rule 93 (O -> L_BRACK S_EXPRESSION check_int_type R_BRACK .)
    R_BRACK         reduce using rule 93 (O -> L_BRACK S_EXPRESSION check_int_type R_BRACK .)
    R_PAREN         reduce using rule 93 (O -> L_BRACK S_EXPRESSION check_int_type R_BRACK .)
    COLON           reduce using rule 93 (O -> L_BRACK S_EXPRESSION check_int_type R_BRACK .)
    EQUALS          reduce using rule 93 (O -> L_BRACK S_EXPRESSION check_int_type R_BRACK .)


state 201

    (28) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK . TICK update_fun print_currentSymTab free_symbol_table reset_execution_block

    TICK            shift and go to state 225


state 202

    (141) PARAMS -> TYPE store_type ID check_param_duplicates . update_param_count Y
    (143) update_param_count -> .

    COMMA           reduce using rule 143 (update_param_count -> .)
    R_PAREN         reduce using rule 143 (update_param_count -> .)

    update_param_count             shift and go to state 226

state 203

    (106) WHILE -> WHILE_CYCLE . append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK
    (107) append_jump -> .

    NOT             reduce using rule 107 (append_jump -> .)
    L_PAREN         reduce using rule 107 (append_jump -> .)
    ID              reduce using rule 107 (append_jump -> .)
    INT_CONT        reduce using rule 107 (append_jump -> .)
    STRING_CONT     reduce using rule 107 (append_jump -> .)
    CHAR_CONT       reduce using rule 107 (append_jump -> .)
    FLOAT_CONT      reduce using rule 107 (append_jump -> .)
    BOOL_CONT       reduce using rule 107 (append_jump -> .)
    DRAW_LINE_R     reduce using rule 107 (append_jump -> .)
    DRAW_CIRCLE_R   reduce using rule 107 (append_jump -> .)
    DRAW_RECTANGLE_R reduce using rule 107 (append_jump -> .)
    MOVE_UP_R       reduce using rule 107 (append_jump -> .)
    MOVE_RIGHT_R    reduce using rule 107 (append_jump -> .)
    MOVE_DOWN_R     reduce using rule 107 (append_jump -> .)
    MOVE_LEFT_R     reduce using rule 107 (append_jump -> .)
    PRINT_R         reduce using rule 107 (append_jump -> .)

    append_jump                    shift and go to state 227

state 204

    (36) STATUTE -> RETURN_STATEMENT .

    IF              reduce using rule 36 (STATUTE -> RETURN_STATEMENT .)
    RETURN          reduce using rule 36 (STATUTE -> RETURN_STATEMENT .)
    FOR_CYCLE       reduce using rule 36 (STATUTE -> RETURN_STATEMENT .)
    WHILE_CYCLE     reduce using rule 36 (STATUTE -> RETURN_STATEMENT .)
    ID              reduce using rule 36 (STATUTE -> RETURN_STATEMENT .)
    INT_CONT        reduce using rule 36 (STATUTE -> RETURN_STATEMENT .)
    STRING_CONT     reduce using rule 36 (STATUTE -> RETURN_STATEMENT .)
    CHAR_CONT       reduce using rule 36 (STATUTE -> RETURN_STATEMENT .)
    FLOAT_CONT      reduce using rule 36 (STATUTE -> RETURN_STATEMENT .)
    BOOL_CONT       reduce using rule 36 (STATUTE -> RETURN_STATEMENT .)
    DRAW_LINE_R     reduce using rule 36 (STATUTE -> RETURN_STATEMENT .)
    DRAW_CIRCLE_R   reduce using rule 36 (STATUTE -> RETURN_STATEMENT .)
    DRAW_RECTANGLE_R reduce using rule 36 (STATUTE -> RETURN_STATEMENT .)
    MOVE_UP_R       reduce using rule 36 (STATUTE -> RETURN_STATEMENT .)
    MOVE_RIGHT_R    reduce using rule 36 (STATUTE -> RETURN_STATEMENT .)
    MOVE_DOWN_R     reduce using rule 36 (STATUTE -> RETURN_STATEMENT .)
    MOVE_LEFT_R     reduce using rule 36 (STATUTE -> RETURN_STATEMENT .)
    PRINT_R         reduce using rule 36 (STATUTE -> RETURN_STATEMENT .)
    R_BRACE         reduce using rule 36 (STATUTE -> RETURN_STATEMENT .)
    INT             reduce using rule 36 (STATUTE -> RETURN_STATEMENT .)
    FLOAT           reduce using rule 36 (STATUTE -> RETURN_STATEMENT .)
    CHAR            reduce using rule 36 (STATUTE -> RETURN_STATEMENT .)
    STRING          reduce using rule 36 (STATUTE -> RETURN_STATEMENT .)
    BOOL            reduce using rule 36 (STATUTE -> RETURN_STATEMENT .)
    LIST            reduce using rule 36 (STATUTE -> RETURN_STATEMENT .)


state 205

    (114) CYCLE -> WHILE .

    INT             reduce using rule 114 (CYCLE -> WHILE .)
    FLOAT           reduce using rule 114 (CYCLE -> WHILE .)
    CHAR            reduce using rule 114 (CYCLE -> WHILE .)
    STRING          reduce using rule 114 (CYCLE -> WHILE .)
    BOOL            reduce using rule 114 (CYCLE -> WHILE .)
    LIST            reduce using rule 114 (CYCLE -> WHILE .)
    IF              reduce using rule 114 (CYCLE -> WHILE .)
    RETURN          reduce using rule 114 (CYCLE -> WHILE .)
    FOR_CYCLE       reduce using rule 114 (CYCLE -> WHILE .)
    WHILE_CYCLE     reduce using rule 114 (CYCLE -> WHILE .)
    ID              reduce using rule 114 (CYCLE -> WHILE .)
    INT_CONT        reduce using rule 114 (CYCLE -> WHILE .)
    STRING_CONT     reduce using rule 114 (CYCLE -> WHILE .)
    CHAR_CONT       reduce using rule 114 (CYCLE -> WHILE .)
    FLOAT_CONT      reduce using rule 114 (CYCLE -> WHILE .)
    BOOL_CONT       reduce using rule 114 (CYCLE -> WHILE .)
    DRAW_LINE_R     reduce using rule 114 (CYCLE -> WHILE .)
    DRAW_CIRCLE_R   reduce using rule 114 (CYCLE -> WHILE .)
    DRAW_RECTANGLE_R reduce using rule 114 (CYCLE -> WHILE .)
    MOVE_UP_R       reduce using rule 114 (CYCLE -> WHILE .)
    MOVE_RIGHT_R    reduce using rule 114 (CYCLE -> WHILE .)
    MOVE_DOWN_R     reduce using rule 114 (CYCLE -> WHILE .)
    MOVE_LEFT_R     reduce using rule 114 (CYCLE -> WHILE .)
    PRINT_R         reduce using rule 114 (CYCLE -> WHILE .)
    R_BRACE         reduce using rule 114 (CYCLE -> WHILE .)


state 206

    (37) RETURN_STATEMENT -> RETURN . S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value
    (38) RETURN_STATEMENT -> RETURN . TICK process_return_operation_without_return_value
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    TICK            shift and go to state 229
    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 228
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    SOLUTION_CALL                  shift and go to state 55
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    NEGATION                       shift and go to state 81
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 207

    (34) STATUTE -> ASSIGNATION .

    IF              reduce using rule 34 (STATUTE -> ASSIGNATION .)
    RETURN          reduce using rule 34 (STATUTE -> ASSIGNATION .)
    FOR_CYCLE       reduce using rule 34 (STATUTE -> ASSIGNATION .)
    WHILE_CYCLE     reduce using rule 34 (STATUTE -> ASSIGNATION .)
    ID              reduce using rule 34 (STATUTE -> ASSIGNATION .)
    INT_CONT        reduce using rule 34 (STATUTE -> ASSIGNATION .)
    STRING_CONT     reduce using rule 34 (STATUTE -> ASSIGNATION .)
    CHAR_CONT       reduce using rule 34 (STATUTE -> ASSIGNATION .)
    FLOAT_CONT      reduce using rule 34 (STATUTE -> ASSIGNATION .)
    BOOL_CONT       reduce using rule 34 (STATUTE -> ASSIGNATION .)
    DRAW_LINE_R     reduce using rule 34 (STATUTE -> ASSIGNATION .)
    DRAW_CIRCLE_R   reduce using rule 34 (STATUTE -> ASSIGNATION .)
    DRAW_RECTANGLE_R reduce using rule 34 (STATUTE -> ASSIGNATION .)
    MOVE_UP_R       reduce using rule 34 (STATUTE -> ASSIGNATION .)
    MOVE_RIGHT_R    reduce using rule 34 (STATUTE -> ASSIGNATION .)
    MOVE_DOWN_R     reduce using rule 34 (STATUTE -> ASSIGNATION .)
    MOVE_LEFT_R     reduce using rule 34 (STATUTE -> ASSIGNATION .)
    PRINT_R         reduce using rule 34 (STATUTE -> ASSIGNATION .)
    R_BRACE         reduce using rule 34 (STATUTE -> ASSIGNATION .)
    INT             reduce using rule 34 (STATUTE -> ASSIGNATION .)
    FLOAT           reduce using rule 34 (STATUTE -> ASSIGNATION .)
    CHAR            reduce using rule 34 (STATUTE -> ASSIGNATION .)
    STRING          reduce using rule 34 (STATUTE -> ASSIGNATION .)
    BOOL            reduce using rule 34 (STATUTE -> ASSIGNATION .)
    LIST            reduce using rule 34 (STATUTE -> ASSIGNATION .)


state 208

    (24) F -> S_STATUTE . F
    (24) F -> . S_STATUTE F
    (25) F -> . empty
    (26) S_STATUTE -> . VAR_DEFINITIONS
    (27) S_STATUTE -> . STATUTE
    (166) empty -> .
    (11) VAR_DEFINITIONS -> . TYPE store_type A TICK
    (32) STATUTE -> . CONDITION
    (33) STATUTE -> . CYCLE
    (34) STATUTE -> . ASSIGNATION
    (35) STATUTE -> . CON_VAR TICK
    (36) STATUTE -> . RETURN_STATEMENT
    (44) TYPE -> . INT
    (45) TYPE -> . FLOAT
    (46) TYPE -> . CHAR
    (47) TYPE -> . STRING
    (48) TYPE -> . BOOL
    (49) TYPE -> . LIST
    (115) CONDITION -> . IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing
    (113) CYCLE -> . FOR
    (114) CYCLE -> . WHILE
    (99) ASSIGNATION -> . ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (37) RETURN_STATEMENT -> . RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value
    (38) RETURN_STATEMENT -> . RETURN TICK process_return_operation_without_return_value
    (109) FOR -> . FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK
    (106) WHILE -> . WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    R_BRACE         reduce using rule 166 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 16
    STRING          shift and go to state 11
    BOOL            shift and go to state 17
    LIST            shift and go to state 15
    IF              shift and go to state 218
    RETURN          shift and go to state 206
    FOR_CYCLE       shift and go to state 215
    WHILE_CYCLE     shift and go to state 203
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    RETURN_STATEMENT               shift and go to state 204
    WHILE                          shift and go to state 205
    PRINT                          shift and go to state 58
    S_STATUTE                      shift and go to state 208
    VAR_DEFINITIONS                shift and go to state 209
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 210
    SOLUTION_CALL                  shift and go to state 55
    MOVE_RIGHT                     shift and go to state 65
    MOVE_DOWN                      shift and go to state 83
    CON_VAR                        shift and go to state 211
    CONDITION                      shift and go to state 212
    CYCLE                          shift and go to state 213
    STATUTE                        shift and go to state 214
    ASSIGNATION                    shift and go to state 207
    FOR                            shift and go to state 216
    F                              shift and go to state 230
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    PREDEFINED_SOLS                shift and go to state 82
    empty                          shift and go to state 219
    TYPE                           shift and go to state 18
    DRAW_CIRCLE                    shift and go to state 88

state 209

    (26) S_STATUTE -> VAR_DEFINITIONS .

    INT             reduce using rule 26 (S_STATUTE -> VAR_DEFINITIONS .)
    FLOAT           reduce using rule 26 (S_STATUTE -> VAR_DEFINITIONS .)
    CHAR            reduce using rule 26 (S_STATUTE -> VAR_DEFINITIONS .)
    STRING          reduce using rule 26 (S_STATUTE -> VAR_DEFINITIONS .)
    BOOL            reduce using rule 26 (S_STATUTE -> VAR_DEFINITIONS .)
    LIST            reduce using rule 26 (S_STATUTE -> VAR_DEFINITIONS .)
    IF              reduce using rule 26 (S_STATUTE -> VAR_DEFINITIONS .)
    RETURN          reduce using rule 26 (S_STATUTE -> VAR_DEFINITIONS .)
    FOR_CYCLE       reduce using rule 26 (S_STATUTE -> VAR_DEFINITIONS .)
    WHILE_CYCLE     reduce using rule 26 (S_STATUTE -> VAR_DEFINITIONS .)
    ID              reduce using rule 26 (S_STATUTE -> VAR_DEFINITIONS .)
    INT_CONT        reduce using rule 26 (S_STATUTE -> VAR_DEFINITIONS .)
    STRING_CONT     reduce using rule 26 (S_STATUTE -> VAR_DEFINITIONS .)
    CHAR_CONT       reduce using rule 26 (S_STATUTE -> VAR_DEFINITIONS .)
    FLOAT_CONT      reduce using rule 26 (S_STATUTE -> VAR_DEFINITIONS .)
    BOOL_CONT       reduce using rule 26 (S_STATUTE -> VAR_DEFINITIONS .)
    DRAW_LINE_R     reduce using rule 26 (S_STATUTE -> VAR_DEFINITIONS .)
    DRAW_CIRCLE_R   reduce using rule 26 (S_STATUTE -> VAR_DEFINITIONS .)
    DRAW_RECTANGLE_R reduce using rule 26 (S_STATUTE -> VAR_DEFINITIONS .)
    MOVE_UP_R       reduce using rule 26 (S_STATUTE -> VAR_DEFINITIONS .)
    MOVE_RIGHT_R    reduce using rule 26 (S_STATUTE -> VAR_DEFINITIONS .)
    MOVE_DOWN_R     reduce using rule 26 (S_STATUTE -> VAR_DEFINITIONS .)
    MOVE_LEFT_R     reduce using rule 26 (S_STATUTE -> VAR_DEFINITIONS .)
    PRINT_R         reduce using rule 26 (S_STATUTE -> VAR_DEFINITIONS .)
    R_BRACE         reduce using rule 26 (S_STATUTE -> VAR_DEFINITIONS .)


state 210

    (99) ASSIGNATION -> ID_REF . EQUALS append_equals S_EXPRESSION process_assignation_operation TICK
    (78) CON_VAR -> ID_REF .

    EQUALS          shift and go to state 231
    TICK            reduce using rule 78 (CON_VAR -> ID_REF .)


state 211

    (35) STATUTE -> CON_VAR . TICK

    TICK            shift and go to state 232


state 212

    (32) STATUTE -> CONDITION .

    IF              reduce using rule 32 (STATUTE -> CONDITION .)
    RETURN          reduce using rule 32 (STATUTE -> CONDITION .)
    FOR_CYCLE       reduce using rule 32 (STATUTE -> CONDITION .)
    WHILE_CYCLE     reduce using rule 32 (STATUTE -> CONDITION .)
    ID              reduce using rule 32 (STATUTE -> CONDITION .)
    INT_CONT        reduce using rule 32 (STATUTE -> CONDITION .)
    STRING_CONT     reduce using rule 32 (STATUTE -> CONDITION .)
    CHAR_CONT       reduce using rule 32 (STATUTE -> CONDITION .)
    FLOAT_CONT      reduce using rule 32 (STATUTE -> CONDITION .)
    BOOL_CONT       reduce using rule 32 (STATUTE -> CONDITION .)
    DRAW_LINE_R     reduce using rule 32 (STATUTE -> CONDITION .)
    DRAW_CIRCLE_R   reduce using rule 32 (STATUTE -> CONDITION .)
    DRAW_RECTANGLE_R reduce using rule 32 (STATUTE -> CONDITION .)
    MOVE_UP_R       reduce using rule 32 (STATUTE -> CONDITION .)
    MOVE_RIGHT_R    reduce using rule 32 (STATUTE -> CONDITION .)
    MOVE_DOWN_R     reduce using rule 32 (STATUTE -> CONDITION .)
    MOVE_LEFT_R     reduce using rule 32 (STATUTE -> CONDITION .)
    PRINT_R         reduce using rule 32 (STATUTE -> CONDITION .)
    R_BRACE         reduce using rule 32 (STATUTE -> CONDITION .)
    INT             reduce using rule 32 (STATUTE -> CONDITION .)
    FLOAT           reduce using rule 32 (STATUTE -> CONDITION .)
    CHAR            reduce using rule 32 (STATUTE -> CONDITION .)
    STRING          reduce using rule 32 (STATUTE -> CONDITION .)
    BOOL            reduce using rule 32 (STATUTE -> CONDITION .)
    LIST            reduce using rule 32 (STATUTE -> CONDITION .)


state 213

    (33) STATUTE -> CYCLE .

    IF              reduce using rule 33 (STATUTE -> CYCLE .)
    RETURN          reduce using rule 33 (STATUTE -> CYCLE .)
    FOR_CYCLE       reduce using rule 33 (STATUTE -> CYCLE .)
    WHILE_CYCLE     reduce using rule 33 (STATUTE -> CYCLE .)
    ID              reduce using rule 33 (STATUTE -> CYCLE .)
    INT_CONT        reduce using rule 33 (STATUTE -> CYCLE .)
    STRING_CONT     reduce using rule 33 (STATUTE -> CYCLE .)
    CHAR_CONT       reduce using rule 33 (STATUTE -> CYCLE .)
    FLOAT_CONT      reduce using rule 33 (STATUTE -> CYCLE .)
    BOOL_CONT       reduce using rule 33 (STATUTE -> CYCLE .)
    DRAW_LINE_R     reduce using rule 33 (STATUTE -> CYCLE .)
    DRAW_CIRCLE_R   reduce using rule 33 (STATUTE -> CYCLE .)
    DRAW_RECTANGLE_R reduce using rule 33 (STATUTE -> CYCLE .)
    MOVE_UP_R       reduce using rule 33 (STATUTE -> CYCLE .)
    MOVE_RIGHT_R    reduce using rule 33 (STATUTE -> CYCLE .)
    MOVE_DOWN_R     reduce using rule 33 (STATUTE -> CYCLE .)
    MOVE_LEFT_R     reduce using rule 33 (STATUTE -> CYCLE .)
    PRINT_R         reduce using rule 33 (STATUTE -> CYCLE .)
    R_BRACE         reduce using rule 33 (STATUTE -> CYCLE .)
    INT             reduce using rule 33 (STATUTE -> CYCLE .)
    FLOAT           reduce using rule 33 (STATUTE -> CYCLE .)
    CHAR            reduce using rule 33 (STATUTE -> CYCLE .)
    STRING          reduce using rule 33 (STATUTE -> CYCLE .)
    BOOL            reduce using rule 33 (STATUTE -> CYCLE .)
    LIST            reduce using rule 33 (STATUTE -> CYCLE .)


state 214

    (27) S_STATUTE -> STATUTE .

    INT             reduce using rule 27 (S_STATUTE -> STATUTE .)
    FLOAT           reduce using rule 27 (S_STATUTE -> STATUTE .)
    CHAR            reduce using rule 27 (S_STATUTE -> STATUTE .)
    STRING          reduce using rule 27 (S_STATUTE -> STATUTE .)
    BOOL            reduce using rule 27 (S_STATUTE -> STATUTE .)
    LIST            reduce using rule 27 (S_STATUTE -> STATUTE .)
    IF              reduce using rule 27 (S_STATUTE -> STATUTE .)
    RETURN          reduce using rule 27 (S_STATUTE -> STATUTE .)
    FOR_CYCLE       reduce using rule 27 (S_STATUTE -> STATUTE .)
    WHILE_CYCLE     reduce using rule 27 (S_STATUTE -> STATUTE .)
    ID              reduce using rule 27 (S_STATUTE -> STATUTE .)
    INT_CONT        reduce using rule 27 (S_STATUTE -> STATUTE .)
    STRING_CONT     reduce using rule 27 (S_STATUTE -> STATUTE .)
    CHAR_CONT       reduce using rule 27 (S_STATUTE -> STATUTE .)
    FLOAT_CONT      reduce using rule 27 (S_STATUTE -> STATUTE .)
    BOOL_CONT       reduce using rule 27 (S_STATUTE -> STATUTE .)
    DRAW_LINE_R     reduce using rule 27 (S_STATUTE -> STATUTE .)
    DRAW_CIRCLE_R   reduce using rule 27 (S_STATUTE -> STATUTE .)
    DRAW_RECTANGLE_R reduce using rule 27 (S_STATUTE -> STATUTE .)
    MOVE_UP_R       reduce using rule 27 (S_STATUTE -> STATUTE .)
    MOVE_RIGHT_R    reduce using rule 27 (S_STATUTE -> STATUTE .)
    MOVE_DOWN_R     reduce using rule 27 (S_STATUTE -> STATUTE .)
    MOVE_LEFT_R     reduce using rule 27 (S_STATUTE -> STATUTE .)
    PRINT_R         reduce using rule 27 (S_STATUTE -> STATUTE .)
    R_BRACE         reduce using rule 27 (S_STATUTE -> STATUTE .)


state 215

    (109) FOR -> FOR_CYCLE . S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK
    (105) S_ASSIGNATION -> . ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation
    (90) ID_REF -> . ID check_var_existence get_var_type O

    ID              shift and go to state 235

    ID_REF                         shift and go to state 233
    S_ASSIGNATION                  shift and go to state 234

state 216

    (113) CYCLE -> FOR .

    INT             reduce using rule 113 (CYCLE -> FOR .)
    FLOAT           reduce using rule 113 (CYCLE -> FOR .)
    CHAR            reduce using rule 113 (CYCLE -> FOR .)
    STRING          reduce using rule 113 (CYCLE -> FOR .)
    BOOL            reduce using rule 113 (CYCLE -> FOR .)
    LIST            reduce using rule 113 (CYCLE -> FOR .)
    IF              reduce using rule 113 (CYCLE -> FOR .)
    RETURN          reduce using rule 113 (CYCLE -> FOR .)
    FOR_CYCLE       reduce using rule 113 (CYCLE -> FOR .)
    WHILE_CYCLE     reduce using rule 113 (CYCLE -> FOR .)
    ID              reduce using rule 113 (CYCLE -> FOR .)
    INT_CONT        reduce using rule 113 (CYCLE -> FOR .)
    STRING_CONT     reduce using rule 113 (CYCLE -> FOR .)
    CHAR_CONT       reduce using rule 113 (CYCLE -> FOR .)
    FLOAT_CONT      reduce using rule 113 (CYCLE -> FOR .)
    BOOL_CONT       reduce using rule 113 (CYCLE -> FOR .)
    DRAW_LINE_R     reduce using rule 113 (CYCLE -> FOR .)
    DRAW_CIRCLE_R   reduce using rule 113 (CYCLE -> FOR .)
    DRAW_RECTANGLE_R reduce using rule 113 (CYCLE -> FOR .)
    MOVE_UP_R       reduce using rule 113 (CYCLE -> FOR .)
    MOVE_RIGHT_R    reduce using rule 113 (CYCLE -> FOR .)
    MOVE_DOWN_R     reduce using rule 113 (CYCLE -> FOR .)
    MOVE_LEFT_R     reduce using rule 113 (CYCLE -> FOR .)
    PRINT_R         reduce using rule 113 (CYCLE -> FOR .)
    R_BRACE         reduce using rule 113 (CYCLE -> FOR .)


state 217

    (23) S_BLOCK -> L_BRACE F . R_BRACE

    R_BRACE         shift and go to state 236


state 218

    (115) CONDITION -> IF . append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing
    (117) append_false_bottom -> .

    NOT             reduce using rule 117 (append_false_bottom -> .)
    L_PAREN         reduce using rule 117 (append_false_bottom -> .)
    ID              reduce using rule 117 (append_false_bottom -> .)
    INT_CONT        reduce using rule 117 (append_false_bottom -> .)
    STRING_CONT     reduce using rule 117 (append_false_bottom -> .)
    CHAR_CONT       reduce using rule 117 (append_false_bottom -> .)
    FLOAT_CONT      reduce using rule 117 (append_false_bottom -> .)
    BOOL_CONT       reduce using rule 117 (append_false_bottom -> .)
    DRAW_LINE_R     reduce using rule 117 (append_false_bottom -> .)
    DRAW_CIRCLE_R   reduce using rule 117 (append_false_bottom -> .)
    DRAW_RECTANGLE_R reduce using rule 117 (append_false_bottom -> .)
    MOVE_UP_R       reduce using rule 117 (append_false_bottom -> .)
    MOVE_RIGHT_R    reduce using rule 117 (append_false_bottom -> .)
    MOVE_DOWN_R     reduce using rule 117 (append_false_bottom -> .)
    MOVE_LEFT_R     reduce using rule 117 (append_false_bottom -> .)
    PRINT_R         reduce using rule 117 (append_false_bottom -> .)

    append_false_bottom            shift and go to state 237

state 219

    (25) F -> empty .

    R_BRACE         reduce using rule 25 (F -> empty .)


state 220

    (149) MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK TICK . update_fun print_currentSymTab free_symbol_table reset_execution_block
    (31) update_fun -> .

    $end            reduce using rule 31 (update_fun -> .)

    update_fun                     shift and go to state 238

state 221

    (151) DRAW_LINE -> DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA . S_EXPRESSION R_PAREN
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 239
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    SOLUTION_CALL                  shift and go to state 55
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    NEGATION                       shift and go to state 81
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 222

    (152) DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 152 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 152 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    PLUS            reduce using rule 152 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    MINUS           reduce using rule 152 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 152 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 152 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 152 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 152 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    IS              reduce using rule 152 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    AND             reduce using rule 152 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    OR              reduce using rule 152 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 152 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    COMMA           reduce using rule 152 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    TICK            reduce using rule 152 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 152 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    COLON           reduce using rule 152 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 152 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)


state 223

    (150) DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 150 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 150 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    PLUS            reduce using rule 150 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    MINUS           reduce using rule 150 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 150 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 150 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 150 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 150 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    IS              reduce using rule 150 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    AND             reduce using rule 150 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    OR              reduce using rule 150 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 150 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    COMMA           reduce using rule 150 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    TICK            reduce using rule 150 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 150 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 150 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    COLON           reduce using rule 150 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)


state 224

    (136) X -> COMMA update_parameter_counter . V
    (134) V -> . S_EXPRESSION process_argument X
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 176
    SOLUTION_CALL                  shift and go to state 55
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    V                              shift and go to state 240
    MOVE_UP                        shift and go to state 66
    NEGATION                       shift and go to state 81
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 225

    (28) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK . update_fun print_currentSymTab free_symbol_table reset_execution_block
    (31) update_fun -> .

    SOL             reduce using rule 31 (update_fun -> .)
    INT             reduce using rule 31 (update_fun -> .)

    update_fun                     shift and go to state 241

state 226

    (141) PARAMS -> TYPE store_type ID check_param_duplicates update_param_count . Y
    (144) Y -> . COMMA PARAMS
    (145) Y -> . empty
    (166) empty -> .

    COMMA           shift and go to state 242
    R_PAREN         reduce using rule 166 (empty -> .)

    Y                              shift and go to state 243
    empty                          shift and go to state 244

state 227

    (106) WHILE -> WHILE_CYCLE append_jump . S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 245
    SOLUTION_CALL                  shift and go to state 55
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    NEGATION                       shift and go to state 81
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 228

    (37) RETURN_STATEMENT -> RETURN S_EXPRESSION . TICK check_return_type_correspondence process_return_operation_with_return_value

    TICK            shift and go to state 246


state 229

    (38) RETURN_STATEMENT -> RETURN TICK . process_return_operation_without_return_value
    (41) process_return_operation_without_return_value -> .

    INT             reduce using rule 41 (process_return_operation_without_return_value -> .)
    FLOAT           reduce using rule 41 (process_return_operation_without_return_value -> .)
    CHAR            reduce using rule 41 (process_return_operation_without_return_value -> .)
    STRING          reduce using rule 41 (process_return_operation_without_return_value -> .)
    BOOL            reduce using rule 41 (process_return_operation_without_return_value -> .)
    LIST            reduce using rule 41 (process_return_operation_without_return_value -> .)
    IF              reduce using rule 41 (process_return_operation_without_return_value -> .)
    RETURN          reduce using rule 41 (process_return_operation_without_return_value -> .)
    FOR_CYCLE       reduce using rule 41 (process_return_operation_without_return_value -> .)
    WHILE_CYCLE     reduce using rule 41 (process_return_operation_without_return_value -> .)
    ID              reduce using rule 41 (process_return_operation_without_return_value -> .)
    INT_CONT        reduce using rule 41 (process_return_operation_without_return_value -> .)
    STRING_CONT     reduce using rule 41 (process_return_operation_without_return_value -> .)
    CHAR_CONT       reduce using rule 41 (process_return_operation_without_return_value -> .)
    FLOAT_CONT      reduce using rule 41 (process_return_operation_without_return_value -> .)
    BOOL_CONT       reduce using rule 41 (process_return_operation_without_return_value -> .)
    DRAW_LINE_R     reduce using rule 41 (process_return_operation_without_return_value -> .)
    DRAW_CIRCLE_R   reduce using rule 41 (process_return_operation_without_return_value -> .)
    DRAW_RECTANGLE_R reduce using rule 41 (process_return_operation_without_return_value -> .)
    MOVE_UP_R       reduce using rule 41 (process_return_operation_without_return_value -> .)
    MOVE_RIGHT_R    reduce using rule 41 (process_return_operation_without_return_value -> .)
    MOVE_DOWN_R     reduce using rule 41 (process_return_operation_without_return_value -> .)
    MOVE_LEFT_R     reduce using rule 41 (process_return_operation_without_return_value -> .)
    PRINT_R         reduce using rule 41 (process_return_operation_without_return_value -> .)
    R_BRACE         reduce using rule 41 (process_return_operation_without_return_value -> .)

    process_return_operation_without_return_value shift and go to state 247

state 230

    (24) F -> S_STATUTE F .

    R_BRACE         reduce using rule 24 (F -> S_STATUTE F .)


state 231

    (99) ASSIGNATION -> ID_REF EQUALS . append_equals S_EXPRESSION process_assignation_operation TICK
    (100) append_equals -> .

    NOT             reduce using rule 100 (append_equals -> .)
    L_PAREN         reduce using rule 100 (append_equals -> .)
    ID              reduce using rule 100 (append_equals -> .)
    INT_CONT        reduce using rule 100 (append_equals -> .)
    STRING_CONT     reduce using rule 100 (append_equals -> .)
    CHAR_CONT       reduce using rule 100 (append_equals -> .)
    FLOAT_CONT      reduce using rule 100 (append_equals -> .)
    BOOL_CONT       reduce using rule 100 (append_equals -> .)
    DRAW_LINE_R     reduce using rule 100 (append_equals -> .)
    DRAW_CIRCLE_R   reduce using rule 100 (append_equals -> .)
    DRAW_RECTANGLE_R reduce using rule 100 (append_equals -> .)
    MOVE_UP_R       reduce using rule 100 (append_equals -> .)
    MOVE_RIGHT_R    reduce using rule 100 (append_equals -> .)
    MOVE_DOWN_R     reduce using rule 100 (append_equals -> .)
    MOVE_LEFT_R     reduce using rule 100 (append_equals -> .)
    PRINT_R         reduce using rule 100 (append_equals -> .)

    append_equals                  shift and go to state 248

state 232

    (35) STATUTE -> CON_VAR TICK .

    IF              reduce using rule 35 (STATUTE -> CON_VAR TICK .)
    RETURN          reduce using rule 35 (STATUTE -> CON_VAR TICK .)
    FOR_CYCLE       reduce using rule 35 (STATUTE -> CON_VAR TICK .)
    WHILE_CYCLE     reduce using rule 35 (STATUTE -> CON_VAR TICK .)
    ID              reduce using rule 35 (STATUTE -> CON_VAR TICK .)
    INT_CONT        reduce using rule 35 (STATUTE -> CON_VAR TICK .)
    STRING_CONT     reduce using rule 35 (STATUTE -> CON_VAR TICK .)
    CHAR_CONT       reduce using rule 35 (STATUTE -> CON_VAR TICK .)
    FLOAT_CONT      reduce using rule 35 (STATUTE -> CON_VAR TICK .)
    BOOL_CONT       reduce using rule 35 (STATUTE -> CON_VAR TICK .)
    DRAW_LINE_R     reduce using rule 35 (STATUTE -> CON_VAR TICK .)
    DRAW_CIRCLE_R   reduce using rule 35 (STATUTE -> CON_VAR TICK .)
    DRAW_RECTANGLE_R reduce using rule 35 (STATUTE -> CON_VAR TICK .)
    MOVE_UP_R       reduce using rule 35 (STATUTE -> CON_VAR TICK .)
    MOVE_RIGHT_R    reduce using rule 35 (STATUTE -> CON_VAR TICK .)
    MOVE_DOWN_R     reduce using rule 35 (STATUTE -> CON_VAR TICK .)
    MOVE_LEFT_R     reduce using rule 35 (STATUTE -> CON_VAR TICK .)
    PRINT_R         reduce using rule 35 (STATUTE -> CON_VAR TICK .)
    R_BRACE         reduce using rule 35 (STATUTE -> CON_VAR TICK .)
    INT             reduce using rule 35 (STATUTE -> CON_VAR TICK .)
    FLOAT           reduce using rule 35 (STATUTE -> CON_VAR TICK .)
    CHAR            reduce using rule 35 (STATUTE -> CON_VAR TICK .)
    STRING          reduce using rule 35 (STATUTE -> CON_VAR TICK .)
    BOOL            reduce using rule 35 (STATUTE -> CON_VAR TICK .)
    LIST            reduce using rule 35 (STATUTE -> CON_VAR TICK .)


state 233

    (105) S_ASSIGNATION -> ID_REF . EQUALS append_equals S_EXPRESSION process_assignation_operation

    EQUALS          shift and go to state 249


state 234

    (109) FOR -> FOR_CYCLE S_ASSIGNATION . TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK

    TICK            shift and go to state 250


state 235

    (90) ID_REF -> ID . check_var_existence get_var_type O
    (91) check_var_existence -> .

    L_BRACK         reduce using rule 91 (check_var_existence -> .)
    EQUALS          reduce using rule 91 (check_var_existence -> .)

    check_var_existence            shift and go to state 114

state 236

    (23) S_BLOCK -> L_BRACE F R_BRACE .

    TICK            reduce using rule 23 (S_BLOCK -> L_BRACE F R_BRACE .)


state 237

    (115) CONDITION -> IF append_false_bottom . S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 251
    SOLUTION_CALL                  shift and go to state 55
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    NEGATION                       shift and go to state 81
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 238

    (149) MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK TICK update_fun . print_currentSymTab free_symbol_table reset_execution_block
    (7) print_currentSymTab -> .

    $end            reduce using rule 7 (print_currentSymTab -> .)

    print_currentSymTab            shift and go to state 252

state 239

    (151) DRAW_LINE -> DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 253


state 240

    (136) X -> COMMA update_parameter_counter V .

    R_PAREN         reduce using rule 136 (X -> COMMA update_parameter_counter V .)


state 241

    (28) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK update_fun . print_currentSymTab free_symbol_table reset_execution_block
    (7) print_currentSymTab -> .

    SOL             reduce using rule 7 (print_currentSymTab -> .)
    INT             reduce using rule 7 (print_currentSymTab -> .)

    print_currentSymTab            shift and go to state 254

state 242

    (144) Y -> COMMA . PARAMS
    (141) PARAMS -> . TYPE store_type ID check_param_duplicates update_param_count Y
    (44) TYPE -> . INT
    (45) TYPE -> . FLOAT
    (46) TYPE -> . CHAR
    (47) TYPE -> . STRING
    (48) TYPE -> . BOOL
    (49) TYPE -> . LIST

    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 16
    STRING          shift and go to state 11
    BOOL            shift and go to state 17
    LIST            shift and go to state 15

    PARAMS                         shift and go to state 255
    TYPE                           shift and go to state 170

state 243

    (141) PARAMS -> TYPE store_type ID check_param_duplicates update_param_count Y .

    R_PAREN         reduce using rule 141 (PARAMS -> TYPE store_type ID check_param_duplicates update_param_count Y .)


state 244

    (145) Y -> empty .

    R_PAREN         reduce using rule 145 (Y -> empty .)


state 245

    (106) WHILE -> WHILE_CYCLE append_jump S_EXPRESSION . process_condition_operation COLON BLOCK end_while_operation_processing TICK
    (118) process_condition_operation -> .

    COLON           reduce using rule 118 (process_condition_operation -> .)

    process_condition_operation    shift and go to state 256

state 246

    (37) RETURN_STATEMENT -> RETURN S_EXPRESSION TICK . check_return_type_correspondence process_return_operation_with_return_value
    (39) check_return_type_correspondence -> .

    INT             reduce using rule 39 (check_return_type_correspondence -> .)
    FLOAT           reduce using rule 39 (check_return_type_correspondence -> .)
    CHAR            reduce using rule 39 (check_return_type_correspondence -> .)
    STRING          reduce using rule 39 (check_return_type_correspondence -> .)
    BOOL            reduce using rule 39 (check_return_type_correspondence -> .)
    LIST            reduce using rule 39 (check_return_type_correspondence -> .)
    IF              reduce using rule 39 (check_return_type_correspondence -> .)
    RETURN          reduce using rule 39 (check_return_type_correspondence -> .)
    FOR_CYCLE       reduce using rule 39 (check_return_type_correspondence -> .)
    WHILE_CYCLE     reduce using rule 39 (check_return_type_correspondence -> .)
    ID              reduce using rule 39 (check_return_type_correspondence -> .)
    INT_CONT        reduce using rule 39 (check_return_type_correspondence -> .)
    STRING_CONT     reduce using rule 39 (check_return_type_correspondence -> .)
    CHAR_CONT       reduce using rule 39 (check_return_type_correspondence -> .)
    FLOAT_CONT      reduce using rule 39 (check_return_type_correspondence -> .)
    BOOL_CONT       reduce using rule 39 (check_return_type_correspondence -> .)
    DRAW_LINE_R     reduce using rule 39 (check_return_type_correspondence -> .)
    DRAW_CIRCLE_R   reduce using rule 39 (check_return_type_correspondence -> .)
    DRAW_RECTANGLE_R reduce using rule 39 (check_return_type_correspondence -> .)
    MOVE_UP_R       reduce using rule 39 (check_return_type_correspondence -> .)
    MOVE_RIGHT_R    reduce using rule 39 (check_return_type_correspondence -> .)
    MOVE_DOWN_R     reduce using rule 39 (check_return_type_correspondence -> .)
    MOVE_LEFT_R     reduce using rule 39 (check_return_type_correspondence -> .)
    PRINT_R         reduce using rule 39 (check_return_type_correspondence -> .)
    R_BRACE         reduce using rule 39 (check_return_type_correspondence -> .)

    check_return_type_correspondence shift and go to state 257

state 247

    (38) RETURN_STATEMENT -> RETURN TICK process_return_operation_without_return_value .

    INT             reduce using rule 38 (RETURN_STATEMENT -> RETURN TICK process_return_operation_without_return_value .)
    FLOAT           reduce using rule 38 (RETURN_STATEMENT -> RETURN TICK process_return_operation_without_return_value .)
    CHAR            reduce using rule 38 (RETURN_STATEMENT -> RETURN TICK process_return_operation_without_return_value .)
    STRING          reduce using rule 38 (RETURN_STATEMENT -> RETURN TICK process_return_operation_without_return_value .)
    BOOL            reduce using rule 38 (RETURN_STATEMENT -> RETURN TICK process_return_operation_without_return_value .)
    LIST            reduce using rule 38 (RETURN_STATEMENT -> RETURN TICK process_return_operation_without_return_value .)
    IF              reduce using rule 38 (RETURN_STATEMENT -> RETURN TICK process_return_operation_without_return_value .)
    RETURN          reduce using rule 38 (RETURN_STATEMENT -> RETURN TICK process_return_operation_without_return_value .)
    FOR_CYCLE       reduce using rule 38 (RETURN_STATEMENT -> RETURN TICK process_return_operation_without_return_value .)
    WHILE_CYCLE     reduce using rule 38 (RETURN_STATEMENT -> RETURN TICK process_return_operation_without_return_value .)
    ID              reduce using rule 38 (RETURN_STATEMENT -> RETURN TICK process_return_operation_without_return_value .)
    INT_CONT        reduce using rule 38 (RETURN_STATEMENT -> RETURN TICK process_return_operation_without_return_value .)
    STRING_CONT     reduce using rule 38 (RETURN_STATEMENT -> RETURN TICK process_return_operation_without_return_value .)
    CHAR_CONT       reduce using rule 38 (RETURN_STATEMENT -> RETURN TICK process_return_operation_without_return_value .)
    FLOAT_CONT      reduce using rule 38 (RETURN_STATEMENT -> RETURN TICK process_return_operation_without_return_value .)
    BOOL_CONT       reduce using rule 38 (RETURN_STATEMENT -> RETURN TICK process_return_operation_without_return_value .)
    DRAW_LINE_R     reduce using rule 38 (RETURN_STATEMENT -> RETURN TICK process_return_operation_without_return_value .)
    DRAW_CIRCLE_R   reduce using rule 38 (RETURN_STATEMENT -> RETURN TICK process_return_operation_without_return_value .)
    DRAW_RECTANGLE_R reduce using rule 38 (RETURN_STATEMENT -> RETURN TICK process_return_operation_without_return_value .)
    MOVE_UP_R       reduce using rule 38 (RETURN_STATEMENT -> RETURN TICK process_return_operation_without_return_value .)
    MOVE_RIGHT_R    reduce using rule 38 (RETURN_STATEMENT -> RETURN TICK process_return_operation_without_return_value .)
    MOVE_DOWN_R     reduce using rule 38 (RETURN_STATEMENT -> RETURN TICK process_return_operation_without_return_value .)
    MOVE_LEFT_R     reduce using rule 38 (RETURN_STATEMENT -> RETURN TICK process_return_operation_without_return_value .)
    PRINT_R         reduce using rule 38 (RETURN_STATEMENT -> RETURN TICK process_return_operation_without_return_value .)
    R_BRACE         reduce using rule 38 (RETURN_STATEMENT -> RETURN TICK process_return_operation_without_return_value .)


state 248

    (99) ASSIGNATION -> ID_REF EQUALS append_equals . S_EXPRESSION process_assignation_operation TICK
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 258
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    SOLUTION_CALL                  shift and go to state 55
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    NEGATION                       shift and go to state 81
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 249

    (105) S_ASSIGNATION -> ID_REF EQUALS . append_equals S_EXPRESSION process_assignation_operation
    (100) append_equals -> .

    NOT             reduce using rule 100 (append_equals -> .)
    L_PAREN         reduce using rule 100 (append_equals -> .)
    ID              reduce using rule 100 (append_equals -> .)
    INT_CONT        reduce using rule 100 (append_equals -> .)
    STRING_CONT     reduce using rule 100 (append_equals -> .)
    CHAR_CONT       reduce using rule 100 (append_equals -> .)
    FLOAT_CONT      reduce using rule 100 (append_equals -> .)
    BOOL_CONT       reduce using rule 100 (append_equals -> .)
    DRAW_LINE_R     reduce using rule 100 (append_equals -> .)
    DRAW_CIRCLE_R   reduce using rule 100 (append_equals -> .)
    DRAW_RECTANGLE_R reduce using rule 100 (append_equals -> .)
    MOVE_UP_R       reduce using rule 100 (append_equals -> .)
    MOVE_RIGHT_R    reduce using rule 100 (append_equals -> .)
    MOVE_DOWN_R     reduce using rule 100 (append_equals -> .)
    MOVE_LEFT_R     reduce using rule 100 (append_equals -> .)
    PRINT_R         reduce using rule 100 (append_equals -> .)

    append_equals                  shift and go to state 259

state 250

    (109) FOR -> FOR_CYCLE S_ASSIGNATION TICK . append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK
    (107) append_jump -> .

    NOT             reduce using rule 107 (append_jump -> .)
    L_PAREN         reduce using rule 107 (append_jump -> .)
    ID              reduce using rule 107 (append_jump -> .)
    INT_CONT        reduce using rule 107 (append_jump -> .)
    STRING_CONT     reduce using rule 107 (append_jump -> .)
    CHAR_CONT       reduce using rule 107 (append_jump -> .)
    FLOAT_CONT      reduce using rule 107 (append_jump -> .)
    BOOL_CONT       reduce using rule 107 (append_jump -> .)
    DRAW_LINE_R     reduce using rule 107 (append_jump -> .)
    DRAW_CIRCLE_R   reduce using rule 107 (append_jump -> .)
    DRAW_RECTANGLE_R reduce using rule 107 (append_jump -> .)
    MOVE_UP_R       reduce using rule 107 (append_jump -> .)
    MOVE_RIGHT_R    reduce using rule 107 (append_jump -> .)
    MOVE_DOWN_R     reduce using rule 107 (append_jump -> .)
    MOVE_LEFT_R     reduce using rule 107 (append_jump -> .)
    PRINT_R         reduce using rule 107 (append_jump -> .)

    append_jump                    shift and go to state 260

state 251

    (115) CONDITION -> IF append_false_bottom S_EXPRESSION . process_condition_operation COLON BLOCK R TICK end_condition_operation_processing
    (118) process_condition_operation -> .

    COLON           reduce using rule 118 (process_condition_operation -> .)

    process_condition_operation    shift and go to state 261

state 252

    (149) MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab . free_symbol_table reset_execution_block
    (3) free_symbol_table -> .

    $end            reduce using rule 3 (free_symbol_table -> .)

    free_symbol_table              shift and go to state 262

state 253

    (151) DRAW_LINE -> DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 151 (DRAW_LINE -> DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 151 (DRAW_LINE -> DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    PLUS            reduce using rule 151 (DRAW_LINE -> DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    MINUS           reduce using rule 151 (DRAW_LINE -> DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 151 (DRAW_LINE -> DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 151 (DRAW_LINE -> DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 151 (DRAW_LINE -> DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 151 (DRAW_LINE -> DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    IS              reduce using rule 151 (DRAW_LINE -> DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    AND             reduce using rule 151 (DRAW_LINE -> DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    OR              reduce using rule 151 (DRAW_LINE -> DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 151 (DRAW_LINE -> DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    COLON           reduce using rule 151 (DRAW_LINE -> DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    COMMA           reduce using rule 151 (DRAW_LINE -> DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    TICK            reduce using rule 151 (DRAW_LINE -> DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 151 (DRAW_LINE -> DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 151 (DRAW_LINE -> DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN .)


state 254

    (28) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab . free_symbol_table reset_execution_block
    (3) free_symbol_table -> .

    SOL             reduce using rule 3 (free_symbol_table -> .)
    INT             reduce using rule 3 (free_symbol_table -> .)

    free_symbol_table              shift and go to state 263

state 255

    (144) Y -> COMMA PARAMS .

    R_PAREN         reduce using rule 144 (Y -> COMMA PARAMS .)


state 256

    (106) WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation . COLON BLOCK end_while_operation_processing TICK

    COLON           shift and go to state 264


state 257

    (37) RETURN_STATEMENT -> RETURN S_EXPRESSION TICK check_return_type_correspondence . process_return_operation_with_return_value
    (40) process_return_operation_with_return_value -> .

    INT             reduce using rule 40 (process_return_operation_with_return_value -> .)
    FLOAT           reduce using rule 40 (process_return_operation_with_return_value -> .)
    CHAR            reduce using rule 40 (process_return_operation_with_return_value -> .)
    STRING          reduce using rule 40 (process_return_operation_with_return_value -> .)
    BOOL            reduce using rule 40 (process_return_operation_with_return_value -> .)
    LIST            reduce using rule 40 (process_return_operation_with_return_value -> .)
    IF              reduce using rule 40 (process_return_operation_with_return_value -> .)
    RETURN          reduce using rule 40 (process_return_operation_with_return_value -> .)
    FOR_CYCLE       reduce using rule 40 (process_return_operation_with_return_value -> .)
    WHILE_CYCLE     reduce using rule 40 (process_return_operation_with_return_value -> .)
    ID              reduce using rule 40 (process_return_operation_with_return_value -> .)
    INT_CONT        reduce using rule 40 (process_return_operation_with_return_value -> .)
    STRING_CONT     reduce using rule 40 (process_return_operation_with_return_value -> .)
    CHAR_CONT       reduce using rule 40 (process_return_operation_with_return_value -> .)
    FLOAT_CONT      reduce using rule 40 (process_return_operation_with_return_value -> .)
    BOOL_CONT       reduce using rule 40 (process_return_operation_with_return_value -> .)
    DRAW_LINE_R     reduce using rule 40 (process_return_operation_with_return_value -> .)
    DRAW_CIRCLE_R   reduce using rule 40 (process_return_operation_with_return_value -> .)
    DRAW_RECTANGLE_R reduce using rule 40 (process_return_operation_with_return_value -> .)
    MOVE_UP_R       reduce using rule 40 (process_return_operation_with_return_value -> .)
    MOVE_RIGHT_R    reduce using rule 40 (process_return_operation_with_return_value -> .)
    MOVE_DOWN_R     reduce using rule 40 (process_return_operation_with_return_value -> .)
    MOVE_LEFT_R     reduce using rule 40 (process_return_operation_with_return_value -> .)
    PRINT_R         reduce using rule 40 (process_return_operation_with_return_value -> .)
    R_BRACE         reduce using rule 40 (process_return_operation_with_return_value -> .)

    process_return_operation_with_return_value shift and go to state 265

state 258

    (99) ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION . process_assignation_operation TICK
    (101) process_assignation_operation -> .

    TICK            reduce using rule 101 (process_assignation_operation -> .)

    process_assignation_operation  shift and go to state 266

state 259

    (105) S_ASSIGNATION -> ID_REF EQUALS append_equals . S_EXPRESSION process_assignation_operation
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 267
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    SOLUTION_CALL                  shift and go to state 55
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    NEGATION                       shift and go to state 81
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 260

    (109) FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump . S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 268
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    SOLUTION_CALL                  shift and go to state 55
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    NEGATION                       shift and go to state 81
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 261

    (115) CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation . COLON BLOCK R TICK end_condition_operation_processing

    COLON           shift and go to state 269


state 262

    (149) MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table . reset_execution_block
    (29) reset_execution_block -> .

    $end            reduce using rule 29 (reset_execution_block -> .)

    reset_execution_block          shift and go to state 270

state 263

    (28) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table . reset_execution_block
    (29) reset_execution_block -> .

    SOL             reduce using rule 29 (reset_execution_block -> .)
    INT             reduce using rule 29 (reset_execution_block -> .)

    reset_execution_block          shift and go to state 271

state 264

    (106) WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON . BLOCK end_while_operation_processing TICK
    (102) BLOCK -> . L_BRACE Q R_BRACE

    L_BRACE         shift and go to state 272

    BLOCK                          shift and go to state 273

state 265

    (37) RETURN_STATEMENT -> RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value .

    INT             reduce using rule 37 (RETURN_STATEMENT -> RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value .)
    FLOAT           reduce using rule 37 (RETURN_STATEMENT -> RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value .)
    CHAR            reduce using rule 37 (RETURN_STATEMENT -> RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value .)
    STRING          reduce using rule 37 (RETURN_STATEMENT -> RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value .)
    BOOL            reduce using rule 37 (RETURN_STATEMENT -> RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value .)
    LIST            reduce using rule 37 (RETURN_STATEMENT -> RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value .)
    IF              reduce using rule 37 (RETURN_STATEMENT -> RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value .)
    RETURN          reduce using rule 37 (RETURN_STATEMENT -> RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value .)
    FOR_CYCLE       reduce using rule 37 (RETURN_STATEMENT -> RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value .)
    WHILE_CYCLE     reduce using rule 37 (RETURN_STATEMENT -> RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value .)
    ID              reduce using rule 37 (RETURN_STATEMENT -> RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value .)
    INT_CONT        reduce using rule 37 (RETURN_STATEMENT -> RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value .)
    STRING_CONT     reduce using rule 37 (RETURN_STATEMENT -> RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value .)
    CHAR_CONT       reduce using rule 37 (RETURN_STATEMENT -> RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value .)
    FLOAT_CONT      reduce using rule 37 (RETURN_STATEMENT -> RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value .)
    BOOL_CONT       reduce using rule 37 (RETURN_STATEMENT -> RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value .)
    DRAW_LINE_R     reduce using rule 37 (RETURN_STATEMENT -> RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value .)
    DRAW_CIRCLE_R   reduce using rule 37 (RETURN_STATEMENT -> RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value .)
    DRAW_RECTANGLE_R reduce using rule 37 (RETURN_STATEMENT -> RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value .)
    MOVE_UP_R       reduce using rule 37 (RETURN_STATEMENT -> RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value .)
    MOVE_RIGHT_R    reduce using rule 37 (RETURN_STATEMENT -> RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value .)
    MOVE_DOWN_R     reduce using rule 37 (RETURN_STATEMENT -> RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value .)
    MOVE_LEFT_R     reduce using rule 37 (RETURN_STATEMENT -> RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value .)
    PRINT_R         reduce using rule 37 (RETURN_STATEMENT -> RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value .)
    R_BRACE         reduce using rule 37 (RETURN_STATEMENT -> RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value .)


state 266

    (99) ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation . TICK

    TICK            shift and go to state 274


state 267

    (105) S_ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION . process_assignation_operation
    (101) process_assignation_operation -> .

    TICK            reduce using rule 101 (process_assignation_operation -> .)
    COLON           reduce using rule 101 (process_assignation_operation -> .)

    process_assignation_operation  shift and go to state 275

state 268

    (109) FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION . process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK
    (110) process_for_condition_operation -> .

    TICK            reduce using rule 110 (process_for_condition_operation -> .)

    process_for_condition_operation shift and go to state 276

state 269

    (115) CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON . BLOCK R TICK end_condition_operation_processing
    (102) BLOCK -> . L_BRACE Q R_BRACE

    L_BRACE         shift and go to state 272

    BLOCK                          shift and go to state 277

state 270

    (149) MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block .

    $end            reduce using rule 149 (MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block .)


state 271

    (28) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block .

    SOL             reduce using rule 28 (SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block .)
    INT             reduce using rule 28 (SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block .)


state 272

    (102) BLOCK -> L_BRACE . Q R_BRACE
    (103) Q -> . STATUTE Q
    (104) Q -> . empty
    (32) STATUTE -> . CONDITION
    (33) STATUTE -> . CYCLE
    (34) STATUTE -> . ASSIGNATION
    (35) STATUTE -> . CON_VAR TICK
    (36) STATUTE -> . RETURN_STATEMENT
    (166) empty -> .
    (115) CONDITION -> . IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing
    (113) CYCLE -> . FOR
    (114) CYCLE -> . WHILE
    (99) ASSIGNATION -> . ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (37) RETURN_STATEMENT -> . RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value
    (38) RETURN_STATEMENT -> . RETURN TICK process_return_operation_without_return_value
    (109) FOR -> . FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK
    (106) WHILE -> . WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    R_BRACE         reduce using rule 166 (empty -> .)
    IF              shift and go to state 218
    RETURN          shift and go to state 206
    FOR_CYCLE       shift and go to state 215
    WHILE_CYCLE     shift and go to state 203
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    RETURN_STATEMENT               shift and go to state 204
    WHILE                          shift and go to state 205
    PRINT                          shift and go to state 58
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 210
    SOLUTION_CALL                  shift and go to state 55
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 211
    empty                          shift and go to state 278
    CYCLE                          shift and go to state 213
    STATUTE                        shift and go to state 279
    ASSIGNATION                    shift and go to state 207
    FOR                            shift and go to state 216
    Q                              shift and go to state 280
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    CONDITION                      shift and go to state 212
    MOVE_UP                        shift and go to state 66
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    DRAW_CIRCLE                    shift and go to state 88

state 273

    (106) WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK . end_while_operation_processing TICK
    (108) end_while_operation_processing -> .

    TICK            reduce using rule 108 (end_while_operation_processing -> .)

    end_while_operation_processing shift and go to state 281

state 274

    (99) ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK .

    INT             reduce using rule 99 (ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK .)
    FLOAT           reduce using rule 99 (ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK .)
    CHAR            reduce using rule 99 (ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK .)
    STRING          reduce using rule 99 (ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK .)
    BOOL            reduce using rule 99 (ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK .)
    LIST            reduce using rule 99 (ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK .)
    IF              reduce using rule 99 (ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK .)
    RETURN          reduce using rule 99 (ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK .)
    FOR_CYCLE       reduce using rule 99 (ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK .)
    WHILE_CYCLE     reduce using rule 99 (ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK .)
    ID              reduce using rule 99 (ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK .)
    INT_CONT        reduce using rule 99 (ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK .)
    STRING_CONT     reduce using rule 99 (ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK .)
    CHAR_CONT       reduce using rule 99 (ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK .)
    FLOAT_CONT      reduce using rule 99 (ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK .)
    BOOL_CONT       reduce using rule 99 (ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK .)
    DRAW_LINE_R     reduce using rule 99 (ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK .)
    DRAW_CIRCLE_R   reduce using rule 99 (ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK .)
    DRAW_RECTANGLE_R reduce using rule 99 (ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK .)
    MOVE_UP_R       reduce using rule 99 (ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK .)
    MOVE_RIGHT_R    reduce using rule 99 (ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK .)
    MOVE_DOWN_R     reduce using rule 99 (ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK .)
    MOVE_LEFT_R     reduce using rule 99 (ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK .)
    PRINT_R         reduce using rule 99 (ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK .)
    R_BRACE         reduce using rule 99 (ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK .)


state 275

    (105) S_ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation .

    TICK            reduce using rule 105 (S_ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation .)
    COLON           reduce using rule 105 (S_ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation .)


state 276

    (109) FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation . TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK

    TICK            shift and go to state 282


state 277

    (115) CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK . R TICK end_condition_operation_processing
    (119) R -> . S
    (120) R -> . T
    (121) R -> . empty
    (122) S -> . ELIF process_elif_operation S_EXPRESSION process_condition_operation COLON BLOCK U
    (127) T -> . ELSE process_else_operation COLON BLOCK end_else_operation_processing
    (166) empty -> .

    ELIF            shift and go to state 288
    ELSE            shift and go to state 285
    TICK            reduce using rule 166 (empty -> .)

    empty                          shift and go to state 283
    S                              shift and go to state 286
    R                              shift and go to state 287
    T                              shift and go to state 284

state 278

    (104) Q -> empty .

    R_BRACE         reduce using rule 104 (Q -> empty .)


state 279

    (103) Q -> STATUTE . Q
    (103) Q -> . STATUTE Q
    (104) Q -> . empty
    (32) STATUTE -> . CONDITION
    (33) STATUTE -> . CYCLE
    (34) STATUTE -> . ASSIGNATION
    (35) STATUTE -> . CON_VAR TICK
    (36) STATUTE -> . RETURN_STATEMENT
    (166) empty -> .
    (115) CONDITION -> . IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing
    (113) CYCLE -> . FOR
    (114) CYCLE -> . WHILE
    (99) ASSIGNATION -> . ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (37) RETURN_STATEMENT -> . RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value
    (38) RETURN_STATEMENT -> . RETURN TICK process_return_operation_without_return_value
    (109) FOR -> . FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK
    (106) WHILE -> . WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    R_BRACE         reduce using rule 166 (empty -> .)
    IF              shift and go to state 218
    RETURN          shift and go to state 206
    FOR_CYCLE       shift and go to state 215
    WHILE_CYCLE     shift and go to state 203
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    RETURN_STATEMENT               shift and go to state 204
    WHILE                          shift and go to state 205
    PRINT                          shift and go to state 58
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 210
    SOLUTION_CALL                  shift and go to state 55
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 211
    empty                          shift and go to state 278
    CYCLE                          shift and go to state 213
    STATUTE                        shift and go to state 279
    ASSIGNATION                    shift and go to state 207
    FOR                            shift and go to state 216
    Q                              shift and go to state 289
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    CONDITION                      shift and go to state 212
    MOVE_UP                        shift and go to state 66
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    DRAW_CIRCLE                    shift and go to state 88

state 280

    (102) BLOCK -> L_BRACE Q . R_BRACE

    R_BRACE         shift and go to state 290


state 281

    (106) WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing . TICK

    TICK            shift and go to state 291


state 282

    (109) FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK . S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK
    (105) S_ASSIGNATION -> . ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation
    (90) ID_REF -> . ID check_var_existence get_var_type O

    ID              shift and go to state 235

    ID_REF                         shift and go to state 233
    S_ASSIGNATION                  shift and go to state 292

state 283

    (121) R -> empty .

    TICK            reduce using rule 121 (R -> empty .)


state 284

    (120) R -> T .

    TICK            reduce using rule 120 (R -> T .)


state 285

    (127) T -> ELSE . process_else_operation COLON BLOCK end_else_operation_processing
    (128) process_else_operation -> .

    COLON           reduce using rule 128 (process_else_operation -> .)

    process_else_operation         shift and go to state 293

state 286

    (119) R -> S .

    TICK            reduce using rule 119 (R -> S .)


state 287

    (115) CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R . TICK end_condition_operation_processing

    TICK            shift and go to state 294


state 288

    (122) S -> ELIF . process_elif_operation S_EXPRESSION process_condition_operation COLON BLOCK U
    (123) process_elif_operation -> .

    NOT             reduce using rule 123 (process_elif_operation -> .)
    L_PAREN         reduce using rule 123 (process_elif_operation -> .)
    ID              reduce using rule 123 (process_elif_operation -> .)
    INT_CONT        reduce using rule 123 (process_elif_operation -> .)
    STRING_CONT     reduce using rule 123 (process_elif_operation -> .)
    CHAR_CONT       reduce using rule 123 (process_elif_operation -> .)
    FLOAT_CONT      reduce using rule 123 (process_elif_operation -> .)
    BOOL_CONT       reduce using rule 123 (process_elif_operation -> .)
    DRAW_LINE_R     reduce using rule 123 (process_elif_operation -> .)
    DRAW_CIRCLE_R   reduce using rule 123 (process_elif_operation -> .)
    DRAW_RECTANGLE_R reduce using rule 123 (process_elif_operation -> .)
    MOVE_UP_R       reduce using rule 123 (process_elif_operation -> .)
    MOVE_RIGHT_R    reduce using rule 123 (process_elif_operation -> .)
    MOVE_DOWN_R     reduce using rule 123 (process_elif_operation -> .)
    MOVE_LEFT_R     reduce using rule 123 (process_elif_operation -> .)
    PRINT_R         reduce using rule 123 (process_elif_operation -> .)

    process_elif_operation         shift and go to state 295

state 289

    (103) Q -> STATUTE Q .

    R_BRACE         reduce using rule 103 (Q -> STATUTE Q .)


state 290

    (102) BLOCK -> L_BRACE Q R_BRACE .

    ELIF            reduce using rule 102 (BLOCK -> L_BRACE Q R_BRACE .)
    ELSE            reduce using rule 102 (BLOCK -> L_BRACE Q R_BRACE .)
    TICK            reduce using rule 102 (BLOCK -> L_BRACE Q R_BRACE .)


state 291

    (106) WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK .

    INT             reduce using rule 106 (WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK .)
    FLOAT           reduce using rule 106 (WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK .)
    CHAR            reduce using rule 106 (WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK .)
    STRING          reduce using rule 106 (WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK .)
    BOOL            reduce using rule 106 (WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK .)
    LIST            reduce using rule 106 (WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK .)
    IF              reduce using rule 106 (WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK .)
    RETURN          reduce using rule 106 (WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK .)
    FOR_CYCLE       reduce using rule 106 (WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK .)
    WHILE_CYCLE     reduce using rule 106 (WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK .)
    ID              reduce using rule 106 (WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK .)
    INT_CONT        reduce using rule 106 (WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK .)
    STRING_CONT     reduce using rule 106 (WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK .)
    CHAR_CONT       reduce using rule 106 (WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK .)
    FLOAT_CONT      reduce using rule 106 (WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK .)
    BOOL_CONT       reduce using rule 106 (WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK .)
    DRAW_LINE_R     reduce using rule 106 (WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK .)
    DRAW_CIRCLE_R   reduce using rule 106 (WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK .)
    DRAW_RECTANGLE_R reduce using rule 106 (WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK .)
    MOVE_UP_R       reduce using rule 106 (WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK .)
    MOVE_RIGHT_R    reduce using rule 106 (WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK .)
    MOVE_DOWN_R     reduce using rule 106 (WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK .)
    MOVE_LEFT_R     reduce using rule 106 (WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK .)
    PRINT_R         reduce using rule 106 (WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK .)
    R_BRACE         reduce using rule 106 (WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK .)


state 292

    (109) FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION . process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK
    (111) process_for_assignation_operation -> .

    COLON           reduce using rule 111 (process_for_assignation_operation -> .)

    process_for_assignation_operation shift and go to state 296

state 293

    (127) T -> ELSE process_else_operation . COLON BLOCK end_else_operation_processing

    COLON           shift and go to state 297


state 294

    (115) CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK . end_condition_operation_processing
    (116) end_condition_operation_processing -> .

    INT             reduce using rule 116 (end_condition_operation_processing -> .)
    FLOAT           reduce using rule 116 (end_condition_operation_processing -> .)
    CHAR            reduce using rule 116 (end_condition_operation_processing -> .)
    STRING          reduce using rule 116 (end_condition_operation_processing -> .)
    BOOL            reduce using rule 116 (end_condition_operation_processing -> .)
    LIST            reduce using rule 116 (end_condition_operation_processing -> .)
    IF              reduce using rule 116 (end_condition_operation_processing -> .)
    RETURN          reduce using rule 116 (end_condition_operation_processing -> .)
    FOR_CYCLE       reduce using rule 116 (end_condition_operation_processing -> .)
    WHILE_CYCLE     reduce using rule 116 (end_condition_operation_processing -> .)
    ID              reduce using rule 116 (end_condition_operation_processing -> .)
    INT_CONT        reduce using rule 116 (end_condition_operation_processing -> .)
    STRING_CONT     reduce using rule 116 (end_condition_operation_processing -> .)
    CHAR_CONT       reduce using rule 116 (end_condition_operation_processing -> .)
    FLOAT_CONT      reduce using rule 116 (end_condition_operation_processing -> .)
    BOOL_CONT       reduce using rule 116 (end_condition_operation_processing -> .)
    DRAW_LINE_R     reduce using rule 116 (end_condition_operation_processing -> .)
    DRAW_CIRCLE_R   reduce using rule 116 (end_condition_operation_processing -> .)
    DRAW_RECTANGLE_R reduce using rule 116 (end_condition_operation_processing -> .)
    MOVE_UP_R       reduce using rule 116 (end_condition_operation_processing -> .)
    MOVE_RIGHT_R    reduce using rule 116 (end_condition_operation_processing -> .)
    MOVE_DOWN_R     reduce using rule 116 (end_condition_operation_processing -> .)
    MOVE_LEFT_R     reduce using rule 116 (end_condition_operation_processing -> .)
    PRINT_R         reduce using rule 116 (end_condition_operation_processing -> .)
    R_BRACE         reduce using rule 116 (end_condition_operation_processing -> .)

    end_condition_operation_processing shift and go to state 298

state 295

    (122) S -> ELIF process_elif_operation . S_EXPRESSION process_condition_operation COLON BLOCK U
    (139) S_EXPRESSION -> . EXPRESSION
    (140) S_EXPRESSION -> . NEGATION
    (50) EXPRESSION -> . EXP G
    (87) NEGATION -> . N S_EXPRESSION process_negation_operation
    (62) EXP -> . TERM process_possible_plus_minus_operation I
    (89) N -> . NOT
    (68) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (74) FACTOR -> . L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom
    (75) FACTOR -> . CON_VAR
    (78) CON_VAR -> . ID_REF
    (79) CON_VAR -> . CON_VAR_TERMINAL
    (80) CON_VAR -> . SOLUTION_CALL
    (81) CON_VAR -> . PREDEFINED_SOLS
    (90) ID_REF -> . ID check_var_existence get_var_type O
    (82) CON_VAR_TERMINAL -> . INT_CONT
    (83) CON_VAR_TERMINAL -> . STRING_CONT
    (84) CON_VAR_TERMINAL -> . CHAR_CONT
    (85) CON_VAR_TERMINAL -> . FLOAT_CONT
    (86) CON_VAR_TERMINAL -> . BOOL_CONT
    (130) SOLUTION_CALL -> . ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing
    (158) PREDEFINED_SOLS -> . DRAW_LINE
    (159) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (160) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (161) PREDEFINED_SOLS -> . MOVE_UP
    (162) PREDEFINED_SOLS -> . MOVE_RIGHT
    (163) PREDEFINED_SOLS -> . MOVE_DOWN
    (164) PREDEFINED_SOLS -> . MOVE_LEFT
    (165) PREDEFINED_SOLS -> . PRINT
    (151) DRAW_LINE -> . DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (150) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (152) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN
    (153) MOVE_UP -> . MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN
    (154) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN
    (155) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN
    (156) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN
    (157) PRINT -> . PRINT_R L_PAREN S_EXPRESSION R_PAREN

    NOT             shift and go to state 86
    L_PAREN         shift and go to state 54
    ID              shift and go to state 75
    INT_CONT        shift and go to state 59
    STRING_CONT     shift and go to state 61
    CHAR_CONT       shift and go to state 70
    FLOAT_CONT      shift and go to state 77
    BOOL_CONT       shift and go to state 76
    DRAW_LINE_R     shift and go to state 51
    DRAW_CIRCLE_R   shift and go to state 60
    DRAW_RECTANGLE_R shift and go to state 56
    MOVE_UP_R       shift and go to state 80
    MOVE_RIGHT_R    shift and go to state 84
    MOVE_DOWN_R     shift and go to state 52
    MOVE_LEFT_R     shift and go to state 68
    PRINT_R         shift and go to state 87

    EXP                            shift and go to state 57
    S_EXPRESSION                   shift and go to state 299
    SOLUTION_CALL                  shift and go to state 55
    PRINT                          shift and go to state 58
    TERM                           shift and go to state 62
    MOVE_LEFT                      shift and go to state 63
    ID_REF                         shift and go to state 64
    MOVE_RIGHT                     shift and go to state 65
    CON_VAR                        shift and go to state 67
    EXPRESSION                     shift and go to state 69
    N                              shift and go to state 72
    CON_VAR_TERMINAL               shift and go to state 79
    DRAW_RECTANGLE                 shift and go to state 73
    DRAW_LINE                      shift and go to state 74
    MOVE_UP                        shift and go to state 66
    NEGATION                       shift and go to state 81
    PREDEFINED_SOLS                shift and go to state 82
    MOVE_DOWN                      shift and go to state 83
    FACTOR                         shift and go to state 85
    DRAW_CIRCLE                    shift and go to state 88

state 296

    (109) FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation . COLON BLOCK end_for_operation_processing TICK

    COLON           shift and go to state 300


state 297

    (127) T -> ELSE process_else_operation COLON . BLOCK end_else_operation_processing
    (102) BLOCK -> . L_BRACE Q R_BRACE

    L_BRACE         shift and go to state 272

    BLOCK                          shift and go to state 301

state 298

    (115) CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .

    INT             reduce using rule 115 (CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    FLOAT           reduce using rule 115 (CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    CHAR            reduce using rule 115 (CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    STRING          reduce using rule 115 (CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    BOOL            reduce using rule 115 (CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    LIST            reduce using rule 115 (CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    IF              reduce using rule 115 (CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    RETURN          reduce using rule 115 (CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    FOR_CYCLE       reduce using rule 115 (CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    WHILE_CYCLE     reduce using rule 115 (CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    ID              reduce using rule 115 (CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    INT_CONT        reduce using rule 115 (CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    STRING_CONT     reduce using rule 115 (CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    CHAR_CONT       reduce using rule 115 (CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    FLOAT_CONT      reduce using rule 115 (CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    BOOL_CONT       reduce using rule 115 (CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    DRAW_LINE_R     reduce using rule 115 (CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    DRAW_CIRCLE_R   reduce using rule 115 (CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    DRAW_RECTANGLE_R reduce using rule 115 (CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    MOVE_UP_R       reduce using rule 115 (CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    MOVE_RIGHT_R    reduce using rule 115 (CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    MOVE_DOWN_R     reduce using rule 115 (CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    MOVE_LEFT_R     reduce using rule 115 (CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    PRINT_R         reduce using rule 115 (CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    R_BRACE         reduce using rule 115 (CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)


state 299

    (122) S -> ELIF process_elif_operation S_EXPRESSION . process_condition_operation COLON BLOCK U
    (118) process_condition_operation -> .

    COLON           reduce using rule 118 (process_condition_operation -> .)

    process_condition_operation    shift and go to state 302

state 300

    (109) FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON . BLOCK end_for_operation_processing TICK
    (102) BLOCK -> . L_BRACE Q R_BRACE

    L_BRACE         shift and go to state 272

    BLOCK                          shift and go to state 303

state 301

    (127) T -> ELSE process_else_operation COLON BLOCK . end_else_operation_processing
    (129) end_else_operation_processing -> .

    TICK            reduce using rule 129 (end_else_operation_processing -> .)

    end_else_operation_processing  shift and go to state 304

state 302

    (122) S -> ELIF process_elif_operation S_EXPRESSION process_condition_operation . COLON BLOCK U

    COLON           shift and go to state 305


state 303

    (109) FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK . end_for_operation_processing TICK
    (112) end_for_operation_processing -> .

    TICK            reduce using rule 112 (end_for_operation_processing -> .)

    end_for_operation_processing   shift and go to state 306

state 304

    (127) T -> ELSE process_else_operation COLON BLOCK end_else_operation_processing .

    TICK            reduce using rule 127 (T -> ELSE process_else_operation COLON BLOCK end_else_operation_processing .)


state 305

    (122) S -> ELIF process_elif_operation S_EXPRESSION process_condition_operation COLON . BLOCK U
    (102) BLOCK -> . L_BRACE Q R_BRACE

    L_BRACE         shift and go to state 272

    BLOCK                          shift and go to state 307

state 306

    (109) FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing . TICK

    TICK            shift and go to state 308


state 307

    (122) S -> ELIF process_elif_operation S_EXPRESSION process_condition_operation COLON BLOCK . U
    (124) U -> . S
    (125) U -> . T
    (126) U -> . empty
    (122) S -> . ELIF process_elif_operation S_EXPRESSION process_condition_operation COLON BLOCK U
    (127) T -> . ELSE process_else_operation COLON BLOCK end_else_operation_processing
    (166) empty -> .

    ELIF            shift and go to state 288
    ELSE            shift and go to state 285
    TICK            reduce using rule 166 (empty -> .)

    S                              shift and go to state 309
    empty                          shift and go to state 310
    T                              shift and go to state 311
    U                              shift and go to state 312

state 308

    (109) FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK .

    INT             reduce using rule 109 (FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK .)
    FLOAT           reduce using rule 109 (FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK .)
    CHAR            reduce using rule 109 (FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK .)
    STRING          reduce using rule 109 (FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK .)
    BOOL            reduce using rule 109 (FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK .)
    LIST            reduce using rule 109 (FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK .)
    IF              reduce using rule 109 (FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK .)
    RETURN          reduce using rule 109 (FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK .)
    FOR_CYCLE       reduce using rule 109 (FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK .)
    WHILE_CYCLE     reduce using rule 109 (FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK .)
    ID              reduce using rule 109 (FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK .)
    INT_CONT        reduce using rule 109 (FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK .)
    STRING_CONT     reduce using rule 109 (FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK .)
    CHAR_CONT       reduce using rule 109 (FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK .)
    FLOAT_CONT      reduce using rule 109 (FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK .)
    BOOL_CONT       reduce using rule 109 (FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK .)
    DRAW_LINE_R     reduce using rule 109 (FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK .)
    DRAW_CIRCLE_R   reduce using rule 109 (FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK .)
    DRAW_RECTANGLE_R reduce using rule 109 (FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK .)
    MOVE_UP_R       reduce using rule 109 (FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK .)
    MOVE_RIGHT_R    reduce using rule 109 (FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK .)
    MOVE_DOWN_R     reduce using rule 109 (FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK .)
    MOVE_LEFT_R     reduce using rule 109 (FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK .)
    PRINT_R         reduce using rule 109 (FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK .)
    R_BRACE         reduce using rule 109 (FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK .)


state 309

    (124) U -> S .

    TICK            reduce using rule 124 (U -> S .)


state 310

    (126) U -> empty .

    TICK            reduce using rule 126 (U -> empty .)


state 311

    (125) U -> T .

    TICK            reduce using rule 125 (U -> T .)


state 312

    (122) S -> ELIF process_elif_operation S_EXPRESSION process_condition_operation COLON BLOCK U .

    TICK            reduce using rule 122 (S -> ELIF process_elif_operation S_EXPRESSION process_condition_operation COLON BLOCK U .)

