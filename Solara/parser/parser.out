Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    MULTI_COMMENT
    SINGLE_COMMENT

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID create_global_fun COLON VAR_BLOCK print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION
Rule 2     create_global_fun -> <empty>
Rule 3     print_currentSymTab -> <empty>
Rule 4     VAR_BLOCK -> VARS COLON AA
Rule 5     AA -> VAR_DEFINITIONS AA
Rule 6     AA -> empty
Rule 7     VAR_DEFINITIONS -> TYPE store_type A TICK
Rule 8     store_type -> <empty>
Rule 9     A -> ID check_var_duplicates B D
Rule 10    check_var_duplicates -> <empty>
Rule 11    B -> EQUALS C assign_var_value
Rule 12    B -> empty
Rule 13    assign_var_value -> <empty>
Rule 14    C -> EXPRESSION
Rule 15    C -> LIST_EXP
Rule 16    D -> COMMA A
Rule 17    D -> empty
Rule 18    S_BLOCK -> L_BRACE F R_BRACE
Rule 19    F -> S_STATUTE F
Rule 20    F -> empty
Rule 21    S_STATUTE -> VAR_DEFINITIONS
Rule 22    S_STATUTE -> STATUTE
Rule 23    SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK print_currentSymTab
Rule 24    check_sol_duplicates -> <empty>
Rule 25    STATUTE -> CONDITION
Rule 26    STATUTE -> CYCLE
Rule 27    STATUTE -> ASSIGNATION
Rule 28    S_TYPE -> VOID
Rule 29    S_TYPE -> TYPE
Rule 30    TYPE -> INT
Rule 31    TYPE -> FLOAT
Rule 32    TYPE -> CHAR
Rule 33    TYPE -> STRING
Rule 34    TYPE -> BOOL
Rule 35    TYPE -> LIST
Rule 36    EXPRESSION -> EXP G
Rule 37    G -> H EXP
Rule 38    G -> empty
Rule 39    H -> LESS_T
Rule 40    H -> GREATER_T
Rule 41    H -> GREATER_T_EQUALS
Rule 42    H -> LESS_T_EQUALS
Rule 43    H -> IS
Rule 44    H -> AND
Rule 45    H -> OR
Rule 46    H -> PERCENTAGE
Rule 47    EXP -> TERM I
Rule 48    I -> J EXP
Rule 49    I -> empty
Rule 50    J -> PLUS
Rule 51    J -> MINUS
Rule 52    TERM -> FACTOR K
Rule 53    K -> L TERM
Rule 54    K -> empty
Rule 55    L -> MULTIPLY
Rule 56    L -> DIVIDE
Rule 57    FACTOR -> L_PAREN EXPRESSION R_PAREN
Rule 58    FACTOR -> M CON_VAR
Rule 59    M -> PLUS
Rule 60    M -> MINUS
Rule 61    M -> empty
Rule 62    CON_VAR -> ID_REF
Rule 63    CON_VAR -> INT_CONT
Rule 64    CON_VAR -> STRING_CONT
Rule 65    CON_VAR -> CHAR_CONT
Rule 66    CON_VAR -> FLOAT_CONT
Rule 67    CON_VAR -> BOOL_CONT
Rule 68    CON_VAR -> SOLUTION_CALL
Rule 69    CON_VAR -> PREDEFINED_SOLS
Rule 70    NEGATION -> N EXPRESSION
Rule 71    N -> NOT
Rule 72    ID_REF -> ID check_var_existence O
Rule 73    check_var_existence -> <empty>
Rule 74    O -> L_BRACK EXPRESSION R_BRACK
Rule 75    O -> empty
Rule 76    LIST_EXP -> L_BRACK EXPRESSION P R_BRACK
Rule 77    P -> COMMA EXPRESSION P
Rule 78    P -> empty
Rule 79    ASSIGNATION -> ID_REF EQUALS EXPRESSION TICK
Rule 80    BLOCK -> L_BRACE Q R_BRACE
Rule 81    Q -> STATUTE Q
Rule 82    Q -> empty
Rule 83    S_ASSIGNATION -> ID_REF EQUALS EXPRESSION
Rule 84    WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK
Rule 85    FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK
Rule 86    CYCLE -> FOR
Rule 87    CYCLE -> WHILE
Rule 88    CONDITION -> IF EXPRESSION COLON BLOCK R TICK
Rule 89    R -> S
Rule 90    R -> T
Rule 91    S -> ELIF EXPRESSION COLON BLOCK U
Rule 92    U -> S
Rule 93    U -> T
Rule 94    U -> empty
Rule 95    T -> ELSE COLON BLOCK
Rule 96    SOLUTION_CALL -> ID L_PAREN V R_PAREN
Rule 97    V -> W X
Rule 98    W -> EXPRESSION
Rule 99    W -> NEGATION
Rule 100   X -> COMMA V
Rule 101   X -> empty
Rule 102   PARAMS -> TYPE store_type ID check_param_duplicates Y
Rule 103   check_param_duplicates -> <empty>
Rule 104   Y -> COMMA PARAMS
Rule 105   Y -> empty
Rule 106   SOL_DEFINITIONS -> Z
Rule 107   Z -> SOLUTION_DEF Z
Rule 108   Z -> empty
Rule 109   MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK TICK print_currentSymTab
Rule 110   DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
Rule 111   DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
Rule 112   DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
Rule 113   MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN
Rule 114   MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN
Rule 115   MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN
Rule 116   MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN
Rule 117   PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN
Rule 118   PREDEFINED_SOLS -> DRAW_LINE
Rule 119   PREDEFINED_SOLS -> DRAW_CIRCLE
Rule 120   PREDEFINED_SOLS -> DRAW_RECTANGLE
Rule 121   PREDEFINED_SOLS -> MOVE_UP
Rule 122   PREDEFINED_SOLS -> MOVE_RIGHT
Rule 123   PREDEFINED_SOLS -> MOVE_DOWN
Rule 124   PREDEFINED_SOLS -> MOVE_LEFT
Rule 125   PREDEFINED_SOLS -> PRINT
Rule 126   empty -> <empty>

Terminals, with rules where they appear

AND                  : 44
BOOL                 : 34
BOOL_CONT            : 67
CHAR                 : 32
CHAR_CONT            : 65
COLON                : 1 1 4 23 84 85 88 91 95 109
COMMA                : 16 77 100 104 110 110 111 111 111 112 112
DIVIDE               : 56
DRAW_CIRCLE_R        : 110
DRAW_LINE_R          : 111
DRAW_RECTANGLE_R     : 112
ELIF                 : 91
ELSE                 : 95
EQUALS               : 11 79 83
FLOAT                : 31
FLOAT_CONT           : 66
FOR_CYCLE            : 85
GREATER_T            : 40
GREATER_T_EQUALS     : 41
ID                   : 1 9 23 72 96 102
IF                   : 88
INT                  : 30 109
INT_CONT             : 63
IS                   : 43
LESS_T               : 39
LESS_T_EQUALS        : 42
LIST                 : 35
L_BRACE              : 18 80
L_BRACK              : 74 76
L_PAREN              : 23 57 96 109 110 111 112 113 114 115 116 117
MAIN_R               : 109
MINUS                : 51 60
MOVE_DOWN_R          : 115
MOVE_LEFT_R          : 116
MOVE_RIGHT_R         : 114
MOVE_UP_R            : 113
MULTIPLY             : 55
MULTI_COMMENT        : 
NOT                  : 71
OR                   : 45
PERCENTAGE           : 46
PLUS                 : 50 59
PRINT_R              : 117
PROGRAM              : 1
R_BRACE              : 18 80
R_BRACK              : 74 76
R_PAREN              : 23 57 96 109 110 111 112 113 114 115 116 117
SINGLE_COMMENT       : 
SOL                  : 23
SOLS                 : 1
STRING               : 33
STRING_CONT          : 64
TICK                 : 7 23 79 84 85 85 85 88 109
VARS                 : 4
VOID                 : 28
WHILE_CYCLE          : 84
error                : 

Nonterminals, with rules where they appear

A                    : 7 16
AA                   : 4 5
ASSIGNATION          : 27
B                    : 9
BLOCK                : 84 85 88 91 95
C                    : 11
CONDITION            : 25
CON_VAR              : 58
CYCLE                : 26
D                    : 9
DRAW_CIRCLE          : 119
DRAW_LINE            : 118
DRAW_RECTANGLE       : 120
EXP                  : 36 37 48
EXPRESSION           : 14 57 70 74 76 77 79 83 84 85 88 91 98 110 110 110 111 111 111 111 112 112 112 113 114 115 116 117
F                    : 18 19
FACTOR               : 52
FOR                  : 86
G                    : 36
H                    : 37
I                    : 47
ID_REF               : 62 79 83
J                    : 48
K                    : 52
L                    : 53
LIST_EXP             : 15
M                    : 58
MAIN_DEFINITION      : 1
MOVE_DOWN            : 123
MOVE_LEFT            : 124
MOVE_RIGHT           : 122
MOVE_UP              : 121
N                    : 70
NEGATION             : 99
O                    : 72
P                    : 76 77
PARAMS               : 23 104
PREDEFINED_SOLS      : 69
PRINT                : 125
Q                    : 80 81
R                    : 88
S                    : 89 92
SOLUTION_CALL        : 68
SOLUTION_DEF         : 107
SOL_DEFINITIONS      : 1
STATUTE              : 22 81
S_ASSIGNATION        : 85 85
S_BLOCK              : 23 109
S_STATUTE            : 19
S_TYPE               : 23
T                    : 90 93
TERM                 : 47 53
TYPE                 : 7 29 102
U                    : 91
V                    : 96 100
VAR_BLOCK            : 1
VAR_DEFINITIONS      : 5 21
W                    : 97
WHILE                : 87
X                    : 97
Y                    : 102
Z                    : 106 107
assign_var_value     : 11
check_param_duplicates : 102
check_sol_duplicates : 23 109
check_var_duplicates : 9
check_var_existence  : 72
create_global_fun    : 1
empty                : 6 12 17 20 38 49 54 61 75 78 82 94 101 105 108
print_currentSymTab  : 1 23 109
program              : 0
store_type           : 7 23 102 109

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID create_global_fun COLON VAR_BLOCK print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID create_global_fun COLON VAR_BLOCK print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . create_global_fun COLON VAR_BLOCK print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION
    (2) create_global_fun -> .

    COLON           reduce using rule 2 (create_global_fun -> .)

    create_global_fun              shift and go to state 4

state 4

    (1) program -> PROGRAM ID create_global_fun . COLON VAR_BLOCK print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION

    COLON           shift and go to state 5


state 5

    (1) program -> PROGRAM ID create_global_fun COLON . VAR_BLOCK print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION
    (4) VAR_BLOCK -> . VARS COLON AA

    VARS            shift and go to state 6

    VAR_BLOCK                      shift and go to state 7

state 6

    (4) VAR_BLOCK -> VARS . COLON AA

    COLON           shift and go to state 8


state 7

    (1) program -> PROGRAM ID create_global_fun COLON VAR_BLOCK . print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION
    (3) print_currentSymTab -> .

    SOLS            reduce using rule 3 (print_currentSymTab -> .)

    print_currentSymTab            shift and go to state 9

state 8

    (4) VAR_BLOCK -> VARS COLON . AA
    (5) AA -> . VAR_DEFINITIONS AA
    (6) AA -> . empty
    (7) VAR_DEFINITIONS -> . TYPE store_type A TICK
    (126) empty -> .
    (30) TYPE -> . INT
    (31) TYPE -> . FLOAT
    (32) TYPE -> . CHAR
    (33) TYPE -> . STRING
    (34) TYPE -> . BOOL
    (35) TYPE -> . LIST

    SOLS            reduce using rule 126 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 16
    STRING          shift and go to state 11
    BOOL            shift and go to state 17
    LIST            shift and go to state 15

    AA                             shift and go to state 10
    VAR_DEFINITIONS                shift and go to state 12
    TYPE                           shift and go to state 18
    empty                          shift and go to state 19

state 9

    (1) program -> PROGRAM ID create_global_fun COLON VAR_BLOCK print_currentSymTab . SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION

    SOLS            shift and go to state 20


state 10

    (4) VAR_BLOCK -> VARS COLON AA .

    SOLS            reduce using rule 4 (VAR_BLOCK -> VARS COLON AA .)


state 11

    (33) TYPE -> STRING .

    ID              reduce using rule 33 (TYPE -> STRING .)


state 12

    (5) AA -> VAR_DEFINITIONS . AA
    (5) AA -> . VAR_DEFINITIONS AA
    (6) AA -> . empty
    (7) VAR_DEFINITIONS -> . TYPE store_type A TICK
    (126) empty -> .
    (30) TYPE -> . INT
    (31) TYPE -> . FLOAT
    (32) TYPE -> . CHAR
    (33) TYPE -> . STRING
    (34) TYPE -> . BOOL
    (35) TYPE -> . LIST

    SOLS            reduce using rule 126 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 16
    STRING          shift and go to state 11
    BOOL            shift and go to state 17
    LIST            shift and go to state 15

    AA                             shift and go to state 21
    VAR_DEFINITIONS                shift and go to state 12
    TYPE                           shift and go to state 18
    empty                          shift and go to state 19

state 13

    (30) TYPE -> INT .

    ID              reduce using rule 30 (TYPE -> INT .)


state 14

    (31) TYPE -> FLOAT .

    ID              reduce using rule 31 (TYPE -> FLOAT .)


state 15

    (35) TYPE -> LIST .

    ID              reduce using rule 35 (TYPE -> LIST .)


state 16

    (32) TYPE -> CHAR .

    ID              reduce using rule 32 (TYPE -> CHAR .)


state 17

    (34) TYPE -> BOOL .

    ID              reduce using rule 34 (TYPE -> BOOL .)


state 18

    (7) VAR_DEFINITIONS -> TYPE . store_type A TICK
    (8) store_type -> .

    ID              reduce using rule 8 (store_type -> .)

    store_type                     shift and go to state 22

state 19

    (6) AA -> empty .

    SOLS            reduce using rule 6 (AA -> empty .)


state 20

    (1) program -> PROGRAM ID create_global_fun COLON VAR_BLOCK print_currentSymTab SOLS . COLON SOL_DEFINITIONS MAIN_DEFINITION

    COLON           shift and go to state 23


state 21

    (5) AA -> VAR_DEFINITIONS AA .

    SOLS            reduce using rule 5 (AA -> VAR_DEFINITIONS AA .)


state 22

    (7) VAR_DEFINITIONS -> TYPE store_type . A TICK
    (9) A -> . ID check_var_duplicates B D

    ID              shift and go to state 25

    A                              shift and go to state 24

state 23

    (1) program -> PROGRAM ID create_global_fun COLON VAR_BLOCK print_currentSymTab SOLS COLON . SOL_DEFINITIONS MAIN_DEFINITION
    (106) SOL_DEFINITIONS -> . Z
    (107) Z -> . SOLUTION_DEF Z
    (108) Z -> . empty
    (23) SOLUTION_DEF -> . SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK print_currentSymTab
    (126) empty -> .

    SOL             shift and go to state 27
    INT             reduce using rule 126 (empty -> .)

    SOLUTION_DEF                   shift and go to state 26
    SOL_DEFINITIONS                shift and go to state 28
    Z                              shift and go to state 29
    empty                          shift and go to state 30

state 24

    (7) VAR_DEFINITIONS -> TYPE store_type A . TICK

    TICK            shift and go to state 31


state 25

    (9) A -> ID . check_var_duplicates B D
    (10) check_var_duplicates -> .

    EQUALS          reduce using rule 10 (check_var_duplicates -> .)
    COMMA           reduce using rule 10 (check_var_duplicates -> .)
    TICK            reduce using rule 10 (check_var_duplicates -> .)

    check_var_duplicates           shift and go to state 32

state 26

    (107) Z -> SOLUTION_DEF . Z
    (107) Z -> . SOLUTION_DEF Z
    (108) Z -> . empty
    (23) SOLUTION_DEF -> . SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK print_currentSymTab
    (126) empty -> .

    SOL             shift and go to state 27
    INT             reduce using rule 126 (empty -> .)

    SOLUTION_DEF                   shift and go to state 26
    Z                              shift and go to state 33
    empty                          shift and go to state 30

state 27

    (23) SOLUTION_DEF -> SOL . S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK print_currentSymTab
    (28) S_TYPE -> . VOID
    (29) S_TYPE -> . TYPE
    (30) TYPE -> . INT
    (31) TYPE -> . FLOAT
    (32) TYPE -> . CHAR
    (33) TYPE -> . STRING
    (34) TYPE -> . BOOL
    (35) TYPE -> . LIST

    VOID            shift and go to state 34
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 16
    STRING          shift and go to state 11
    BOOL            shift and go to state 17
    LIST            shift and go to state 15

    S_TYPE                         shift and go to state 35
    TYPE                           shift and go to state 36

state 28

    (1) program -> PROGRAM ID create_global_fun COLON VAR_BLOCK print_currentSymTab SOLS COLON SOL_DEFINITIONS . MAIN_DEFINITION
    (109) MAIN_DEFINITION -> . INT store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK TICK print_currentSymTab

    INT             shift and go to state 37

    MAIN_DEFINITION                shift and go to state 38

state 29

    (106) SOL_DEFINITIONS -> Z .

    INT             reduce using rule 106 (SOL_DEFINITIONS -> Z .)


state 30

    (108) Z -> empty .

    INT             reduce using rule 108 (Z -> empty .)


state 31

    (7) VAR_DEFINITIONS -> TYPE store_type A TICK .

    INT             reduce using rule 7 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    FLOAT           reduce using rule 7 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    CHAR            reduce using rule 7 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    STRING          reduce using rule 7 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    BOOL            reduce using rule 7 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    LIST            reduce using rule 7 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    SOLS            reduce using rule 7 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    IF              reduce using rule 7 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    FOR_CYCLE       reduce using rule 7 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    WHILE_CYCLE     reduce using rule 7 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    ID              reduce using rule 7 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    R_BRACE         reduce using rule 7 (VAR_DEFINITIONS -> TYPE store_type A TICK .)


state 32

    (9) A -> ID check_var_duplicates . B D
    (11) B -> . EQUALS C assign_var_value
    (12) B -> . empty
    (126) empty -> .

    EQUALS          shift and go to state 40
    COMMA           reduce using rule 126 (empty -> .)
    TICK            reduce using rule 126 (empty -> .)

    B                              shift and go to state 39
    empty                          shift and go to state 41

state 33

    (107) Z -> SOLUTION_DEF Z .

    INT             reduce using rule 107 (Z -> SOLUTION_DEF Z .)


state 34

    (28) S_TYPE -> VOID .

    ID              reduce using rule 28 (S_TYPE -> VOID .)


state 35

    (23) SOLUTION_DEF -> SOL S_TYPE . store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK print_currentSymTab
    (8) store_type -> .

    ID              reduce using rule 8 (store_type -> .)

    store_type                     shift and go to state 42

state 36

    (29) S_TYPE -> TYPE .

    ID              reduce using rule 29 (S_TYPE -> TYPE .)


state 37

    (109) MAIN_DEFINITION -> INT . store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK TICK print_currentSymTab
    (8) store_type -> .

    MAIN_R          reduce using rule 8 (store_type -> .)

    store_type                     shift and go to state 43

state 38

    (1) program -> PROGRAM ID create_global_fun COLON VAR_BLOCK print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION .

    $end            reduce using rule 1 (program -> PROGRAM ID create_global_fun COLON VAR_BLOCK print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION .)


state 39

    (9) A -> ID check_var_duplicates B . D
    (16) D -> . COMMA A
    (17) D -> . empty
    (126) empty -> .

    COMMA           shift and go to state 45
    TICK            reduce using rule 126 (empty -> .)

    D                              shift and go to state 44
    empty                          shift and go to state 46

state 40

    (11) B -> EQUALS . C assign_var_value
    (14) C -> . EXPRESSION
    (15) C -> . LIST_EXP
    (36) EXPRESSION -> . EXP G
    (76) LIST_EXP -> . L_BRACK EXPRESSION P R_BRACK
    (47) EXP -> . TERM I
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_BRACK         shift and go to state 49
    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    LIST_EXP                       shift and go to state 47
    C                              shift and go to state 48
    M                              shift and go to state 50
    TERM                           shift and go to state 52
    EXP                            shift and go to state 54
    FACTOR                         shift and go to state 55
    EXPRESSION                     shift and go to state 56
    empty                          shift and go to state 58

state 41

    (12) B -> empty .

    COMMA           reduce using rule 12 (B -> empty .)
    TICK            reduce using rule 12 (B -> empty .)


state 42

    (23) SOLUTION_DEF -> SOL S_TYPE store_type . ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK print_currentSymTab

    ID              shift and go to state 59


state 43

    (109) MAIN_DEFINITION -> INT store_type . MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK TICK print_currentSymTab

    MAIN_R          shift and go to state 60


state 44

    (9) A -> ID check_var_duplicates B D .

    TICK            reduce using rule 9 (A -> ID check_var_duplicates B D .)


state 45

    (16) D -> COMMA . A
    (9) A -> . ID check_var_duplicates B D

    ID              shift and go to state 25

    A                              shift and go to state 61

state 46

    (17) D -> empty .

    TICK            reduce using rule 17 (D -> empty .)


state 47

    (15) C -> LIST_EXP .

    COMMA           reduce using rule 15 (C -> LIST_EXP .)
    TICK            reduce using rule 15 (C -> LIST_EXP .)


state 48

    (11) B -> EQUALS C . assign_var_value
    (13) assign_var_value -> .

    COMMA           reduce using rule 13 (assign_var_value -> .)
    TICK            reduce using rule 13 (assign_var_value -> .)

    assign_var_value               shift and go to state 62

state 49

    (76) LIST_EXP -> L_BRACK . EXPRESSION P R_BRACK
    (36) EXPRESSION -> . EXP G
    (47) EXP -> . TERM I
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    M                              shift and go to state 50
    EXP                            shift and go to state 54
    FACTOR                         shift and go to state 55
    EXPRESSION                     shift and go to state 63
    empty                          shift and go to state 58

state 50

    (58) FACTOR -> M . CON_VAR
    (62) CON_VAR -> . ID_REF
    (63) CON_VAR -> . INT_CONT
    (64) CON_VAR -> . STRING_CONT
    (65) CON_VAR -> . CHAR_CONT
    (66) CON_VAR -> . FLOAT_CONT
    (67) CON_VAR -> . BOOL_CONT
    (68) CON_VAR -> . SOLUTION_CALL
    (69) CON_VAR -> . PREDEFINED_SOLS
    (72) ID_REF -> . ID check_var_existence O
    (96) SOLUTION_CALL -> . ID L_PAREN V R_PAREN
    (118) PREDEFINED_SOLS -> . DRAW_LINE
    (119) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (120) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (121) PREDEFINED_SOLS -> . MOVE_UP
    (122) PREDEFINED_SOLS -> . MOVE_RIGHT
    (123) PREDEFINED_SOLS -> . MOVE_DOWN
    (124) PREDEFINED_SOLS -> . MOVE_LEFT
    (125) PREDEFINED_SOLS -> . PRINT
    (111) DRAW_LINE -> . DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
    (110) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
    (112) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
    (113) MOVE_UP -> . MOVE_UP_R L_PAREN EXPRESSION R_PAREN
    (114) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN
    (115) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN
    (116) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN
    (117) PRINT -> . PRINT_R L_PAREN EXPRESSION R_PAREN

    INT_CONT        shift and go to state 69
    STRING_CONT     shift and go to state 71
    CHAR_CONT       shift and go to state 78
    FLOAT_CONT      shift and go to state 84
    BOOL_CONT       shift and go to state 76
    ID              shift and go to state 82
    DRAW_LINE_R     shift and go to state 64
    DRAW_CIRCLE_R   shift and go to state 70
    DRAW_RECTANGLE_R shift and go to state 80
    MOVE_UP_R       shift and go to state 85
    MOVE_RIGHT_R    shift and go to state 88
    MOVE_DOWN_R     shift and go to state 65
    MOVE_LEFT_R     shift and go to state 67
    PRINT_R         shift and go to state 66

    MOVE_RIGHT                     shift and go to state 75
    MOVE_LEFT                      shift and go to state 72
    ID_REF                         shift and go to state 73
    SOLUTION_CALL                  shift and go to state 74
    PREDEFINED_SOLS                shift and go to state 86
    DRAW_RECTANGLE                 shift and go to state 79
    MOVE_DOWN                      shift and go to state 87
    DRAW_LINE                      shift and go to state 81
    PRINT                          shift and go to state 68
    CON_VAR                        shift and go to state 77
    MOVE_UP                        shift and go to state 83
    DRAW_CIRCLE                    shift and go to state 89

state 51

    (57) FACTOR -> L_PAREN . EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (47) EXP -> . TERM I
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    M                              shift and go to state 50
    EXP                            shift and go to state 54
    FACTOR                         shift and go to state 55
    EXPRESSION                     shift and go to state 90
    empty                          shift and go to state 58

state 52

    (47) EXP -> TERM . I
    (48) I -> . J EXP
    (49) I -> . empty
    (50) J -> . PLUS
    (51) J -> . MINUS
    (126) empty -> .

    PLUS            shift and go to state 93
    MINUS           shift and go to state 94
    LESS_T          reduce using rule 126 (empty -> .)
    GREATER_T       reduce using rule 126 (empty -> .)
    GREATER_T_EQUALS reduce using rule 126 (empty -> .)
    LESS_T_EQUALS   reduce using rule 126 (empty -> .)
    IS              reduce using rule 126 (empty -> .)
    AND             reduce using rule 126 (empty -> .)
    OR              reduce using rule 126 (empty -> .)
    PERCENTAGE      reduce using rule 126 (empty -> .)
    COMMA           reduce using rule 126 (empty -> .)
    TICK            reduce using rule 126 (empty -> .)
    R_BRACK         reduce using rule 126 (empty -> .)
    R_PAREN         reduce using rule 126 (empty -> .)
    COLON           reduce using rule 126 (empty -> .)

    I                              shift and go to state 91
    J                              shift and go to state 92
    empty                          shift and go to state 95

state 53

    (59) M -> PLUS .

    INT_CONT        reduce using rule 59 (M -> PLUS .)
    STRING_CONT     reduce using rule 59 (M -> PLUS .)
    CHAR_CONT       reduce using rule 59 (M -> PLUS .)
    FLOAT_CONT      reduce using rule 59 (M -> PLUS .)
    BOOL_CONT       reduce using rule 59 (M -> PLUS .)
    ID              reduce using rule 59 (M -> PLUS .)
    DRAW_LINE_R     reduce using rule 59 (M -> PLUS .)
    DRAW_CIRCLE_R   reduce using rule 59 (M -> PLUS .)
    DRAW_RECTANGLE_R reduce using rule 59 (M -> PLUS .)
    MOVE_UP_R       reduce using rule 59 (M -> PLUS .)
    MOVE_RIGHT_R    reduce using rule 59 (M -> PLUS .)
    MOVE_DOWN_R     reduce using rule 59 (M -> PLUS .)
    MOVE_LEFT_R     reduce using rule 59 (M -> PLUS .)
    PRINT_R         reduce using rule 59 (M -> PLUS .)


state 54

    (36) EXPRESSION -> EXP . G
    (37) G -> . H EXP
    (38) G -> . empty
    (39) H -> . LESS_T
    (40) H -> . GREATER_T
    (41) H -> . GREATER_T_EQUALS
    (42) H -> . LESS_T_EQUALS
    (43) H -> . IS
    (44) H -> . AND
    (45) H -> . OR
    (46) H -> . PERCENTAGE
    (126) empty -> .

    LESS_T          shift and go to state 100
    GREATER_T       shift and go to state 102
    GREATER_T_EQUALS shift and go to state 103
    LESS_T_EQUALS   shift and go to state 101
    IS              shift and go to state 99
    AND             shift and go to state 96
    OR              shift and go to state 105
    PERCENTAGE      shift and go to state 104
    COMMA           reduce using rule 126 (empty -> .)
    TICK            reduce using rule 126 (empty -> .)
    R_BRACK         reduce using rule 126 (empty -> .)
    R_PAREN         reduce using rule 126 (empty -> .)
    COLON           reduce using rule 126 (empty -> .)

    H                              shift and go to state 98
    empty                          shift and go to state 106
    G                              shift and go to state 97

state 55

    (52) TERM -> FACTOR . K
    (53) K -> . L TERM
    (54) K -> . empty
    (55) L -> . MULTIPLY
    (56) L -> . DIVIDE
    (126) empty -> .

    MULTIPLY        shift and go to state 110
    DIVIDE          shift and go to state 107
    PLUS            reduce using rule 126 (empty -> .)
    MINUS           reduce using rule 126 (empty -> .)
    LESS_T          reduce using rule 126 (empty -> .)
    GREATER_T       reduce using rule 126 (empty -> .)
    GREATER_T_EQUALS reduce using rule 126 (empty -> .)
    LESS_T_EQUALS   reduce using rule 126 (empty -> .)
    IS              reduce using rule 126 (empty -> .)
    AND             reduce using rule 126 (empty -> .)
    OR              reduce using rule 126 (empty -> .)
    PERCENTAGE      reduce using rule 126 (empty -> .)
    COMMA           reduce using rule 126 (empty -> .)
    TICK            reduce using rule 126 (empty -> .)
    R_BRACK         reduce using rule 126 (empty -> .)
    R_PAREN         reduce using rule 126 (empty -> .)
    COLON           reduce using rule 126 (empty -> .)

    K                              shift and go to state 108
    L                              shift and go to state 109
    empty                          shift and go to state 111

state 56

    (14) C -> EXPRESSION .

    COMMA           reduce using rule 14 (C -> EXPRESSION .)
    TICK            reduce using rule 14 (C -> EXPRESSION .)


state 57

    (60) M -> MINUS .

    INT_CONT        reduce using rule 60 (M -> MINUS .)
    STRING_CONT     reduce using rule 60 (M -> MINUS .)
    CHAR_CONT       reduce using rule 60 (M -> MINUS .)
    FLOAT_CONT      reduce using rule 60 (M -> MINUS .)
    BOOL_CONT       reduce using rule 60 (M -> MINUS .)
    ID              reduce using rule 60 (M -> MINUS .)
    DRAW_LINE_R     reduce using rule 60 (M -> MINUS .)
    DRAW_CIRCLE_R   reduce using rule 60 (M -> MINUS .)
    DRAW_RECTANGLE_R reduce using rule 60 (M -> MINUS .)
    MOVE_UP_R       reduce using rule 60 (M -> MINUS .)
    MOVE_RIGHT_R    reduce using rule 60 (M -> MINUS .)
    MOVE_DOWN_R     reduce using rule 60 (M -> MINUS .)
    MOVE_LEFT_R     reduce using rule 60 (M -> MINUS .)
    PRINT_R         reduce using rule 60 (M -> MINUS .)


state 58

    (61) M -> empty .

    INT_CONT        reduce using rule 61 (M -> empty .)
    STRING_CONT     reduce using rule 61 (M -> empty .)
    CHAR_CONT       reduce using rule 61 (M -> empty .)
    FLOAT_CONT      reduce using rule 61 (M -> empty .)
    BOOL_CONT       reduce using rule 61 (M -> empty .)
    ID              reduce using rule 61 (M -> empty .)
    DRAW_LINE_R     reduce using rule 61 (M -> empty .)
    DRAW_CIRCLE_R   reduce using rule 61 (M -> empty .)
    DRAW_RECTANGLE_R reduce using rule 61 (M -> empty .)
    MOVE_UP_R       reduce using rule 61 (M -> empty .)
    MOVE_RIGHT_R    reduce using rule 61 (M -> empty .)
    MOVE_DOWN_R     reduce using rule 61 (M -> empty .)
    MOVE_LEFT_R     reduce using rule 61 (M -> empty .)
    PRINT_R         reduce using rule 61 (M -> empty .)


state 59

    (23) SOLUTION_DEF -> SOL S_TYPE store_type ID . check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK print_currentSymTab
    (24) check_sol_duplicates -> .

    L_PAREN         reduce using rule 24 (check_sol_duplicates -> .)

    check_sol_duplicates           shift and go to state 112

state 60

    (109) MAIN_DEFINITION -> INT store_type MAIN_R . check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK TICK print_currentSymTab
    (24) check_sol_duplicates -> .

    L_PAREN         reduce using rule 24 (check_sol_duplicates -> .)

    check_sol_duplicates           shift and go to state 113

state 61

    (16) D -> COMMA A .

    TICK            reduce using rule 16 (D -> COMMA A .)


state 62

    (11) B -> EQUALS C assign_var_value .

    COMMA           reduce using rule 11 (B -> EQUALS C assign_var_value .)
    TICK            reduce using rule 11 (B -> EQUALS C assign_var_value .)


state 63

    (76) LIST_EXP -> L_BRACK EXPRESSION . P R_BRACK
    (77) P -> . COMMA EXPRESSION P
    (78) P -> . empty
    (126) empty -> .

    COMMA           shift and go to state 115
    R_BRACK         reduce using rule 126 (empty -> .)

    P                              shift and go to state 114
    empty                          shift and go to state 116

state 64

    (111) DRAW_LINE -> DRAW_LINE_R . L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN

    L_PAREN         shift and go to state 117


state 65

    (115) MOVE_DOWN -> MOVE_DOWN_R . L_PAREN EXPRESSION R_PAREN

    L_PAREN         shift and go to state 118


state 66

    (117) PRINT -> PRINT_R . L_PAREN EXPRESSION R_PAREN

    L_PAREN         shift and go to state 119


state 67

    (116) MOVE_LEFT -> MOVE_LEFT_R . L_PAREN EXPRESSION R_PAREN

    L_PAREN         shift and go to state 120


state 68

    (125) PREDEFINED_SOLS -> PRINT .

    MULTIPLY        reduce using rule 125 (PREDEFINED_SOLS -> PRINT .)
    DIVIDE          reduce using rule 125 (PREDEFINED_SOLS -> PRINT .)
    PLUS            reduce using rule 125 (PREDEFINED_SOLS -> PRINT .)
    MINUS           reduce using rule 125 (PREDEFINED_SOLS -> PRINT .)
    LESS_T          reduce using rule 125 (PREDEFINED_SOLS -> PRINT .)
    GREATER_T       reduce using rule 125 (PREDEFINED_SOLS -> PRINT .)
    GREATER_T_EQUALS reduce using rule 125 (PREDEFINED_SOLS -> PRINT .)
    LESS_T_EQUALS   reduce using rule 125 (PREDEFINED_SOLS -> PRINT .)
    IS              reduce using rule 125 (PREDEFINED_SOLS -> PRINT .)
    AND             reduce using rule 125 (PREDEFINED_SOLS -> PRINT .)
    OR              reduce using rule 125 (PREDEFINED_SOLS -> PRINT .)
    PERCENTAGE      reduce using rule 125 (PREDEFINED_SOLS -> PRINT .)
    COMMA           reduce using rule 125 (PREDEFINED_SOLS -> PRINT .)
    TICK            reduce using rule 125 (PREDEFINED_SOLS -> PRINT .)
    R_BRACK         reduce using rule 125 (PREDEFINED_SOLS -> PRINT .)
    R_PAREN         reduce using rule 125 (PREDEFINED_SOLS -> PRINT .)
    COLON           reduce using rule 125 (PREDEFINED_SOLS -> PRINT .)


state 69

    (63) CON_VAR -> INT_CONT .

    MULTIPLY        reduce using rule 63 (CON_VAR -> INT_CONT .)
    DIVIDE          reduce using rule 63 (CON_VAR -> INT_CONT .)
    PLUS            reduce using rule 63 (CON_VAR -> INT_CONT .)
    MINUS           reduce using rule 63 (CON_VAR -> INT_CONT .)
    LESS_T          reduce using rule 63 (CON_VAR -> INT_CONT .)
    GREATER_T       reduce using rule 63 (CON_VAR -> INT_CONT .)
    GREATER_T_EQUALS reduce using rule 63 (CON_VAR -> INT_CONT .)
    LESS_T_EQUALS   reduce using rule 63 (CON_VAR -> INT_CONT .)
    IS              reduce using rule 63 (CON_VAR -> INT_CONT .)
    AND             reduce using rule 63 (CON_VAR -> INT_CONT .)
    OR              reduce using rule 63 (CON_VAR -> INT_CONT .)
    PERCENTAGE      reduce using rule 63 (CON_VAR -> INT_CONT .)
    COMMA           reduce using rule 63 (CON_VAR -> INT_CONT .)
    TICK            reduce using rule 63 (CON_VAR -> INT_CONT .)
    R_BRACK         reduce using rule 63 (CON_VAR -> INT_CONT .)
    R_PAREN         reduce using rule 63 (CON_VAR -> INT_CONT .)
    COLON           reduce using rule 63 (CON_VAR -> INT_CONT .)


state 70

    (110) DRAW_CIRCLE -> DRAW_CIRCLE_R . L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN

    L_PAREN         shift and go to state 121


state 71

    (64) CON_VAR -> STRING_CONT .

    MULTIPLY        reduce using rule 64 (CON_VAR -> STRING_CONT .)
    DIVIDE          reduce using rule 64 (CON_VAR -> STRING_CONT .)
    PLUS            reduce using rule 64 (CON_VAR -> STRING_CONT .)
    MINUS           reduce using rule 64 (CON_VAR -> STRING_CONT .)
    LESS_T          reduce using rule 64 (CON_VAR -> STRING_CONT .)
    GREATER_T       reduce using rule 64 (CON_VAR -> STRING_CONT .)
    GREATER_T_EQUALS reduce using rule 64 (CON_VAR -> STRING_CONT .)
    LESS_T_EQUALS   reduce using rule 64 (CON_VAR -> STRING_CONT .)
    IS              reduce using rule 64 (CON_VAR -> STRING_CONT .)
    AND             reduce using rule 64 (CON_VAR -> STRING_CONT .)
    OR              reduce using rule 64 (CON_VAR -> STRING_CONT .)
    PERCENTAGE      reduce using rule 64 (CON_VAR -> STRING_CONT .)
    COMMA           reduce using rule 64 (CON_VAR -> STRING_CONT .)
    TICK            reduce using rule 64 (CON_VAR -> STRING_CONT .)
    R_BRACK         reduce using rule 64 (CON_VAR -> STRING_CONT .)
    R_PAREN         reduce using rule 64 (CON_VAR -> STRING_CONT .)
    COLON           reduce using rule 64 (CON_VAR -> STRING_CONT .)


state 72

    (124) PREDEFINED_SOLS -> MOVE_LEFT .

    MULTIPLY        reduce using rule 124 (PREDEFINED_SOLS -> MOVE_LEFT .)
    DIVIDE          reduce using rule 124 (PREDEFINED_SOLS -> MOVE_LEFT .)
    PLUS            reduce using rule 124 (PREDEFINED_SOLS -> MOVE_LEFT .)
    MINUS           reduce using rule 124 (PREDEFINED_SOLS -> MOVE_LEFT .)
    LESS_T          reduce using rule 124 (PREDEFINED_SOLS -> MOVE_LEFT .)
    GREATER_T       reduce using rule 124 (PREDEFINED_SOLS -> MOVE_LEFT .)
    GREATER_T_EQUALS reduce using rule 124 (PREDEFINED_SOLS -> MOVE_LEFT .)
    LESS_T_EQUALS   reduce using rule 124 (PREDEFINED_SOLS -> MOVE_LEFT .)
    IS              reduce using rule 124 (PREDEFINED_SOLS -> MOVE_LEFT .)
    AND             reduce using rule 124 (PREDEFINED_SOLS -> MOVE_LEFT .)
    OR              reduce using rule 124 (PREDEFINED_SOLS -> MOVE_LEFT .)
    PERCENTAGE      reduce using rule 124 (PREDEFINED_SOLS -> MOVE_LEFT .)
    COMMA           reduce using rule 124 (PREDEFINED_SOLS -> MOVE_LEFT .)
    TICK            reduce using rule 124 (PREDEFINED_SOLS -> MOVE_LEFT .)
    R_BRACK         reduce using rule 124 (PREDEFINED_SOLS -> MOVE_LEFT .)
    R_PAREN         reduce using rule 124 (PREDEFINED_SOLS -> MOVE_LEFT .)
    COLON           reduce using rule 124 (PREDEFINED_SOLS -> MOVE_LEFT .)


state 73

    (62) CON_VAR -> ID_REF .

    MULTIPLY        reduce using rule 62 (CON_VAR -> ID_REF .)
    DIVIDE          reduce using rule 62 (CON_VAR -> ID_REF .)
    PLUS            reduce using rule 62 (CON_VAR -> ID_REF .)
    MINUS           reduce using rule 62 (CON_VAR -> ID_REF .)
    LESS_T          reduce using rule 62 (CON_VAR -> ID_REF .)
    GREATER_T       reduce using rule 62 (CON_VAR -> ID_REF .)
    GREATER_T_EQUALS reduce using rule 62 (CON_VAR -> ID_REF .)
    LESS_T_EQUALS   reduce using rule 62 (CON_VAR -> ID_REF .)
    IS              reduce using rule 62 (CON_VAR -> ID_REF .)
    AND             reduce using rule 62 (CON_VAR -> ID_REF .)
    OR              reduce using rule 62 (CON_VAR -> ID_REF .)
    PERCENTAGE      reduce using rule 62 (CON_VAR -> ID_REF .)
    COMMA           reduce using rule 62 (CON_VAR -> ID_REF .)
    TICK            reduce using rule 62 (CON_VAR -> ID_REF .)
    R_BRACK         reduce using rule 62 (CON_VAR -> ID_REF .)
    R_PAREN         reduce using rule 62 (CON_VAR -> ID_REF .)
    COLON           reduce using rule 62 (CON_VAR -> ID_REF .)


state 74

    (68) CON_VAR -> SOLUTION_CALL .

    MULTIPLY        reduce using rule 68 (CON_VAR -> SOLUTION_CALL .)
    DIVIDE          reduce using rule 68 (CON_VAR -> SOLUTION_CALL .)
    PLUS            reduce using rule 68 (CON_VAR -> SOLUTION_CALL .)
    MINUS           reduce using rule 68 (CON_VAR -> SOLUTION_CALL .)
    LESS_T          reduce using rule 68 (CON_VAR -> SOLUTION_CALL .)
    GREATER_T       reduce using rule 68 (CON_VAR -> SOLUTION_CALL .)
    GREATER_T_EQUALS reduce using rule 68 (CON_VAR -> SOLUTION_CALL .)
    LESS_T_EQUALS   reduce using rule 68 (CON_VAR -> SOLUTION_CALL .)
    IS              reduce using rule 68 (CON_VAR -> SOLUTION_CALL .)
    AND             reduce using rule 68 (CON_VAR -> SOLUTION_CALL .)
    OR              reduce using rule 68 (CON_VAR -> SOLUTION_CALL .)
    PERCENTAGE      reduce using rule 68 (CON_VAR -> SOLUTION_CALL .)
    COMMA           reduce using rule 68 (CON_VAR -> SOLUTION_CALL .)
    TICK            reduce using rule 68 (CON_VAR -> SOLUTION_CALL .)
    R_BRACK         reduce using rule 68 (CON_VAR -> SOLUTION_CALL .)
    R_PAREN         reduce using rule 68 (CON_VAR -> SOLUTION_CALL .)
    COLON           reduce using rule 68 (CON_VAR -> SOLUTION_CALL .)


state 75

    (122) PREDEFINED_SOLS -> MOVE_RIGHT .

    MULTIPLY        reduce using rule 122 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    DIVIDE          reduce using rule 122 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    PLUS            reduce using rule 122 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    MINUS           reduce using rule 122 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    LESS_T          reduce using rule 122 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    GREATER_T       reduce using rule 122 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    GREATER_T_EQUALS reduce using rule 122 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    LESS_T_EQUALS   reduce using rule 122 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    IS              reduce using rule 122 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    AND             reduce using rule 122 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    OR              reduce using rule 122 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    PERCENTAGE      reduce using rule 122 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    COMMA           reduce using rule 122 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    TICK            reduce using rule 122 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    R_BRACK         reduce using rule 122 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    R_PAREN         reduce using rule 122 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    COLON           reduce using rule 122 (PREDEFINED_SOLS -> MOVE_RIGHT .)


state 76

    (67) CON_VAR -> BOOL_CONT .

    MULTIPLY        reduce using rule 67 (CON_VAR -> BOOL_CONT .)
    DIVIDE          reduce using rule 67 (CON_VAR -> BOOL_CONT .)
    PLUS            reduce using rule 67 (CON_VAR -> BOOL_CONT .)
    MINUS           reduce using rule 67 (CON_VAR -> BOOL_CONT .)
    LESS_T          reduce using rule 67 (CON_VAR -> BOOL_CONT .)
    GREATER_T       reduce using rule 67 (CON_VAR -> BOOL_CONT .)
    GREATER_T_EQUALS reduce using rule 67 (CON_VAR -> BOOL_CONT .)
    LESS_T_EQUALS   reduce using rule 67 (CON_VAR -> BOOL_CONT .)
    IS              reduce using rule 67 (CON_VAR -> BOOL_CONT .)
    AND             reduce using rule 67 (CON_VAR -> BOOL_CONT .)
    OR              reduce using rule 67 (CON_VAR -> BOOL_CONT .)
    PERCENTAGE      reduce using rule 67 (CON_VAR -> BOOL_CONT .)
    COMMA           reduce using rule 67 (CON_VAR -> BOOL_CONT .)
    TICK            reduce using rule 67 (CON_VAR -> BOOL_CONT .)
    R_BRACK         reduce using rule 67 (CON_VAR -> BOOL_CONT .)
    R_PAREN         reduce using rule 67 (CON_VAR -> BOOL_CONT .)
    COLON           reduce using rule 67 (CON_VAR -> BOOL_CONT .)


state 77

    (58) FACTOR -> M CON_VAR .

    MULTIPLY        reduce using rule 58 (FACTOR -> M CON_VAR .)
    DIVIDE          reduce using rule 58 (FACTOR -> M CON_VAR .)
    PLUS            reduce using rule 58 (FACTOR -> M CON_VAR .)
    MINUS           reduce using rule 58 (FACTOR -> M CON_VAR .)
    LESS_T          reduce using rule 58 (FACTOR -> M CON_VAR .)
    GREATER_T       reduce using rule 58 (FACTOR -> M CON_VAR .)
    GREATER_T_EQUALS reduce using rule 58 (FACTOR -> M CON_VAR .)
    LESS_T_EQUALS   reduce using rule 58 (FACTOR -> M CON_VAR .)
    IS              reduce using rule 58 (FACTOR -> M CON_VAR .)
    AND             reduce using rule 58 (FACTOR -> M CON_VAR .)
    OR              reduce using rule 58 (FACTOR -> M CON_VAR .)
    PERCENTAGE      reduce using rule 58 (FACTOR -> M CON_VAR .)
    COMMA           reduce using rule 58 (FACTOR -> M CON_VAR .)
    R_PAREN         reduce using rule 58 (FACTOR -> M CON_VAR .)
    COLON           reduce using rule 58 (FACTOR -> M CON_VAR .)
    R_BRACK         reduce using rule 58 (FACTOR -> M CON_VAR .)
    TICK            reduce using rule 58 (FACTOR -> M CON_VAR .)


state 78

    (65) CON_VAR -> CHAR_CONT .

    MULTIPLY        reduce using rule 65 (CON_VAR -> CHAR_CONT .)
    DIVIDE          reduce using rule 65 (CON_VAR -> CHAR_CONT .)
    PLUS            reduce using rule 65 (CON_VAR -> CHAR_CONT .)
    MINUS           reduce using rule 65 (CON_VAR -> CHAR_CONT .)
    LESS_T          reduce using rule 65 (CON_VAR -> CHAR_CONT .)
    GREATER_T       reduce using rule 65 (CON_VAR -> CHAR_CONT .)
    GREATER_T_EQUALS reduce using rule 65 (CON_VAR -> CHAR_CONT .)
    LESS_T_EQUALS   reduce using rule 65 (CON_VAR -> CHAR_CONT .)
    IS              reduce using rule 65 (CON_VAR -> CHAR_CONT .)
    AND             reduce using rule 65 (CON_VAR -> CHAR_CONT .)
    OR              reduce using rule 65 (CON_VAR -> CHAR_CONT .)
    PERCENTAGE      reduce using rule 65 (CON_VAR -> CHAR_CONT .)
    COMMA           reduce using rule 65 (CON_VAR -> CHAR_CONT .)
    TICK            reduce using rule 65 (CON_VAR -> CHAR_CONT .)
    R_BRACK         reduce using rule 65 (CON_VAR -> CHAR_CONT .)
    R_PAREN         reduce using rule 65 (CON_VAR -> CHAR_CONT .)
    COLON           reduce using rule 65 (CON_VAR -> CHAR_CONT .)


state 79

    (120) PREDEFINED_SOLS -> DRAW_RECTANGLE .

    MULTIPLY        reduce using rule 120 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    DIVIDE          reduce using rule 120 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    PLUS            reduce using rule 120 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    MINUS           reduce using rule 120 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    LESS_T          reduce using rule 120 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    GREATER_T       reduce using rule 120 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    GREATER_T_EQUALS reduce using rule 120 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    LESS_T_EQUALS   reduce using rule 120 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    IS              reduce using rule 120 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    AND             reduce using rule 120 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    OR              reduce using rule 120 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    PERCENTAGE      reduce using rule 120 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    COMMA           reduce using rule 120 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    TICK            reduce using rule 120 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    R_BRACK         reduce using rule 120 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    R_PAREN         reduce using rule 120 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    COLON           reduce using rule 120 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)


state 80

    (112) DRAW_RECTANGLE -> DRAW_RECTANGLE_R . L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN

    L_PAREN         shift and go to state 122


state 81

    (118) PREDEFINED_SOLS -> DRAW_LINE .

    MULTIPLY        reduce using rule 118 (PREDEFINED_SOLS -> DRAW_LINE .)
    DIVIDE          reduce using rule 118 (PREDEFINED_SOLS -> DRAW_LINE .)
    PLUS            reduce using rule 118 (PREDEFINED_SOLS -> DRAW_LINE .)
    MINUS           reduce using rule 118 (PREDEFINED_SOLS -> DRAW_LINE .)
    LESS_T          reduce using rule 118 (PREDEFINED_SOLS -> DRAW_LINE .)
    GREATER_T       reduce using rule 118 (PREDEFINED_SOLS -> DRAW_LINE .)
    GREATER_T_EQUALS reduce using rule 118 (PREDEFINED_SOLS -> DRAW_LINE .)
    LESS_T_EQUALS   reduce using rule 118 (PREDEFINED_SOLS -> DRAW_LINE .)
    IS              reduce using rule 118 (PREDEFINED_SOLS -> DRAW_LINE .)
    AND             reduce using rule 118 (PREDEFINED_SOLS -> DRAW_LINE .)
    OR              reduce using rule 118 (PREDEFINED_SOLS -> DRAW_LINE .)
    PERCENTAGE      reduce using rule 118 (PREDEFINED_SOLS -> DRAW_LINE .)
    COMMA           reduce using rule 118 (PREDEFINED_SOLS -> DRAW_LINE .)
    TICK            reduce using rule 118 (PREDEFINED_SOLS -> DRAW_LINE .)
    R_BRACK         reduce using rule 118 (PREDEFINED_SOLS -> DRAW_LINE .)
    R_PAREN         reduce using rule 118 (PREDEFINED_SOLS -> DRAW_LINE .)
    COLON           reduce using rule 118 (PREDEFINED_SOLS -> DRAW_LINE .)


state 82

    (72) ID_REF -> ID . check_var_existence O
    (96) SOLUTION_CALL -> ID . L_PAREN V R_PAREN
    (73) check_var_existence -> .

    L_PAREN         shift and go to state 123
    L_BRACK         reduce using rule 73 (check_var_existence -> .)
    MULTIPLY        reduce using rule 73 (check_var_existence -> .)
    DIVIDE          reduce using rule 73 (check_var_existence -> .)
    PLUS            reduce using rule 73 (check_var_existence -> .)
    MINUS           reduce using rule 73 (check_var_existence -> .)
    LESS_T          reduce using rule 73 (check_var_existence -> .)
    GREATER_T       reduce using rule 73 (check_var_existence -> .)
    GREATER_T_EQUALS reduce using rule 73 (check_var_existence -> .)
    LESS_T_EQUALS   reduce using rule 73 (check_var_existence -> .)
    IS              reduce using rule 73 (check_var_existence -> .)
    AND             reduce using rule 73 (check_var_existence -> .)
    OR              reduce using rule 73 (check_var_existence -> .)
    PERCENTAGE      reduce using rule 73 (check_var_existence -> .)
    COMMA           reduce using rule 73 (check_var_existence -> .)
    TICK            reduce using rule 73 (check_var_existence -> .)
    R_BRACK         reduce using rule 73 (check_var_existence -> .)
    R_PAREN         reduce using rule 73 (check_var_existence -> .)
    COLON           reduce using rule 73 (check_var_existence -> .)

    check_var_existence            shift and go to state 124

state 83

    (121) PREDEFINED_SOLS -> MOVE_UP .

    MULTIPLY        reduce using rule 121 (PREDEFINED_SOLS -> MOVE_UP .)
    DIVIDE          reduce using rule 121 (PREDEFINED_SOLS -> MOVE_UP .)
    PLUS            reduce using rule 121 (PREDEFINED_SOLS -> MOVE_UP .)
    MINUS           reduce using rule 121 (PREDEFINED_SOLS -> MOVE_UP .)
    LESS_T          reduce using rule 121 (PREDEFINED_SOLS -> MOVE_UP .)
    GREATER_T       reduce using rule 121 (PREDEFINED_SOLS -> MOVE_UP .)
    GREATER_T_EQUALS reduce using rule 121 (PREDEFINED_SOLS -> MOVE_UP .)
    LESS_T_EQUALS   reduce using rule 121 (PREDEFINED_SOLS -> MOVE_UP .)
    IS              reduce using rule 121 (PREDEFINED_SOLS -> MOVE_UP .)
    AND             reduce using rule 121 (PREDEFINED_SOLS -> MOVE_UP .)
    OR              reduce using rule 121 (PREDEFINED_SOLS -> MOVE_UP .)
    PERCENTAGE      reduce using rule 121 (PREDEFINED_SOLS -> MOVE_UP .)
    COMMA           reduce using rule 121 (PREDEFINED_SOLS -> MOVE_UP .)
    TICK            reduce using rule 121 (PREDEFINED_SOLS -> MOVE_UP .)
    R_BRACK         reduce using rule 121 (PREDEFINED_SOLS -> MOVE_UP .)
    R_PAREN         reduce using rule 121 (PREDEFINED_SOLS -> MOVE_UP .)
    COLON           reduce using rule 121 (PREDEFINED_SOLS -> MOVE_UP .)


state 84

    (66) CON_VAR -> FLOAT_CONT .

    MULTIPLY        reduce using rule 66 (CON_VAR -> FLOAT_CONT .)
    DIVIDE          reduce using rule 66 (CON_VAR -> FLOAT_CONT .)
    PLUS            reduce using rule 66 (CON_VAR -> FLOAT_CONT .)
    MINUS           reduce using rule 66 (CON_VAR -> FLOAT_CONT .)
    LESS_T          reduce using rule 66 (CON_VAR -> FLOAT_CONT .)
    GREATER_T       reduce using rule 66 (CON_VAR -> FLOAT_CONT .)
    GREATER_T_EQUALS reduce using rule 66 (CON_VAR -> FLOAT_CONT .)
    LESS_T_EQUALS   reduce using rule 66 (CON_VAR -> FLOAT_CONT .)
    IS              reduce using rule 66 (CON_VAR -> FLOAT_CONT .)
    AND             reduce using rule 66 (CON_VAR -> FLOAT_CONT .)
    OR              reduce using rule 66 (CON_VAR -> FLOAT_CONT .)
    PERCENTAGE      reduce using rule 66 (CON_VAR -> FLOAT_CONT .)
    COMMA           reduce using rule 66 (CON_VAR -> FLOAT_CONT .)
    TICK            reduce using rule 66 (CON_VAR -> FLOAT_CONT .)
    R_BRACK         reduce using rule 66 (CON_VAR -> FLOAT_CONT .)
    R_PAREN         reduce using rule 66 (CON_VAR -> FLOAT_CONT .)
    COLON           reduce using rule 66 (CON_VAR -> FLOAT_CONT .)


state 85

    (113) MOVE_UP -> MOVE_UP_R . L_PAREN EXPRESSION R_PAREN

    L_PAREN         shift and go to state 125


state 86

    (69) CON_VAR -> PREDEFINED_SOLS .

    MULTIPLY        reduce using rule 69 (CON_VAR -> PREDEFINED_SOLS .)
    DIVIDE          reduce using rule 69 (CON_VAR -> PREDEFINED_SOLS .)
    PLUS            reduce using rule 69 (CON_VAR -> PREDEFINED_SOLS .)
    MINUS           reduce using rule 69 (CON_VAR -> PREDEFINED_SOLS .)
    LESS_T          reduce using rule 69 (CON_VAR -> PREDEFINED_SOLS .)
    GREATER_T       reduce using rule 69 (CON_VAR -> PREDEFINED_SOLS .)
    GREATER_T_EQUALS reduce using rule 69 (CON_VAR -> PREDEFINED_SOLS .)
    LESS_T_EQUALS   reduce using rule 69 (CON_VAR -> PREDEFINED_SOLS .)
    IS              reduce using rule 69 (CON_VAR -> PREDEFINED_SOLS .)
    AND             reduce using rule 69 (CON_VAR -> PREDEFINED_SOLS .)
    OR              reduce using rule 69 (CON_VAR -> PREDEFINED_SOLS .)
    PERCENTAGE      reduce using rule 69 (CON_VAR -> PREDEFINED_SOLS .)
    COMMA           reduce using rule 69 (CON_VAR -> PREDEFINED_SOLS .)
    TICK            reduce using rule 69 (CON_VAR -> PREDEFINED_SOLS .)
    R_BRACK         reduce using rule 69 (CON_VAR -> PREDEFINED_SOLS .)
    R_PAREN         reduce using rule 69 (CON_VAR -> PREDEFINED_SOLS .)
    COLON           reduce using rule 69 (CON_VAR -> PREDEFINED_SOLS .)


state 87

    (123) PREDEFINED_SOLS -> MOVE_DOWN .

    MULTIPLY        reduce using rule 123 (PREDEFINED_SOLS -> MOVE_DOWN .)
    DIVIDE          reduce using rule 123 (PREDEFINED_SOLS -> MOVE_DOWN .)
    PLUS            reduce using rule 123 (PREDEFINED_SOLS -> MOVE_DOWN .)
    MINUS           reduce using rule 123 (PREDEFINED_SOLS -> MOVE_DOWN .)
    LESS_T          reduce using rule 123 (PREDEFINED_SOLS -> MOVE_DOWN .)
    GREATER_T       reduce using rule 123 (PREDEFINED_SOLS -> MOVE_DOWN .)
    GREATER_T_EQUALS reduce using rule 123 (PREDEFINED_SOLS -> MOVE_DOWN .)
    LESS_T_EQUALS   reduce using rule 123 (PREDEFINED_SOLS -> MOVE_DOWN .)
    IS              reduce using rule 123 (PREDEFINED_SOLS -> MOVE_DOWN .)
    AND             reduce using rule 123 (PREDEFINED_SOLS -> MOVE_DOWN .)
    OR              reduce using rule 123 (PREDEFINED_SOLS -> MOVE_DOWN .)
    PERCENTAGE      reduce using rule 123 (PREDEFINED_SOLS -> MOVE_DOWN .)
    COMMA           reduce using rule 123 (PREDEFINED_SOLS -> MOVE_DOWN .)
    TICK            reduce using rule 123 (PREDEFINED_SOLS -> MOVE_DOWN .)
    R_BRACK         reduce using rule 123 (PREDEFINED_SOLS -> MOVE_DOWN .)
    R_PAREN         reduce using rule 123 (PREDEFINED_SOLS -> MOVE_DOWN .)
    COLON           reduce using rule 123 (PREDEFINED_SOLS -> MOVE_DOWN .)


state 88

    (114) MOVE_RIGHT -> MOVE_RIGHT_R . L_PAREN EXPRESSION R_PAREN

    L_PAREN         shift and go to state 126


state 89

    (119) PREDEFINED_SOLS -> DRAW_CIRCLE .

    MULTIPLY        reduce using rule 119 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    DIVIDE          reduce using rule 119 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    PLUS            reduce using rule 119 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    MINUS           reduce using rule 119 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    LESS_T          reduce using rule 119 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    GREATER_T       reduce using rule 119 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    GREATER_T_EQUALS reduce using rule 119 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    LESS_T_EQUALS   reduce using rule 119 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    IS              reduce using rule 119 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    AND             reduce using rule 119 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    OR              reduce using rule 119 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    PERCENTAGE      reduce using rule 119 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    COMMA           reduce using rule 119 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    TICK            reduce using rule 119 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    R_BRACK         reduce using rule 119 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    R_PAREN         reduce using rule 119 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    COLON           reduce using rule 119 (PREDEFINED_SOLS -> DRAW_CIRCLE .)


state 90

    (57) FACTOR -> L_PAREN EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 127


state 91

    (47) EXP -> TERM I .

    LESS_T          reduce using rule 47 (EXP -> TERM I .)
    GREATER_T       reduce using rule 47 (EXP -> TERM I .)
    GREATER_T_EQUALS reduce using rule 47 (EXP -> TERM I .)
    LESS_T_EQUALS   reduce using rule 47 (EXP -> TERM I .)
    IS              reduce using rule 47 (EXP -> TERM I .)
    AND             reduce using rule 47 (EXP -> TERM I .)
    OR              reduce using rule 47 (EXP -> TERM I .)
    PERCENTAGE      reduce using rule 47 (EXP -> TERM I .)
    COMMA           reduce using rule 47 (EXP -> TERM I .)
    TICK            reduce using rule 47 (EXP -> TERM I .)
    COLON           reduce using rule 47 (EXP -> TERM I .)
    R_PAREN         reduce using rule 47 (EXP -> TERM I .)
    R_BRACK         reduce using rule 47 (EXP -> TERM I .)


state 92

    (48) I -> J . EXP
    (47) EXP -> . TERM I
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    M                              shift and go to state 50
    EXP                            shift and go to state 128
    FACTOR                         shift and go to state 55
    empty                          shift and go to state 58

state 93

    (50) J -> PLUS .

    L_PAREN         reduce using rule 50 (J -> PLUS .)
    PLUS            reduce using rule 50 (J -> PLUS .)
    MINUS           reduce using rule 50 (J -> PLUS .)
    INT_CONT        reduce using rule 50 (J -> PLUS .)
    STRING_CONT     reduce using rule 50 (J -> PLUS .)
    CHAR_CONT       reduce using rule 50 (J -> PLUS .)
    FLOAT_CONT      reduce using rule 50 (J -> PLUS .)
    BOOL_CONT       reduce using rule 50 (J -> PLUS .)
    ID              reduce using rule 50 (J -> PLUS .)
    DRAW_LINE_R     reduce using rule 50 (J -> PLUS .)
    DRAW_CIRCLE_R   reduce using rule 50 (J -> PLUS .)
    DRAW_RECTANGLE_R reduce using rule 50 (J -> PLUS .)
    MOVE_UP_R       reduce using rule 50 (J -> PLUS .)
    MOVE_RIGHT_R    reduce using rule 50 (J -> PLUS .)
    MOVE_DOWN_R     reduce using rule 50 (J -> PLUS .)
    MOVE_LEFT_R     reduce using rule 50 (J -> PLUS .)
    PRINT_R         reduce using rule 50 (J -> PLUS .)


state 94

    (51) J -> MINUS .

    L_PAREN         reduce using rule 51 (J -> MINUS .)
    PLUS            reduce using rule 51 (J -> MINUS .)
    MINUS           reduce using rule 51 (J -> MINUS .)
    INT_CONT        reduce using rule 51 (J -> MINUS .)
    STRING_CONT     reduce using rule 51 (J -> MINUS .)
    CHAR_CONT       reduce using rule 51 (J -> MINUS .)
    FLOAT_CONT      reduce using rule 51 (J -> MINUS .)
    BOOL_CONT       reduce using rule 51 (J -> MINUS .)
    ID              reduce using rule 51 (J -> MINUS .)
    DRAW_LINE_R     reduce using rule 51 (J -> MINUS .)
    DRAW_CIRCLE_R   reduce using rule 51 (J -> MINUS .)
    DRAW_RECTANGLE_R reduce using rule 51 (J -> MINUS .)
    MOVE_UP_R       reduce using rule 51 (J -> MINUS .)
    MOVE_RIGHT_R    reduce using rule 51 (J -> MINUS .)
    MOVE_DOWN_R     reduce using rule 51 (J -> MINUS .)
    MOVE_LEFT_R     reduce using rule 51 (J -> MINUS .)
    PRINT_R         reduce using rule 51 (J -> MINUS .)


state 95

    (49) I -> empty .

    LESS_T          reduce using rule 49 (I -> empty .)
    GREATER_T       reduce using rule 49 (I -> empty .)
    GREATER_T_EQUALS reduce using rule 49 (I -> empty .)
    LESS_T_EQUALS   reduce using rule 49 (I -> empty .)
    IS              reduce using rule 49 (I -> empty .)
    AND             reduce using rule 49 (I -> empty .)
    OR              reduce using rule 49 (I -> empty .)
    PERCENTAGE      reduce using rule 49 (I -> empty .)
    COMMA           reduce using rule 49 (I -> empty .)
    TICK            reduce using rule 49 (I -> empty .)
    R_BRACK         reduce using rule 49 (I -> empty .)
    R_PAREN         reduce using rule 49 (I -> empty .)
    COLON           reduce using rule 49 (I -> empty .)


state 96

    (44) H -> AND .

    L_PAREN         reduce using rule 44 (H -> AND .)
    PLUS            reduce using rule 44 (H -> AND .)
    MINUS           reduce using rule 44 (H -> AND .)
    INT_CONT        reduce using rule 44 (H -> AND .)
    STRING_CONT     reduce using rule 44 (H -> AND .)
    CHAR_CONT       reduce using rule 44 (H -> AND .)
    FLOAT_CONT      reduce using rule 44 (H -> AND .)
    BOOL_CONT       reduce using rule 44 (H -> AND .)
    ID              reduce using rule 44 (H -> AND .)
    DRAW_LINE_R     reduce using rule 44 (H -> AND .)
    DRAW_CIRCLE_R   reduce using rule 44 (H -> AND .)
    DRAW_RECTANGLE_R reduce using rule 44 (H -> AND .)
    MOVE_UP_R       reduce using rule 44 (H -> AND .)
    MOVE_RIGHT_R    reduce using rule 44 (H -> AND .)
    MOVE_DOWN_R     reduce using rule 44 (H -> AND .)
    MOVE_LEFT_R     reduce using rule 44 (H -> AND .)
    PRINT_R         reduce using rule 44 (H -> AND .)


state 97

    (36) EXPRESSION -> EXP G .

    COMMA           reduce using rule 36 (EXPRESSION -> EXP G .)
    R_PAREN         reduce using rule 36 (EXPRESSION -> EXP G .)
    COLON           reduce using rule 36 (EXPRESSION -> EXP G .)
    TICK            reduce using rule 36 (EXPRESSION -> EXP G .)
    R_BRACK         reduce using rule 36 (EXPRESSION -> EXP G .)


state 98

    (37) G -> H . EXP
    (47) EXP -> . TERM I
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    M                              shift and go to state 50
    EXP                            shift and go to state 129
    FACTOR                         shift and go to state 55
    empty                          shift and go to state 58

state 99

    (43) H -> IS .

    L_PAREN         reduce using rule 43 (H -> IS .)
    PLUS            reduce using rule 43 (H -> IS .)
    MINUS           reduce using rule 43 (H -> IS .)
    INT_CONT        reduce using rule 43 (H -> IS .)
    STRING_CONT     reduce using rule 43 (H -> IS .)
    CHAR_CONT       reduce using rule 43 (H -> IS .)
    FLOAT_CONT      reduce using rule 43 (H -> IS .)
    BOOL_CONT       reduce using rule 43 (H -> IS .)
    ID              reduce using rule 43 (H -> IS .)
    DRAW_LINE_R     reduce using rule 43 (H -> IS .)
    DRAW_CIRCLE_R   reduce using rule 43 (H -> IS .)
    DRAW_RECTANGLE_R reduce using rule 43 (H -> IS .)
    MOVE_UP_R       reduce using rule 43 (H -> IS .)
    MOVE_RIGHT_R    reduce using rule 43 (H -> IS .)
    MOVE_DOWN_R     reduce using rule 43 (H -> IS .)
    MOVE_LEFT_R     reduce using rule 43 (H -> IS .)
    PRINT_R         reduce using rule 43 (H -> IS .)


state 100

    (39) H -> LESS_T .

    L_PAREN         reduce using rule 39 (H -> LESS_T .)
    PLUS            reduce using rule 39 (H -> LESS_T .)
    MINUS           reduce using rule 39 (H -> LESS_T .)
    INT_CONT        reduce using rule 39 (H -> LESS_T .)
    STRING_CONT     reduce using rule 39 (H -> LESS_T .)
    CHAR_CONT       reduce using rule 39 (H -> LESS_T .)
    FLOAT_CONT      reduce using rule 39 (H -> LESS_T .)
    BOOL_CONT       reduce using rule 39 (H -> LESS_T .)
    ID              reduce using rule 39 (H -> LESS_T .)
    DRAW_LINE_R     reduce using rule 39 (H -> LESS_T .)
    DRAW_CIRCLE_R   reduce using rule 39 (H -> LESS_T .)
    DRAW_RECTANGLE_R reduce using rule 39 (H -> LESS_T .)
    MOVE_UP_R       reduce using rule 39 (H -> LESS_T .)
    MOVE_RIGHT_R    reduce using rule 39 (H -> LESS_T .)
    MOVE_DOWN_R     reduce using rule 39 (H -> LESS_T .)
    MOVE_LEFT_R     reduce using rule 39 (H -> LESS_T .)
    PRINT_R         reduce using rule 39 (H -> LESS_T .)


state 101

    (42) H -> LESS_T_EQUALS .

    L_PAREN         reduce using rule 42 (H -> LESS_T_EQUALS .)
    PLUS            reduce using rule 42 (H -> LESS_T_EQUALS .)
    MINUS           reduce using rule 42 (H -> LESS_T_EQUALS .)
    INT_CONT        reduce using rule 42 (H -> LESS_T_EQUALS .)
    STRING_CONT     reduce using rule 42 (H -> LESS_T_EQUALS .)
    CHAR_CONT       reduce using rule 42 (H -> LESS_T_EQUALS .)
    FLOAT_CONT      reduce using rule 42 (H -> LESS_T_EQUALS .)
    BOOL_CONT       reduce using rule 42 (H -> LESS_T_EQUALS .)
    ID              reduce using rule 42 (H -> LESS_T_EQUALS .)
    DRAW_LINE_R     reduce using rule 42 (H -> LESS_T_EQUALS .)
    DRAW_CIRCLE_R   reduce using rule 42 (H -> LESS_T_EQUALS .)
    DRAW_RECTANGLE_R reduce using rule 42 (H -> LESS_T_EQUALS .)
    MOVE_UP_R       reduce using rule 42 (H -> LESS_T_EQUALS .)
    MOVE_RIGHT_R    reduce using rule 42 (H -> LESS_T_EQUALS .)
    MOVE_DOWN_R     reduce using rule 42 (H -> LESS_T_EQUALS .)
    MOVE_LEFT_R     reduce using rule 42 (H -> LESS_T_EQUALS .)
    PRINT_R         reduce using rule 42 (H -> LESS_T_EQUALS .)


state 102

    (40) H -> GREATER_T .

    L_PAREN         reduce using rule 40 (H -> GREATER_T .)
    PLUS            reduce using rule 40 (H -> GREATER_T .)
    MINUS           reduce using rule 40 (H -> GREATER_T .)
    INT_CONT        reduce using rule 40 (H -> GREATER_T .)
    STRING_CONT     reduce using rule 40 (H -> GREATER_T .)
    CHAR_CONT       reduce using rule 40 (H -> GREATER_T .)
    FLOAT_CONT      reduce using rule 40 (H -> GREATER_T .)
    BOOL_CONT       reduce using rule 40 (H -> GREATER_T .)
    ID              reduce using rule 40 (H -> GREATER_T .)
    DRAW_LINE_R     reduce using rule 40 (H -> GREATER_T .)
    DRAW_CIRCLE_R   reduce using rule 40 (H -> GREATER_T .)
    DRAW_RECTANGLE_R reduce using rule 40 (H -> GREATER_T .)
    MOVE_UP_R       reduce using rule 40 (H -> GREATER_T .)
    MOVE_RIGHT_R    reduce using rule 40 (H -> GREATER_T .)
    MOVE_DOWN_R     reduce using rule 40 (H -> GREATER_T .)
    MOVE_LEFT_R     reduce using rule 40 (H -> GREATER_T .)
    PRINT_R         reduce using rule 40 (H -> GREATER_T .)


state 103

    (41) H -> GREATER_T_EQUALS .

    L_PAREN         reduce using rule 41 (H -> GREATER_T_EQUALS .)
    PLUS            reduce using rule 41 (H -> GREATER_T_EQUALS .)
    MINUS           reduce using rule 41 (H -> GREATER_T_EQUALS .)
    INT_CONT        reduce using rule 41 (H -> GREATER_T_EQUALS .)
    STRING_CONT     reduce using rule 41 (H -> GREATER_T_EQUALS .)
    CHAR_CONT       reduce using rule 41 (H -> GREATER_T_EQUALS .)
    FLOAT_CONT      reduce using rule 41 (H -> GREATER_T_EQUALS .)
    BOOL_CONT       reduce using rule 41 (H -> GREATER_T_EQUALS .)
    ID              reduce using rule 41 (H -> GREATER_T_EQUALS .)
    DRAW_LINE_R     reduce using rule 41 (H -> GREATER_T_EQUALS .)
    DRAW_CIRCLE_R   reduce using rule 41 (H -> GREATER_T_EQUALS .)
    DRAW_RECTANGLE_R reduce using rule 41 (H -> GREATER_T_EQUALS .)
    MOVE_UP_R       reduce using rule 41 (H -> GREATER_T_EQUALS .)
    MOVE_RIGHT_R    reduce using rule 41 (H -> GREATER_T_EQUALS .)
    MOVE_DOWN_R     reduce using rule 41 (H -> GREATER_T_EQUALS .)
    MOVE_LEFT_R     reduce using rule 41 (H -> GREATER_T_EQUALS .)
    PRINT_R         reduce using rule 41 (H -> GREATER_T_EQUALS .)


state 104

    (46) H -> PERCENTAGE .

    L_PAREN         reduce using rule 46 (H -> PERCENTAGE .)
    PLUS            reduce using rule 46 (H -> PERCENTAGE .)
    MINUS           reduce using rule 46 (H -> PERCENTAGE .)
    INT_CONT        reduce using rule 46 (H -> PERCENTAGE .)
    STRING_CONT     reduce using rule 46 (H -> PERCENTAGE .)
    CHAR_CONT       reduce using rule 46 (H -> PERCENTAGE .)
    FLOAT_CONT      reduce using rule 46 (H -> PERCENTAGE .)
    BOOL_CONT       reduce using rule 46 (H -> PERCENTAGE .)
    ID              reduce using rule 46 (H -> PERCENTAGE .)
    DRAW_LINE_R     reduce using rule 46 (H -> PERCENTAGE .)
    DRAW_CIRCLE_R   reduce using rule 46 (H -> PERCENTAGE .)
    DRAW_RECTANGLE_R reduce using rule 46 (H -> PERCENTAGE .)
    MOVE_UP_R       reduce using rule 46 (H -> PERCENTAGE .)
    MOVE_RIGHT_R    reduce using rule 46 (H -> PERCENTAGE .)
    MOVE_DOWN_R     reduce using rule 46 (H -> PERCENTAGE .)
    MOVE_LEFT_R     reduce using rule 46 (H -> PERCENTAGE .)
    PRINT_R         reduce using rule 46 (H -> PERCENTAGE .)


state 105

    (45) H -> OR .

    L_PAREN         reduce using rule 45 (H -> OR .)
    PLUS            reduce using rule 45 (H -> OR .)
    MINUS           reduce using rule 45 (H -> OR .)
    INT_CONT        reduce using rule 45 (H -> OR .)
    STRING_CONT     reduce using rule 45 (H -> OR .)
    CHAR_CONT       reduce using rule 45 (H -> OR .)
    FLOAT_CONT      reduce using rule 45 (H -> OR .)
    BOOL_CONT       reduce using rule 45 (H -> OR .)
    ID              reduce using rule 45 (H -> OR .)
    DRAW_LINE_R     reduce using rule 45 (H -> OR .)
    DRAW_CIRCLE_R   reduce using rule 45 (H -> OR .)
    DRAW_RECTANGLE_R reduce using rule 45 (H -> OR .)
    MOVE_UP_R       reduce using rule 45 (H -> OR .)
    MOVE_RIGHT_R    reduce using rule 45 (H -> OR .)
    MOVE_DOWN_R     reduce using rule 45 (H -> OR .)
    MOVE_LEFT_R     reduce using rule 45 (H -> OR .)
    PRINT_R         reduce using rule 45 (H -> OR .)


state 106

    (38) G -> empty .

    COMMA           reduce using rule 38 (G -> empty .)
    TICK            reduce using rule 38 (G -> empty .)
    R_BRACK         reduce using rule 38 (G -> empty .)
    R_PAREN         reduce using rule 38 (G -> empty .)
    COLON           reduce using rule 38 (G -> empty .)


state 107

    (56) L -> DIVIDE .

    L_PAREN         reduce using rule 56 (L -> DIVIDE .)
    PLUS            reduce using rule 56 (L -> DIVIDE .)
    MINUS           reduce using rule 56 (L -> DIVIDE .)
    INT_CONT        reduce using rule 56 (L -> DIVIDE .)
    STRING_CONT     reduce using rule 56 (L -> DIVIDE .)
    CHAR_CONT       reduce using rule 56 (L -> DIVIDE .)
    FLOAT_CONT      reduce using rule 56 (L -> DIVIDE .)
    BOOL_CONT       reduce using rule 56 (L -> DIVIDE .)
    ID              reduce using rule 56 (L -> DIVIDE .)
    DRAW_LINE_R     reduce using rule 56 (L -> DIVIDE .)
    DRAW_CIRCLE_R   reduce using rule 56 (L -> DIVIDE .)
    DRAW_RECTANGLE_R reduce using rule 56 (L -> DIVIDE .)
    MOVE_UP_R       reduce using rule 56 (L -> DIVIDE .)
    MOVE_RIGHT_R    reduce using rule 56 (L -> DIVIDE .)
    MOVE_DOWN_R     reduce using rule 56 (L -> DIVIDE .)
    MOVE_LEFT_R     reduce using rule 56 (L -> DIVIDE .)
    PRINT_R         reduce using rule 56 (L -> DIVIDE .)


state 108

    (52) TERM -> FACTOR K .

    PLUS            reduce using rule 52 (TERM -> FACTOR K .)
    MINUS           reduce using rule 52 (TERM -> FACTOR K .)
    LESS_T          reduce using rule 52 (TERM -> FACTOR K .)
    GREATER_T       reduce using rule 52 (TERM -> FACTOR K .)
    GREATER_T_EQUALS reduce using rule 52 (TERM -> FACTOR K .)
    LESS_T_EQUALS   reduce using rule 52 (TERM -> FACTOR K .)
    IS              reduce using rule 52 (TERM -> FACTOR K .)
    AND             reduce using rule 52 (TERM -> FACTOR K .)
    OR              reduce using rule 52 (TERM -> FACTOR K .)
    PERCENTAGE      reduce using rule 52 (TERM -> FACTOR K .)
    TICK            reduce using rule 52 (TERM -> FACTOR K .)
    COMMA           reduce using rule 52 (TERM -> FACTOR K .)
    R_BRACK         reduce using rule 52 (TERM -> FACTOR K .)
    R_PAREN         reduce using rule 52 (TERM -> FACTOR K .)
    COLON           reduce using rule 52 (TERM -> FACTOR K .)


state 109

    (53) K -> L . TERM
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 130
    M                              shift and go to state 50
    FACTOR                         shift and go to state 55
    empty                          shift and go to state 58

state 110

    (55) L -> MULTIPLY .

    L_PAREN         reduce using rule 55 (L -> MULTIPLY .)
    PLUS            reduce using rule 55 (L -> MULTIPLY .)
    MINUS           reduce using rule 55 (L -> MULTIPLY .)
    INT_CONT        reduce using rule 55 (L -> MULTIPLY .)
    STRING_CONT     reduce using rule 55 (L -> MULTIPLY .)
    CHAR_CONT       reduce using rule 55 (L -> MULTIPLY .)
    FLOAT_CONT      reduce using rule 55 (L -> MULTIPLY .)
    BOOL_CONT       reduce using rule 55 (L -> MULTIPLY .)
    ID              reduce using rule 55 (L -> MULTIPLY .)
    DRAW_LINE_R     reduce using rule 55 (L -> MULTIPLY .)
    DRAW_CIRCLE_R   reduce using rule 55 (L -> MULTIPLY .)
    DRAW_RECTANGLE_R reduce using rule 55 (L -> MULTIPLY .)
    MOVE_UP_R       reduce using rule 55 (L -> MULTIPLY .)
    MOVE_RIGHT_R    reduce using rule 55 (L -> MULTIPLY .)
    MOVE_DOWN_R     reduce using rule 55 (L -> MULTIPLY .)
    MOVE_LEFT_R     reduce using rule 55 (L -> MULTIPLY .)
    PRINT_R         reduce using rule 55 (L -> MULTIPLY .)


state 111

    (54) K -> empty .

    PLUS            reduce using rule 54 (K -> empty .)
    MINUS           reduce using rule 54 (K -> empty .)
    LESS_T          reduce using rule 54 (K -> empty .)
    GREATER_T       reduce using rule 54 (K -> empty .)
    GREATER_T_EQUALS reduce using rule 54 (K -> empty .)
    LESS_T_EQUALS   reduce using rule 54 (K -> empty .)
    IS              reduce using rule 54 (K -> empty .)
    AND             reduce using rule 54 (K -> empty .)
    OR              reduce using rule 54 (K -> empty .)
    PERCENTAGE      reduce using rule 54 (K -> empty .)
    COMMA           reduce using rule 54 (K -> empty .)
    TICK            reduce using rule 54 (K -> empty .)
    R_BRACK         reduce using rule 54 (K -> empty .)
    R_PAREN         reduce using rule 54 (K -> empty .)
    COLON           reduce using rule 54 (K -> empty .)


state 112

    (23) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates . L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK print_currentSymTab

    L_PAREN         shift and go to state 131


state 113

    (109) MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates . L_PAREN R_PAREN COLON S_BLOCK TICK print_currentSymTab

    L_PAREN         shift and go to state 132


state 114

    (76) LIST_EXP -> L_BRACK EXPRESSION P . R_BRACK

    R_BRACK         shift and go to state 133


state 115

    (77) P -> COMMA . EXPRESSION P
    (36) EXPRESSION -> . EXP G
    (47) EXP -> . TERM I
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    M                              shift and go to state 50
    EXP                            shift and go to state 54
    FACTOR                         shift and go to state 55
    EXPRESSION                     shift and go to state 134
    empty                          shift and go to state 58

state 116

    (78) P -> empty .

    R_BRACK         reduce using rule 78 (P -> empty .)


state 117

    (111) DRAW_LINE -> DRAW_LINE_R L_PAREN . EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (47) EXP -> . TERM I
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    M                              shift and go to state 50
    EXP                            shift and go to state 54
    FACTOR                         shift and go to state 55
    EXPRESSION                     shift and go to state 135
    empty                          shift and go to state 58

state 118

    (115) MOVE_DOWN -> MOVE_DOWN_R L_PAREN . EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (47) EXP -> . TERM I
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    M                              shift and go to state 50
    EXP                            shift and go to state 54
    FACTOR                         shift and go to state 55
    EXPRESSION                     shift and go to state 136
    empty                          shift and go to state 58

state 119

    (117) PRINT -> PRINT_R L_PAREN . EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (47) EXP -> . TERM I
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    M                              shift and go to state 50
    EXP                            shift and go to state 54
    FACTOR                         shift and go to state 55
    EXPRESSION                     shift and go to state 137
    empty                          shift and go to state 58

state 120

    (116) MOVE_LEFT -> MOVE_LEFT_R L_PAREN . EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (47) EXP -> . TERM I
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    M                              shift and go to state 50
    EXP                            shift and go to state 54
    FACTOR                         shift and go to state 55
    EXPRESSION                     shift and go to state 138
    empty                          shift and go to state 58

state 121

    (110) DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN . EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (47) EXP -> . TERM I
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    M                              shift and go to state 50
    EXP                            shift and go to state 54
    FACTOR                         shift and go to state 55
    EXPRESSION                     shift and go to state 139
    empty                          shift and go to state 58

state 122

    (112) DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN . EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (47) EXP -> . TERM I
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    M                              shift and go to state 50
    EXP                            shift and go to state 54
    FACTOR                         shift and go to state 55
    EXPRESSION                     shift and go to state 140
    empty                          shift and go to state 58

state 123

    (96) SOLUTION_CALL -> ID L_PAREN . V R_PAREN
    (97) V -> . W X
    (98) W -> . EXPRESSION
    (99) W -> . NEGATION
    (36) EXPRESSION -> . EXP G
    (70) NEGATION -> . N EXPRESSION
    (47) EXP -> . TERM I
    (71) N -> . NOT
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    NOT             shift and go to state 145
    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    W                              shift and go to state 143
    FACTOR                         shift and go to state 55
    M                              shift and go to state 50
    NEGATION                       shift and go to state 141
    N                              shift and go to state 142
    EXP                            shift and go to state 54
    V                              shift and go to state 144
    EXPRESSION                     shift and go to state 146
    empty                          shift and go to state 58

state 124

    (72) ID_REF -> ID check_var_existence . O
    (74) O -> . L_BRACK EXPRESSION R_BRACK
    (75) O -> . empty
    (126) empty -> .

    L_BRACK         shift and go to state 147
    MULTIPLY        reduce using rule 126 (empty -> .)
    DIVIDE          reduce using rule 126 (empty -> .)
    PLUS            reduce using rule 126 (empty -> .)
    MINUS           reduce using rule 126 (empty -> .)
    LESS_T          reduce using rule 126 (empty -> .)
    GREATER_T       reduce using rule 126 (empty -> .)
    GREATER_T_EQUALS reduce using rule 126 (empty -> .)
    LESS_T_EQUALS   reduce using rule 126 (empty -> .)
    IS              reduce using rule 126 (empty -> .)
    AND             reduce using rule 126 (empty -> .)
    OR              reduce using rule 126 (empty -> .)
    PERCENTAGE      reduce using rule 126 (empty -> .)
    COMMA           reduce using rule 126 (empty -> .)
    TICK            reduce using rule 126 (empty -> .)
    R_BRACK         reduce using rule 126 (empty -> .)
    R_PAREN         reduce using rule 126 (empty -> .)
    COLON           reduce using rule 126 (empty -> .)
    EQUALS          reduce using rule 126 (empty -> .)

    empty                          shift and go to state 149
    O                              shift and go to state 148

state 125

    (113) MOVE_UP -> MOVE_UP_R L_PAREN . EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (47) EXP -> . TERM I
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    M                              shift and go to state 50
    EXP                            shift and go to state 54
    FACTOR                         shift and go to state 55
    EXPRESSION                     shift and go to state 150
    empty                          shift and go to state 58

state 126

    (114) MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN . EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (47) EXP -> . TERM I
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    M                              shift and go to state 50
    EXP                            shift and go to state 54
    FACTOR                         shift and go to state 55
    EXPRESSION                     shift and go to state 151
    empty                          shift and go to state 58

state 127

    (57) FACTOR -> L_PAREN EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 57 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 57 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    PLUS            reduce using rule 57 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    MINUS           reduce using rule 57 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 57 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 57 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 57 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 57 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    IS              reduce using rule 57 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    AND             reduce using rule 57 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    OR              reduce using rule 57 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 57 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    COMMA           reduce using rule 57 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 57 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    COLON           reduce using rule 57 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 57 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)
    TICK            reduce using rule 57 (FACTOR -> L_PAREN EXPRESSION R_PAREN .)


state 128

    (48) I -> J EXP .

    LESS_T          reduce using rule 48 (I -> J EXP .)
    GREATER_T       reduce using rule 48 (I -> J EXP .)
    GREATER_T_EQUALS reduce using rule 48 (I -> J EXP .)
    LESS_T_EQUALS   reduce using rule 48 (I -> J EXP .)
    IS              reduce using rule 48 (I -> J EXP .)
    AND             reduce using rule 48 (I -> J EXP .)
    OR              reduce using rule 48 (I -> J EXP .)
    PERCENTAGE      reduce using rule 48 (I -> J EXP .)
    COMMA           reduce using rule 48 (I -> J EXP .)
    TICK            reduce using rule 48 (I -> J EXP .)
    R_BRACK         reduce using rule 48 (I -> J EXP .)
    R_PAREN         reduce using rule 48 (I -> J EXP .)
    COLON           reduce using rule 48 (I -> J EXP .)


state 129

    (37) G -> H EXP .

    COMMA           reduce using rule 37 (G -> H EXP .)
    TICK            reduce using rule 37 (G -> H EXP .)
    R_BRACK         reduce using rule 37 (G -> H EXP .)
    R_PAREN         reduce using rule 37 (G -> H EXP .)
    COLON           reduce using rule 37 (G -> H EXP .)


state 130

    (53) K -> L TERM .

    PLUS            reduce using rule 53 (K -> L TERM .)
    MINUS           reduce using rule 53 (K -> L TERM .)
    LESS_T          reduce using rule 53 (K -> L TERM .)
    GREATER_T       reduce using rule 53 (K -> L TERM .)
    GREATER_T_EQUALS reduce using rule 53 (K -> L TERM .)
    LESS_T_EQUALS   reduce using rule 53 (K -> L TERM .)
    IS              reduce using rule 53 (K -> L TERM .)
    AND             reduce using rule 53 (K -> L TERM .)
    OR              reduce using rule 53 (K -> L TERM .)
    PERCENTAGE      reduce using rule 53 (K -> L TERM .)
    COMMA           reduce using rule 53 (K -> L TERM .)
    TICK            reduce using rule 53 (K -> L TERM .)
    R_BRACK         reduce using rule 53 (K -> L TERM .)
    R_PAREN         reduce using rule 53 (K -> L TERM .)
    COLON           reduce using rule 53 (K -> L TERM .)


state 131

    (23) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN . PARAMS R_PAREN COLON S_BLOCK TICK print_currentSymTab
    (102) PARAMS -> . TYPE store_type ID check_param_duplicates Y
    (30) TYPE -> . INT
    (31) TYPE -> . FLOAT
    (32) TYPE -> . CHAR
    (33) TYPE -> . STRING
    (34) TYPE -> . BOOL
    (35) TYPE -> . LIST

    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 16
    STRING          shift and go to state 11
    BOOL            shift and go to state 17
    LIST            shift and go to state 15

    PARAMS                         shift and go to state 152
    TYPE                           shift and go to state 153

state 132

    (109) MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates L_PAREN . R_PAREN COLON S_BLOCK TICK print_currentSymTab

    R_PAREN         shift and go to state 154


state 133

    (76) LIST_EXP -> L_BRACK EXPRESSION P R_BRACK .

    COMMA           reduce using rule 76 (LIST_EXP -> L_BRACK EXPRESSION P R_BRACK .)
    TICK            reduce using rule 76 (LIST_EXP -> L_BRACK EXPRESSION P R_BRACK .)


state 134

    (77) P -> COMMA EXPRESSION . P
    (77) P -> . COMMA EXPRESSION P
    (78) P -> . empty
    (126) empty -> .

    COMMA           shift and go to state 115
    R_BRACK         reduce using rule 126 (empty -> .)

    P                              shift and go to state 155
    empty                          shift and go to state 116

state 135

    (111) DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION . COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN

    COMMA           shift and go to state 156


state 136

    (115) MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 157


state 137

    (117) PRINT -> PRINT_R L_PAREN EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 158


state 138

    (116) MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 159


state 139

    (110) DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION . COMMA EXPRESSION COMMA EXPRESSION R_PAREN

    COMMA           shift and go to state 160


state 140

    (112) DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION . COMMA EXPRESSION COMMA EXPRESSION R_PAREN

    COMMA           shift and go to state 161


state 141

    (99) W -> NEGATION .

    COMMA           reduce using rule 99 (W -> NEGATION .)
    R_PAREN         reduce using rule 99 (W -> NEGATION .)


state 142

    (70) NEGATION -> N . EXPRESSION
    (36) EXPRESSION -> . EXP G
    (47) EXP -> . TERM I
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    M                              shift and go to state 50
    EXP                            shift and go to state 54
    FACTOR                         shift and go to state 55
    EXPRESSION                     shift and go to state 162
    empty                          shift and go to state 58

state 143

    (97) V -> W . X
    (100) X -> . COMMA V
    (101) X -> . empty
    (126) empty -> .

    COMMA           shift and go to state 164
    R_PAREN         reduce using rule 126 (empty -> .)

    X                              shift and go to state 163
    empty                          shift and go to state 165

state 144

    (96) SOLUTION_CALL -> ID L_PAREN V . R_PAREN

    R_PAREN         shift and go to state 166


state 145

    (71) N -> NOT .

    L_PAREN         reduce using rule 71 (N -> NOT .)
    PLUS            reduce using rule 71 (N -> NOT .)
    MINUS           reduce using rule 71 (N -> NOT .)
    INT_CONT        reduce using rule 71 (N -> NOT .)
    STRING_CONT     reduce using rule 71 (N -> NOT .)
    CHAR_CONT       reduce using rule 71 (N -> NOT .)
    FLOAT_CONT      reduce using rule 71 (N -> NOT .)
    BOOL_CONT       reduce using rule 71 (N -> NOT .)
    ID              reduce using rule 71 (N -> NOT .)
    DRAW_LINE_R     reduce using rule 71 (N -> NOT .)
    DRAW_CIRCLE_R   reduce using rule 71 (N -> NOT .)
    DRAW_RECTANGLE_R reduce using rule 71 (N -> NOT .)
    MOVE_UP_R       reduce using rule 71 (N -> NOT .)
    MOVE_RIGHT_R    reduce using rule 71 (N -> NOT .)
    MOVE_DOWN_R     reduce using rule 71 (N -> NOT .)
    MOVE_LEFT_R     reduce using rule 71 (N -> NOT .)
    PRINT_R         reduce using rule 71 (N -> NOT .)


state 146

    (98) W -> EXPRESSION .

    COMMA           reduce using rule 98 (W -> EXPRESSION .)
    R_PAREN         reduce using rule 98 (W -> EXPRESSION .)


state 147

    (74) O -> L_BRACK . EXPRESSION R_BRACK
    (36) EXPRESSION -> . EXP G
    (47) EXP -> . TERM I
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    M                              shift and go to state 50
    EXP                            shift and go to state 54
    FACTOR                         shift and go to state 55
    EXPRESSION                     shift and go to state 167
    empty                          shift and go to state 58

state 148

    (72) ID_REF -> ID check_var_existence O .

    MULTIPLY        reduce using rule 72 (ID_REF -> ID check_var_existence O .)
    DIVIDE          reduce using rule 72 (ID_REF -> ID check_var_existence O .)
    PLUS            reduce using rule 72 (ID_REF -> ID check_var_existence O .)
    MINUS           reduce using rule 72 (ID_REF -> ID check_var_existence O .)
    LESS_T          reduce using rule 72 (ID_REF -> ID check_var_existence O .)
    GREATER_T       reduce using rule 72 (ID_REF -> ID check_var_existence O .)
    GREATER_T_EQUALS reduce using rule 72 (ID_REF -> ID check_var_existence O .)
    LESS_T_EQUALS   reduce using rule 72 (ID_REF -> ID check_var_existence O .)
    IS              reduce using rule 72 (ID_REF -> ID check_var_existence O .)
    AND             reduce using rule 72 (ID_REF -> ID check_var_existence O .)
    OR              reduce using rule 72 (ID_REF -> ID check_var_existence O .)
    PERCENTAGE      reduce using rule 72 (ID_REF -> ID check_var_existence O .)
    COMMA           reduce using rule 72 (ID_REF -> ID check_var_existence O .)
    TICK            reduce using rule 72 (ID_REF -> ID check_var_existence O .)
    R_BRACK         reduce using rule 72 (ID_REF -> ID check_var_existence O .)
    R_PAREN         reduce using rule 72 (ID_REF -> ID check_var_existence O .)
    COLON           reduce using rule 72 (ID_REF -> ID check_var_existence O .)
    EQUALS          reduce using rule 72 (ID_REF -> ID check_var_existence O .)


state 149

    (75) O -> empty .

    MULTIPLY        reduce using rule 75 (O -> empty .)
    DIVIDE          reduce using rule 75 (O -> empty .)
    PLUS            reduce using rule 75 (O -> empty .)
    MINUS           reduce using rule 75 (O -> empty .)
    LESS_T          reduce using rule 75 (O -> empty .)
    GREATER_T       reduce using rule 75 (O -> empty .)
    GREATER_T_EQUALS reduce using rule 75 (O -> empty .)
    LESS_T_EQUALS   reduce using rule 75 (O -> empty .)
    IS              reduce using rule 75 (O -> empty .)
    AND             reduce using rule 75 (O -> empty .)
    OR              reduce using rule 75 (O -> empty .)
    PERCENTAGE      reduce using rule 75 (O -> empty .)
    COMMA           reduce using rule 75 (O -> empty .)
    TICK            reduce using rule 75 (O -> empty .)
    R_BRACK         reduce using rule 75 (O -> empty .)
    R_PAREN         reduce using rule 75 (O -> empty .)
    COLON           reduce using rule 75 (O -> empty .)
    EQUALS          reduce using rule 75 (O -> empty .)


state 150

    (113) MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 168


state 151

    (114) MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 169


state 152

    (23) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS . R_PAREN COLON S_BLOCK TICK print_currentSymTab

    R_PAREN         shift and go to state 170


state 153

    (102) PARAMS -> TYPE . store_type ID check_param_duplicates Y
    (8) store_type -> .

    ID              reduce using rule 8 (store_type -> .)

    store_type                     shift and go to state 171

state 154

    (109) MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN . COLON S_BLOCK TICK print_currentSymTab

    COLON           shift and go to state 172


state 155

    (77) P -> COMMA EXPRESSION P .

    R_BRACK         reduce using rule 77 (P -> COMMA EXPRESSION P .)


state 156

    (111) DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA . EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (47) EXP -> . TERM I
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    M                              shift and go to state 50
    EXP                            shift and go to state 54
    FACTOR                         shift and go to state 55
    EXPRESSION                     shift and go to state 173
    empty                          shift and go to state 58

state 157

    (115) MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 115 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 115 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    PLUS            reduce using rule 115 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    MINUS           reduce using rule 115 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 115 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 115 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 115 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 115 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    IS              reduce using rule 115 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    AND             reduce using rule 115 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    OR              reduce using rule 115 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 115 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    COMMA           reduce using rule 115 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    TICK            reduce using rule 115 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 115 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 115 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    COLON           reduce using rule 115 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)


state 158

    (117) PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 117 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 117 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    PLUS            reduce using rule 117 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    MINUS           reduce using rule 117 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 117 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 117 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 117 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 117 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    IS              reduce using rule 117 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    AND             reduce using rule 117 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    OR              reduce using rule 117 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 117 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    COMMA           reduce using rule 117 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    TICK            reduce using rule 117 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 117 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 117 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    COLON           reduce using rule 117 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)


state 159

    (116) MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 116 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 116 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    PLUS            reduce using rule 116 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    MINUS           reduce using rule 116 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 116 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 116 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 116 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 116 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    IS              reduce using rule 116 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    AND             reduce using rule 116 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    OR              reduce using rule 116 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 116 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    COMMA           reduce using rule 116 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    TICK            reduce using rule 116 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 116 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 116 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    COLON           reduce using rule 116 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)


state 160

    (110) DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA . EXPRESSION COMMA EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (47) EXP -> . TERM I
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    M                              shift and go to state 50
    EXP                            shift and go to state 54
    FACTOR                         shift and go to state 55
    EXPRESSION                     shift and go to state 174
    empty                          shift and go to state 58

state 161

    (112) DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA . EXPRESSION COMMA EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (47) EXP -> . TERM I
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    M                              shift and go to state 50
    EXP                            shift and go to state 54
    FACTOR                         shift and go to state 55
    EXPRESSION                     shift and go to state 175
    empty                          shift and go to state 58

state 162

    (70) NEGATION -> N EXPRESSION .

    COMMA           reduce using rule 70 (NEGATION -> N EXPRESSION .)
    R_PAREN         reduce using rule 70 (NEGATION -> N EXPRESSION .)


state 163

    (97) V -> W X .

    R_PAREN         reduce using rule 97 (V -> W X .)


state 164

    (100) X -> COMMA . V
    (97) V -> . W X
    (98) W -> . EXPRESSION
    (99) W -> . NEGATION
    (36) EXPRESSION -> . EXP G
    (70) NEGATION -> . N EXPRESSION
    (47) EXP -> . TERM I
    (71) N -> . NOT
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    NOT             shift and go to state 145
    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    W                              shift and go to state 143
    FACTOR                         shift and go to state 55
    M                              shift and go to state 50
    NEGATION                       shift and go to state 141
    N                              shift and go to state 142
    EXP                            shift and go to state 54
    V                              shift and go to state 176
    EXPRESSION                     shift and go to state 146
    empty                          shift and go to state 58

state 165

    (101) X -> empty .

    R_PAREN         reduce using rule 101 (X -> empty .)


state 166

    (96) SOLUTION_CALL -> ID L_PAREN V R_PAREN .

    MULTIPLY        reduce using rule 96 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    DIVIDE          reduce using rule 96 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    PLUS            reduce using rule 96 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    MINUS           reduce using rule 96 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    LESS_T          reduce using rule 96 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    GREATER_T       reduce using rule 96 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    GREATER_T_EQUALS reduce using rule 96 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    LESS_T_EQUALS   reduce using rule 96 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    IS              reduce using rule 96 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    AND             reduce using rule 96 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    OR              reduce using rule 96 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    PERCENTAGE      reduce using rule 96 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    COMMA           reduce using rule 96 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    TICK            reduce using rule 96 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    R_BRACK         reduce using rule 96 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    R_PAREN         reduce using rule 96 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)
    COLON           reduce using rule 96 (SOLUTION_CALL -> ID L_PAREN V R_PAREN .)


state 167

    (74) O -> L_BRACK EXPRESSION . R_BRACK

    R_BRACK         shift and go to state 177


state 168

    (113) MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 113 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 113 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    PLUS            reduce using rule 113 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    MINUS           reduce using rule 113 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 113 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 113 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 113 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 113 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    IS              reduce using rule 113 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    AND             reduce using rule 113 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    OR              reduce using rule 113 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 113 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    COMMA           reduce using rule 113 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    TICK            reduce using rule 113 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 113 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 113 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    COLON           reduce using rule 113 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)


state 169

    (114) MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 114 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 114 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    PLUS            reduce using rule 114 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    MINUS           reduce using rule 114 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 114 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 114 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 114 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 114 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    IS              reduce using rule 114 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    AND             reduce using rule 114 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    OR              reduce using rule 114 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 114 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    COMMA           reduce using rule 114 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    TICK            reduce using rule 114 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 114 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 114 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    COLON           reduce using rule 114 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)


state 170

    (23) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN . COLON S_BLOCK TICK print_currentSymTab

    COLON           shift and go to state 178


state 171

    (102) PARAMS -> TYPE store_type . ID check_param_duplicates Y

    ID              shift and go to state 179


state 172

    (109) MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON . S_BLOCK TICK print_currentSymTab
    (18) S_BLOCK -> . L_BRACE F R_BRACE

    L_BRACE         shift and go to state 180

    S_BLOCK                        shift and go to state 181

state 173

    (111) DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION . COMMA EXPRESSION COMMA EXPRESSION R_PAREN

    COMMA           shift and go to state 182


state 174

    (110) DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION . COMMA EXPRESSION R_PAREN

    COMMA           shift and go to state 183


state 175

    (112) DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION . COMMA EXPRESSION R_PAREN

    COMMA           shift and go to state 184


state 176

    (100) X -> COMMA V .

    R_PAREN         reduce using rule 100 (X -> COMMA V .)


state 177

    (74) O -> L_BRACK EXPRESSION R_BRACK .

    MULTIPLY        reduce using rule 74 (O -> L_BRACK EXPRESSION R_BRACK .)
    DIVIDE          reduce using rule 74 (O -> L_BRACK EXPRESSION R_BRACK .)
    PLUS            reduce using rule 74 (O -> L_BRACK EXPRESSION R_BRACK .)
    MINUS           reduce using rule 74 (O -> L_BRACK EXPRESSION R_BRACK .)
    LESS_T          reduce using rule 74 (O -> L_BRACK EXPRESSION R_BRACK .)
    GREATER_T       reduce using rule 74 (O -> L_BRACK EXPRESSION R_BRACK .)
    GREATER_T_EQUALS reduce using rule 74 (O -> L_BRACK EXPRESSION R_BRACK .)
    LESS_T_EQUALS   reduce using rule 74 (O -> L_BRACK EXPRESSION R_BRACK .)
    IS              reduce using rule 74 (O -> L_BRACK EXPRESSION R_BRACK .)
    AND             reduce using rule 74 (O -> L_BRACK EXPRESSION R_BRACK .)
    OR              reduce using rule 74 (O -> L_BRACK EXPRESSION R_BRACK .)
    PERCENTAGE      reduce using rule 74 (O -> L_BRACK EXPRESSION R_BRACK .)
    COMMA           reduce using rule 74 (O -> L_BRACK EXPRESSION R_BRACK .)
    TICK            reduce using rule 74 (O -> L_BRACK EXPRESSION R_BRACK .)
    R_BRACK         reduce using rule 74 (O -> L_BRACK EXPRESSION R_BRACK .)
    R_PAREN         reduce using rule 74 (O -> L_BRACK EXPRESSION R_BRACK .)
    COLON           reduce using rule 74 (O -> L_BRACK EXPRESSION R_BRACK .)
    EQUALS          reduce using rule 74 (O -> L_BRACK EXPRESSION R_BRACK .)


state 178

    (23) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON . S_BLOCK TICK print_currentSymTab
    (18) S_BLOCK -> . L_BRACE F R_BRACE

    L_BRACE         shift and go to state 180

    S_BLOCK                        shift and go to state 185

state 179

    (102) PARAMS -> TYPE store_type ID . check_param_duplicates Y
    (103) check_param_duplicates -> .

    COMMA           reduce using rule 103 (check_param_duplicates -> .)
    R_PAREN         reduce using rule 103 (check_param_duplicates -> .)

    check_param_duplicates         shift and go to state 186

state 180

    (18) S_BLOCK -> L_BRACE . F R_BRACE
    (19) F -> . S_STATUTE F
    (20) F -> . empty
    (21) S_STATUTE -> . VAR_DEFINITIONS
    (22) S_STATUTE -> . STATUTE
    (126) empty -> .
    (7) VAR_DEFINITIONS -> . TYPE store_type A TICK
    (25) STATUTE -> . CONDITION
    (26) STATUTE -> . CYCLE
    (27) STATUTE -> . ASSIGNATION
    (30) TYPE -> . INT
    (31) TYPE -> . FLOAT
    (32) TYPE -> . CHAR
    (33) TYPE -> . STRING
    (34) TYPE -> . BOOL
    (35) TYPE -> . LIST
    (88) CONDITION -> . IF EXPRESSION COLON BLOCK R TICK
    (86) CYCLE -> . FOR
    (87) CYCLE -> . WHILE
    (79) ASSIGNATION -> . ID_REF EQUALS EXPRESSION TICK
    (85) FOR -> . FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK
    (84) WHILE -> . WHILE_CYCLE EXPRESSION COLON BLOCK TICK
    (72) ID_REF -> . ID check_var_existence O

    R_BRACE         reduce using rule 126 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 16
    STRING          shift and go to state 11
    BOOL            shift and go to state 17
    LIST            shift and go to state 15
    IF              shift and go to state 199
    FOR_CYCLE       shift and go to state 195
    WHILE_CYCLE     shift and go to state 201
    ID              shift and go to state 198

    STATUTE                        shift and go to state 194
    ID_REF                         shift and go to state 191
    S_STATUTE                      shift and go to state 189
    FOR                            shift and go to state 196
    VAR_DEFINITIONS                shift and go to state 190
    F                              shift and go to state 197
    WHILE                          shift and go to state 187
    CONDITION                      shift and go to state 192
    ASSIGNATION                    shift and go to state 188
    TYPE                           shift and go to state 18
    empty                          shift and go to state 200
    CYCLE                          shift and go to state 193

state 181

    (109) MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK . TICK print_currentSymTab

    TICK            shift and go to state 202


state 182

    (111) DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA . EXPRESSION COMMA EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (47) EXP -> . TERM I
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    M                              shift and go to state 50
    EXP                            shift and go to state 54
    FACTOR                         shift and go to state 55
    EXPRESSION                     shift and go to state 203
    empty                          shift and go to state 58

state 183

    (110) DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA . EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (47) EXP -> . TERM I
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    M                              shift and go to state 50
    EXP                            shift and go to state 54
    FACTOR                         shift and go to state 55
    EXPRESSION                     shift and go to state 204
    empty                          shift and go to state 58

state 184

    (112) DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA . EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (47) EXP -> . TERM I
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    M                              shift and go to state 50
    EXP                            shift and go to state 54
    FACTOR                         shift and go to state 55
    EXPRESSION                     shift and go to state 205
    empty                          shift and go to state 58

state 185

    (23) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK . TICK print_currentSymTab

    TICK            shift and go to state 206


state 186

    (102) PARAMS -> TYPE store_type ID check_param_duplicates . Y
    (104) Y -> . COMMA PARAMS
    (105) Y -> . empty
    (126) empty -> .

    COMMA           shift and go to state 207
    R_PAREN         reduce using rule 126 (empty -> .)

    Y                              shift and go to state 208
    empty                          shift and go to state 209

state 187

    (87) CYCLE -> WHILE .

    INT             reduce using rule 87 (CYCLE -> WHILE .)
    FLOAT           reduce using rule 87 (CYCLE -> WHILE .)
    CHAR            reduce using rule 87 (CYCLE -> WHILE .)
    STRING          reduce using rule 87 (CYCLE -> WHILE .)
    BOOL            reduce using rule 87 (CYCLE -> WHILE .)
    LIST            reduce using rule 87 (CYCLE -> WHILE .)
    IF              reduce using rule 87 (CYCLE -> WHILE .)
    FOR_CYCLE       reduce using rule 87 (CYCLE -> WHILE .)
    WHILE_CYCLE     reduce using rule 87 (CYCLE -> WHILE .)
    ID              reduce using rule 87 (CYCLE -> WHILE .)
    R_BRACE         reduce using rule 87 (CYCLE -> WHILE .)


state 188

    (27) STATUTE -> ASSIGNATION .

    IF              reduce using rule 27 (STATUTE -> ASSIGNATION .)
    FOR_CYCLE       reduce using rule 27 (STATUTE -> ASSIGNATION .)
    WHILE_CYCLE     reduce using rule 27 (STATUTE -> ASSIGNATION .)
    ID              reduce using rule 27 (STATUTE -> ASSIGNATION .)
    R_BRACE         reduce using rule 27 (STATUTE -> ASSIGNATION .)
    INT             reduce using rule 27 (STATUTE -> ASSIGNATION .)
    FLOAT           reduce using rule 27 (STATUTE -> ASSIGNATION .)
    CHAR            reduce using rule 27 (STATUTE -> ASSIGNATION .)
    STRING          reduce using rule 27 (STATUTE -> ASSIGNATION .)
    BOOL            reduce using rule 27 (STATUTE -> ASSIGNATION .)
    LIST            reduce using rule 27 (STATUTE -> ASSIGNATION .)


state 189

    (19) F -> S_STATUTE . F
    (19) F -> . S_STATUTE F
    (20) F -> . empty
    (21) S_STATUTE -> . VAR_DEFINITIONS
    (22) S_STATUTE -> . STATUTE
    (126) empty -> .
    (7) VAR_DEFINITIONS -> . TYPE store_type A TICK
    (25) STATUTE -> . CONDITION
    (26) STATUTE -> . CYCLE
    (27) STATUTE -> . ASSIGNATION
    (30) TYPE -> . INT
    (31) TYPE -> . FLOAT
    (32) TYPE -> . CHAR
    (33) TYPE -> . STRING
    (34) TYPE -> . BOOL
    (35) TYPE -> . LIST
    (88) CONDITION -> . IF EXPRESSION COLON BLOCK R TICK
    (86) CYCLE -> . FOR
    (87) CYCLE -> . WHILE
    (79) ASSIGNATION -> . ID_REF EQUALS EXPRESSION TICK
    (85) FOR -> . FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK
    (84) WHILE -> . WHILE_CYCLE EXPRESSION COLON BLOCK TICK
    (72) ID_REF -> . ID check_var_existence O

    R_BRACE         reduce using rule 126 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 16
    STRING          shift and go to state 11
    BOOL            shift and go to state 17
    LIST            shift and go to state 15
    IF              shift and go to state 199
    FOR_CYCLE       shift and go to state 195
    WHILE_CYCLE     shift and go to state 201
    ID              shift and go to state 198

    STATUTE                        shift and go to state 194
    ID_REF                         shift and go to state 191
    S_STATUTE                      shift and go to state 189
    FOR                            shift and go to state 196
    VAR_DEFINITIONS                shift and go to state 190
    F                              shift and go to state 210
    WHILE                          shift and go to state 187
    CONDITION                      shift and go to state 192
    ASSIGNATION                    shift and go to state 188
    TYPE                           shift and go to state 18
    empty                          shift and go to state 200
    CYCLE                          shift and go to state 193

state 190

    (21) S_STATUTE -> VAR_DEFINITIONS .

    INT             reduce using rule 21 (S_STATUTE -> VAR_DEFINITIONS .)
    FLOAT           reduce using rule 21 (S_STATUTE -> VAR_DEFINITIONS .)
    CHAR            reduce using rule 21 (S_STATUTE -> VAR_DEFINITIONS .)
    STRING          reduce using rule 21 (S_STATUTE -> VAR_DEFINITIONS .)
    BOOL            reduce using rule 21 (S_STATUTE -> VAR_DEFINITIONS .)
    LIST            reduce using rule 21 (S_STATUTE -> VAR_DEFINITIONS .)
    IF              reduce using rule 21 (S_STATUTE -> VAR_DEFINITIONS .)
    FOR_CYCLE       reduce using rule 21 (S_STATUTE -> VAR_DEFINITIONS .)
    WHILE_CYCLE     reduce using rule 21 (S_STATUTE -> VAR_DEFINITIONS .)
    ID              reduce using rule 21 (S_STATUTE -> VAR_DEFINITIONS .)
    R_BRACE         reduce using rule 21 (S_STATUTE -> VAR_DEFINITIONS .)


state 191

    (79) ASSIGNATION -> ID_REF . EQUALS EXPRESSION TICK

    EQUALS          shift and go to state 211


state 192

    (25) STATUTE -> CONDITION .

    IF              reduce using rule 25 (STATUTE -> CONDITION .)
    FOR_CYCLE       reduce using rule 25 (STATUTE -> CONDITION .)
    WHILE_CYCLE     reduce using rule 25 (STATUTE -> CONDITION .)
    ID              reduce using rule 25 (STATUTE -> CONDITION .)
    R_BRACE         reduce using rule 25 (STATUTE -> CONDITION .)
    INT             reduce using rule 25 (STATUTE -> CONDITION .)
    FLOAT           reduce using rule 25 (STATUTE -> CONDITION .)
    CHAR            reduce using rule 25 (STATUTE -> CONDITION .)
    STRING          reduce using rule 25 (STATUTE -> CONDITION .)
    BOOL            reduce using rule 25 (STATUTE -> CONDITION .)
    LIST            reduce using rule 25 (STATUTE -> CONDITION .)


state 193

    (26) STATUTE -> CYCLE .

    IF              reduce using rule 26 (STATUTE -> CYCLE .)
    FOR_CYCLE       reduce using rule 26 (STATUTE -> CYCLE .)
    WHILE_CYCLE     reduce using rule 26 (STATUTE -> CYCLE .)
    ID              reduce using rule 26 (STATUTE -> CYCLE .)
    R_BRACE         reduce using rule 26 (STATUTE -> CYCLE .)
    INT             reduce using rule 26 (STATUTE -> CYCLE .)
    FLOAT           reduce using rule 26 (STATUTE -> CYCLE .)
    CHAR            reduce using rule 26 (STATUTE -> CYCLE .)
    STRING          reduce using rule 26 (STATUTE -> CYCLE .)
    BOOL            reduce using rule 26 (STATUTE -> CYCLE .)
    LIST            reduce using rule 26 (STATUTE -> CYCLE .)


state 194

    (22) S_STATUTE -> STATUTE .

    INT             reduce using rule 22 (S_STATUTE -> STATUTE .)
    FLOAT           reduce using rule 22 (S_STATUTE -> STATUTE .)
    CHAR            reduce using rule 22 (S_STATUTE -> STATUTE .)
    STRING          reduce using rule 22 (S_STATUTE -> STATUTE .)
    BOOL            reduce using rule 22 (S_STATUTE -> STATUTE .)
    LIST            reduce using rule 22 (S_STATUTE -> STATUTE .)
    IF              reduce using rule 22 (S_STATUTE -> STATUTE .)
    FOR_CYCLE       reduce using rule 22 (S_STATUTE -> STATUTE .)
    WHILE_CYCLE     reduce using rule 22 (S_STATUTE -> STATUTE .)
    ID              reduce using rule 22 (S_STATUTE -> STATUTE .)
    R_BRACE         reduce using rule 22 (S_STATUTE -> STATUTE .)


state 195

    (85) FOR -> FOR_CYCLE . S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK
    (83) S_ASSIGNATION -> . ID_REF EQUALS EXPRESSION
    (72) ID_REF -> . ID check_var_existence O

    ID              shift and go to state 198

    ID_REF                         shift and go to state 212
    S_ASSIGNATION                  shift and go to state 213

state 196

    (86) CYCLE -> FOR .

    INT             reduce using rule 86 (CYCLE -> FOR .)
    FLOAT           reduce using rule 86 (CYCLE -> FOR .)
    CHAR            reduce using rule 86 (CYCLE -> FOR .)
    STRING          reduce using rule 86 (CYCLE -> FOR .)
    BOOL            reduce using rule 86 (CYCLE -> FOR .)
    LIST            reduce using rule 86 (CYCLE -> FOR .)
    IF              reduce using rule 86 (CYCLE -> FOR .)
    FOR_CYCLE       reduce using rule 86 (CYCLE -> FOR .)
    WHILE_CYCLE     reduce using rule 86 (CYCLE -> FOR .)
    ID              reduce using rule 86 (CYCLE -> FOR .)
    R_BRACE         reduce using rule 86 (CYCLE -> FOR .)


state 197

    (18) S_BLOCK -> L_BRACE F . R_BRACE

    R_BRACE         shift and go to state 214


state 198

    (72) ID_REF -> ID . check_var_existence O
    (73) check_var_existence -> .

    L_BRACK         reduce using rule 73 (check_var_existence -> .)
    EQUALS          reduce using rule 73 (check_var_existence -> .)

    check_var_existence            shift and go to state 124

state 199

    (88) CONDITION -> IF . EXPRESSION COLON BLOCK R TICK
    (36) EXPRESSION -> . EXP G
    (47) EXP -> . TERM I
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    M                              shift and go to state 50
    empty                          shift and go to state 58
    EXP                            shift and go to state 54
    FACTOR                         shift and go to state 55
    EXPRESSION                     shift and go to state 215

state 200

    (20) F -> empty .

    R_BRACE         reduce using rule 20 (F -> empty .)


state 201

    (84) WHILE -> WHILE_CYCLE . EXPRESSION COLON BLOCK TICK
    (36) EXPRESSION -> . EXP G
    (47) EXP -> . TERM I
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    M                              shift and go to state 50
    empty                          shift and go to state 58
    EXP                            shift and go to state 54
    FACTOR                         shift and go to state 55
    EXPRESSION                     shift and go to state 216

state 202

    (109) MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK TICK . print_currentSymTab
    (3) print_currentSymTab -> .

    $end            reduce using rule 3 (print_currentSymTab -> .)

    print_currentSymTab            shift and go to state 217

state 203

    (111) DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION . COMMA EXPRESSION R_PAREN

    COMMA           shift and go to state 218


state 204

    (110) DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 219


state 205

    (112) DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 220


state 206

    (23) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK . print_currentSymTab
    (3) print_currentSymTab -> .

    SOL             reduce using rule 3 (print_currentSymTab -> .)
    INT             reduce using rule 3 (print_currentSymTab -> .)

    print_currentSymTab            shift and go to state 221

state 207

    (104) Y -> COMMA . PARAMS
    (102) PARAMS -> . TYPE store_type ID check_param_duplicates Y
    (30) TYPE -> . INT
    (31) TYPE -> . FLOAT
    (32) TYPE -> . CHAR
    (33) TYPE -> . STRING
    (34) TYPE -> . BOOL
    (35) TYPE -> . LIST

    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 16
    STRING          shift and go to state 11
    BOOL            shift and go to state 17
    LIST            shift and go to state 15

    TYPE                           shift and go to state 153
    PARAMS                         shift and go to state 222

state 208

    (102) PARAMS -> TYPE store_type ID check_param_duplicates Y .

    R_PAREN         reduce using rule 102 (PARAMS -> TYPE store_type ID check_param_duplicates Y .)


state 209

    (105) Y -> empty .

    R_PAREN         reduce using rule 105 (Y -> empty .)


state 210

    (19) F -> S_STATUTE F .

    R_BRACE         reduce using rule 19 (F -> S_STATUTE F .)


state 211

    (79) ASSIGNATION -> ID_REF EQUALS . EXPRESSION TICK
    (36) EXPRESSION -> . EXP G
    (47) EXP -> . TERM I
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    M                              shift and go to state 50
    EXP                            shift and go to state 54
    FACTOR                         shift and go to state 55
    EXPRESSION                     shift and go to state 223
    empty                          shift and go to state 58

state 212

    (83) S_ASSIGNATION -> ID_REF . EQUALS EXPRESSION

    EQUALS          shift and go to state 224


state 213

    (85) FOR -> FOR_CYCLE S_ASSIGNATION . TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK

    TICK            shift and go to state 225


state 214

    (18) S_BLOCK -> L_BRACE F R_BRACE .

    TICK            reduce using rule 18 (S_BLOCK -> L_BRACE F R_BRACE .)


state 215

    (88) CONDITION -> IF EXPRESSION . COLON BLOCK R TICK

    COLON           shift and go to state 226


state 216

    (84) WHILE -> WHILE_CYCLE EXPRESSION . COLON BLOCK TICK

    COLON           shift and go to state 227


state 217

    (109) MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK TICK print_currentSymTab .

    $end            reduce using rule 109 (MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK TICK print_currentSymTab .)


state 218

    (111) DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA . EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (47) EXP -> . TERM I
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    M                              shift and go to state 50
    EXP                            shift and go to state 54
    FACTOR                         shift and go to state 55
    EXPRESSION                     shift and go to state 228
    empty                          shift and go to state 58

state 219

    (110) DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 110 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 110 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    PLUS            reduce using rule 110 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    MINUS           reduce using rule 110 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 110 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 110 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 110 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 110 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    IS              reduce using rule 110 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    AND             reduce using rule 110 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    OR              reduce using rule 110 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 110 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    COMMA           reduce using rule 110 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    TICK            reduce using rule 110 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 110 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 110 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    COLON           reduce using rule 110 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)


state 220

    (112) DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 112 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 112 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    PLUS            reduce using rule 112 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    MINUS           reduce using rule 112 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 112 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 112 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 112 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 112 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    IS              reduce using rule 112 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    AND             reduce using rule 112 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    OR              reduce using rule 112 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 112 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    COMMA           reduce using rule 112 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    TICK            reduce using rule 112 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 112 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 112 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    COLON           reduce using rule 112 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)


state 221

    (23) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK print_currentSymTab .

    SOL             reduce using rule 23 (SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK print_currentSymTab .)
    INT             reduce using rule 23 (SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK print_currentSymTab .)


state 222

    (104) Y -> COMMA PARAMS .

    R_PAREN         reduce using rule 104 (Y -> COMMA PARAMS .)


state 223

    (79) ASSIGNATION -> ID_REF EQUALS EXPRESSION . TICK

    TICK            shift and go to state 229


state 224

    (83) S_ASSIGNATION -> ID_REF EQUALS . EXPRESSION
    (36) EXPRESSION -> . EXP G
    (47) EXP -> . TERM I
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    M                              shift and go to state 50
    EXP                            shift and go to state 54
    FACTOR                         shift and go to state 55
    EXPRESSION                     shift and go to state 230
    empty                          shift and go to state 58

state 225

    (85) FOR -> FOR_CYCLE S_ASSIGNATION TICK . EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK
    (36) EXPRESSION -> . EXP G
    (47) EXP -> . TERM I
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    M                              shift and go to state 50
    empty                          shift and go to state 58
    EXP                            shift and go to state 54
    FACTOR                         shift and go to state 55
    EXPRESSION                     shift and go to state 231

state 226

    (88) CONDITION -> IF EXPRESSION COLON . BLOCK R TICK
    (80) BLOCK -> . L_BRACE Q R_BRACE

    L_BRACE         shift and go to state 232

    BLOCK                          shift and go to state 233

state 227

    (84) WHILE -> WHILE_CYCLE EXPRESSION COLON . BLOCK TICK
    (80) BLOCK -> . L_BRACE Q R_BRACE

    L_BRACE         shift and go to state 232

    BLOCK                          shift and go to state 234

state 228

    (111) DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 235


state 229

    (79) ASSIGNATION -> ID_REF EQUALS EXPRESSION TICK .

    INT             reduce using rule 79 (ASSIGNATION -> ID_REF EQUALS EXPRESSION TICK .)
    FLOAT           reduce using rule 79 (ASSIGNATION -> ID_REF EQUALS EXPRESSION TICK .)
    CHAR            reduce using rule 79 (ASSIGNATION -> ID_REF EQUALS EXPRESSION TICK .)
    STRING          reduce using rule 79 (ASSIGNATION -> ID_REF EQUALS EXPRESSION TICK .)
    BOOL            reduce using rule 79 (ASSIGNATION -> ID_REF EQUALS EXPRESSION TICK .)
    LIST            reduce using rule 79 (ASSIGNATION -> ID_REF EQUALS EXPRESSION TICK .)
    IF              reduce using rule 79 (ASSIGNATION -> ID_REF EQUALS EXPRESSION TICK .)
    FOR_CYCLE       reduce using rule 79 (ASSIGNATION -> ID_REF EQUALS EXPRESSION TICK .)
    WHILE_CYCLE     reduce using rule 79 (ASSIGNATION -> ID_REF EQUALS EXPRESSION TICK .)
    ID              reduce using rule 79 (ASSIGNATION -> ID_REF EQUALS EXPRESSION TICK .)
    R_BRACE         reduce using rule 79 (ASSIGNATION -> ID_REF EQUALS EXPRESSION TICK .)


state 230

    (83) S_ASSIGNATION -> ID_REF EQUALS EXPRESSION .

    TICK            reduce using rule 83 (S_ASSIGNATION -> ID_REF EQUALS EXPRESSION .)
    COLON           reduce using rule 83 (S_ASSIGNATION -> ID_REF EQUALS EXPRESSION .)


state 231

    (85) FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION . TICK S_ASSIGNATION COLON BLOCK TICK

    TICK            shift and go to state 236


state 232

    (80) BLOCK -> L_BRACE . Q R_BRACE
    (81) Q -> . STATUTE Q
    (82) Q -> . empty
    (25) STATUTE -> . CONDITION
    (26) STATUTE -> . CYCLE
    (27) STATUTE -> . ASSIGNATION
    (126) empty -> .
    (88) CONDITION -> . IF EXPRESSION COLON BLOCK R TICK
    (86) CYCLE -> . FOR
    (87) CYCLE -> . WHILE
    (79) ASSIGNATION -> . ID_REF EQUALS EXPRESSION TICK
    (85) FOR -> . FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK
    (84) WHILE -> . WHILE_CYCLE EXPRESSION COLON BLOCK TICK
    (72) ID_REF -> . ID check_var_existence O

    R_BRACE         reduce using rule 126 (empty -> .)
    IF              shift and go to state 199
    FOR_CYCLE       shift and go to state 195
    WHILE_CYCLE     shift and go to state 201
    ID              shift and go to state 198

    STATUTE                        shift and go to state 238
    ASSIGNATION                    shift and go to state 188
    FOR                            shift and go to state 196
    ID_REF                         shift and go to state 191
    Q                              shift and go to state 239
    WHILE                          shift and go to state 187
    empty                          shift and go to state 237
    CONDITION                      shift and go to state 192
    CYCLE                          shift and go to state 193

state 233

    (88) CONDITION -> IF EXPRESSION COLON BLOCK . R TICK
    (89) R -> . S
    (90) R -> . T
    (91) S -> . ELIF EXPRESSION COLON BLOCK U
    (95) T -> . ELSE COLON BLOCK

    ELIF            shift and go to state 240
    ELSE            shift and go to state 241

    S                              shift and go to state 242
    R                              shift and go to state 243
    T                              shift and go to state 244

state 234

    (84) WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK . TICK

    TICK            shift and go to state 245


state 235

    (111) DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 111 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 111 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    PLUS            reduce using rule 111 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    MINUS           reduce using rule 111 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 111 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 111 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 111 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 111 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    IS              reduce using rule 111 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    AND             reduce using rule 111 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    OR              reduce using rule 111 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 111 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    COMMA           reduce using rule 111 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    TICK            reduce using rule 111 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 111 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 111 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    COLON           reduce using rule 111 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)


state 236

    (85) FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK . S_ASSIGNATION COLON BLOCK TICK
    (83) S_ASSIGNATION -> . ID_REF EQUALS EXPRESSION
    (72) ID_REF -> . ID check_var_existence O

    ID              shift and go to state 198

    ID_REF                         shift and go to state 212
    S_ASSIGNATION                  shift and go to state 246

state 237

    (82) Q -> empty .

    R_BRACE         reduce using rule 82 (Q -> empty .)


state 238

    (81) Q -> STATUTE . Q
    (81) Q -> . STATUTE Q
    (82) Q -> . empty
    (25) STATUTE -> . CONDITION
    (26) STATUTE -> . CYCLE
    (27) STATUTE -> . ASSIGNATION
    (126) empty -> .
    (88) CONDITION -> . IF EXPRESSION COLON BLOCK R TICK
    (86) CYCLE -> . FOR
    (87) CYCLE -> . WHILE
    (79) ASSIGNATION -> . ID_REF EQUALS EXPRESSION TICK
    (85) FOR -> . FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK
    (84) WHILE -> . WHILE_CYCLE EXPRESSION COLON BLOCK TICK
    (72) ID_REF -> . ID check_var_existence O

    R_BRACE         reduce using rule 126 (empty -> .)
    IF              shift and go to state 199
    FOR_CYCLE       shift and go to state 195
    WHILE_CYCLE     shift and go to state 201
    ID              shift and go to state 198

    STATUTE                        shift and go to state 238
    ASSIGNATION                    shift and go to state 188
    FOR                            shift and go to state 196
    ID_REF                         shift and go to state 191
    Q                              shift and go to state 247
    WHILE                          shift and go to state 187
    empty                          shift and go to state 237
    CONDITION                      shift and go to state 192
    CYCLE                          shift and go to state 193

state 239

    (80) BLOCK -> L_BRACE Q . R_BRACE

    R_BRACE         shift and go to state 248


state 240

    (91) S -> ELIF . EXPRESSION COLON BLOCK U
    (36) EXPRESSION -> . EXP G
    (47) EXP -> . TERM I
    (52) TERM -> . FACTOR K
    (57) FACTOR -> . L_PAREN EXPRESSION R_PAREN
    (58) FACTOR -> . M CON_VAR
    (59) M -> . PLUS
    (60) M -> . MINUS
    (61) M -> . empty
    (126) empty -> .

    L_PAREN         shift and go to state 51
    PLUS            shift and go to state 53
    MINUS           shift and go to state 57
    INT_CONT        reduce using rule 126 (empty -> .)
    STRING_CONT     reduce using rule 126 (empty -> .)
    CHAR_CONT       reduce using rule 126 (empty -> .)
    FLOAT_CONT      reduce using rule 126 (empty -> .)
    BOOL_CONT       reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    DRAW_LINE_R     reduce using rule 126 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 126 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 126 (empty -> .)
    MOVE_UP_R       reduce using rule 126 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 126 (empty -> .)
    MOVE_DOWN_R     reduce using rule 126 (empty -> .)
    MOVE_LEFT_R     reduce using rule 126 (empty -> .)
    PRINT_R         reduce using rule 126 (empty -> .)

    TERM                           shift and go to state 52
    M                              shift and go to state 50
    empty                          shift and go to state 58
    EXP                            shift and go to state 54
    FACTOR                         shift and go to state 55
    EXPRESSION                     shift and go to state 249

state 241

    (95) T -> ELSE . COLON BLOCK

    COLON           shift and go to state 250


state 242

    (89) R -> S .

    TICK            reduce using rule 89 (R -> S .)


state 243

    (88) CONDITION -> IF EXPRESSION COLON BLOCK R . TICK

    TICK            shift and go to state 251


state 244

    (90) R -> T .

    TICK            reduce using rule 90 (R -> T .)


state 245

    (84) WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .

    IF              reduce using rule 84 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    FOR_CYCLE       reduce using rule 84 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    WHILE_CYCLE     reduce using rule 84 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    ID              reduce using rule 84 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    R_BRACE         reduce using rule 84 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    INT             reduce using rule 84 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    FLOAT           reduce using rule 84 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    CHAR            reduce using rule 84 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    STRING          reduce using rule 84 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    BOOL            reduce using rule 84 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    LIST            reduce using rule 84 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)


state 246

    (85) FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION . COLON BLOCK TICK

    COLON           shift and go to state 252


state 247

    (81) Q -> STATUTE Q .

    R_BRACE         reduce using rule 81 (Q -> STATUTE Q .)


state 248

    (80) BLOCK -> L_BRACE Q R_BRACE .

    TICK            reduce using rule 80 (BLOCK -> L_BRACE Q R_BRACE .)
    ELIF            reduce using rule 80 (BLOCK -> L_BRACE Q R_BRACE .)
    ELSE            reduce using rule 80 (BLOCK -> L_BRACE Q R_BRACE .)


state 249

    (91) S -> ELIF EXPRESSION . COLON BLOCK U

    COLON           shift and go to state 253


state 250

    (95) T -> ELSE COLON . BLOCK
    (80) BLOCK -> . L_BRACE Q R_BRACE

    L_BRACE         shift and go to state 232

    BLOCK                          shift and go to state 254

state 251

    (88) CONDITION -> IF EXPRESSION COLON BLOCK R TICK .

    IF              reduce using rule 88 (CONDITION -> IF EXPRESSION COLON BLOCK R TICK .)
    FOR_CYCLE       reduce using rule 88 (CONDITION -> IF EXPRESSION COLON BLOCK R TICK .)
    WHILE_CYCLE     reduce using rule 88 (CONDITION -> IF EXPRESSION COLON BLOCK R TICK .)
    ID              reduce using rule 88 (CONDITION -> IF EXPRESSION COLON BLOCK R TICK .)
    R_BRACE         reduce using rule 88 (CONDITION -> IF EXPRESSION COLON BLOCK R TICK .)
    INT             reduce using rule 88 (CONDITION -> IF EXPRESSION COLON BLOCK R TICK .)
    FLOAT           reduce using rule 88 (CONDITION -> IF EXPRESSION COLON BLOCK R TICK .)
    CHAR            reduce using rule 88 (CONDITION -> IF EXPRESSION COLON BLOCK R TICK .)
    STRING          reduce using rule 88 (CONDITION -> IF EXPRESSION COLON BLOCK R TICK .)
    BOOL            reduce using rule 88 (CONDITION -> IF EXPRESSION COLON BLOCK R TICK .)
    LIST            reduce using rule 88 (CONDITION -> IF EXPRESSION COLON BLOCK R TICK .)


state 252

    (85) FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON . BLOCK TICK
    (80) BLOCK -> . L_BRACE Q R_BRACE

    L_BRACE         shift and go to state 232

    BLOCK                          shift and go to state 255

state 253

    (91) S -> ELIF EXPRESSION COLON . BLOCK U
    (80) BLOCK -> . L_BRACE Q R_BRACE

    L_BRACE         shift and go to state 232

    BLOCK                          shift and go to state 256

state 254

    (95) T -> ELSE COLON BLOCK .

    TICK            reduce using rule 95 (T -> ELSE COLON BLOCK .)


state 255

    (85) FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK . TICK

    TICK            shift and go to state 257


state 256

    (91) S -> ELIF EXPRESSION COLON BLOCK . U
    (92) U -> . S
    (93) U -> . T
    (94) U -> . empty
    (91) S -> . ELIF EXPRESSION COLON BLOCK U
    (95) T -> . ELSE COLON BLOCK
    (126) empty -> .

    ELIF            shift and go to state 240
    ELSE            shift and go to state 241
    TICK            reduce using rule 126 (empty -> .)

    S                              shift and go to state 258
    U                              shift and go to state 261
    T                              shift and go to state 260
    empty                          shift and go to state 259

state 257

    (85) FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .

    INT             reduce using rule 85 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    FLOAT           reduce using rule 85 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    CHAR            reduce using rule 85 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    STRING          reduce using rule 85 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    BOOL            reduce using rule 85 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    LIST            reduce using rule 85 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    IF              reduce using rule 85 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    FOR_CYCLE       reduce using rule 85 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    WHILE_CYCLE     reduce using rule 85 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    ID              reduce using rule 85 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    R_BRACE         reduce using rule 85 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)


state 258

    (92) U -> S .

    TICK            reduce using rule 92 (U -> S .)


state 259

    (94) U -> empty .

    TICK            reduce using rule 94 (U -> empty .)


state 260

    (93) U -> T .

    TICK            reduce using rule 93 (U -> T .)


state 261

    (91) S -> ELIF EXPRESSION COLON BLOCK U .

    TICK            reduce using rule 91 (S -> ELIF EXPRESSION COLON BLOCK U .)

