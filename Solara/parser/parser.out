Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    MULTI_COMMENT
    SINGLE_COMMENT

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID create_global_fun COLON VAR_BLOCK print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION
Rule 2     create_global_fun -> <empty>
Rule 3     print_currentSymTab -> <empty>
Rule 4     VAR_BLOCK -> VARS COLON AA
Rule 5     AA -> VAR_DEFINITIONS AA
Rule 6     AA -> empty
Rule 7     VAR_DEFINITIONS -> TYPE store_type A TICK
Rule 8     store_type -> <empty>
Rule 9     A -> ID check_var_duplicates B D
Rule 10    check_var_duplicates -> <empty>
Rule 11    B -> EQUALS C assign_var_value
Rule 12    B -> empty
Rule 13    assign_var_value -> <empty>
Rule 14    C -> EXPRESSION
Rule 15    C -> LIST_EXP
Rule 16    D -> COMMA A
Rule 17    D -> empty
Rule 18    S_BLOCK -> L_BRACE F R_BRACE
Rule 19    F -> S_STATUTE F
Rule 20    F -> empty
Rule 21    S_STATUTE -> VAR_DEFINITIONS
Rule 22    S_STATUTE -> STATUTE
Rule 23    SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK print_currentSymTab
Rule 24    check_sol_duplicates -> <empty>
Rule 25    STATUTE -> CONDITION
Rule 26    STATUTE -> CYCLE
Rule 27    STATUTE -> ASSIGNATION
Rule 28    S_TYPE -> VOID
Rule 29    S_TYPE -> TYPE
Rule 30    TYPE -> INT
Rule 31    TYPE -> FLOAT
Rule 32    TYPE -> CHAR
Rule 33    TYPE -> STRING
Rule 34    TYPE -> BOOL
Rule 35    TYPE -> LIST
Rule 36    EXPRESSION -> EXP G
Rule 37    G -> H EXP process_possible_relop_operation
Rule 38    G -> empty
Rule 39    process_possible_relop_operation -> <empty>
Rule 40    H -> LESS_T
Rule 41    H -> GREATER_T
Rule 42    H -> GREATER_T_EQUALS
Rule 43    H -> LESS_T_EQUALS
Rule 44    H -> IS
Rule 45    H -> AND
Rule 46    H -> OR
Rule 47    H -> PERCENTAGE
Rule 48    EXP -> TERM process_possible_plus_minus_operation I
Rule 49    process_possible_plus_minus_operation -> <empty>
Rule 50    I -> J EXP
Rule 51    I -> empty
Rule 52    J -> PLUS
Rule 53    J -> MINUS
Rule 54    TERM -> FACTOR process_possible_multiply_divide_operation K
Rule 55    process_possible_multiply_divide_operation -> <empty>
Rule 56    K -> L TERM
Rule 57    K -> empty
Rule 58    L -> MULTIPLY
Rule 59    L -> DIVIDE
Rule 60    FACTOR -> L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
Rule 61    FACTOR -> M CON_VAR check_sign_type_correspondence
Rule 62    push_false_bottom -> <empty>
Rule 63    pop_false_bottom -> <empty>
Rule 64    check_sign_type_correspondence -> <empty>
Rule 65    M -> PLUS
Rule 66    M -> MINUS
Rule 67    M -> empty
Rule 68    CON_VAR -> ID_REF
Rule 69    CON_VAR -> CON_VAR_TERMINAL
Rule 70    CON_VAR -> SOLUTION_CALL
Rule 71    CON_VAR -> PREDEFINED_SOLS
Rule 72    CON_VAR_TERMINAL -> INT_CONT
Rule 73    CON_VAR_TERMINAL -> STRING_CONT
Rule 74    CON_VAR_TERMINAL -> CHAR_CONT
Rule 75    CON_VAR_TERMINAL -> FLOAT_CONT
Rule 76    CON_VAR_TERMINAL -> BOOL_CONT
Rule 77    NEGATION -> N EXPRESSION
Rule 78    N -> NOT
Rule 79    ID_REF -> ID check_var_existence get_var_type O
Rule 80    check_var_existence -> <empty>
Rule 81    get_var_type -> <empty>
Rule 82    O -> L_BRACK EXPRESSION check_int_type R_BRACK
Rule 83    O -> empty
Rule 84    check_int_type -> <empty>
Rule 85    LIST_EXP -> L_BRACK EXPRESSION P R_BRACK
Rule 86    P -> COMMA EXPRESSION P
Rule 87    P -> empty
Rule 88    ASSIGNATION -> ID_REF EQUALS append_equals EXPRESSION process_assignation_operation TICK
Rule 89    append_equals -> <empty>
Rule 90    process_assignation_operation -> <empty>
Rule 91    BLOCK -> L_BRACE Q R_BRACE
Rule 92    Q -> STATUTE Q
Rule 93    Q -> empty
Rule 94    S_ASSIGNATION -> ID_REF EQUALS append_equals EXPRESSION process_assignation_operation
Rule 95    WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK
Rule 96    FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK
Rule 97    CYCLE -> FOR
Rule 98    CYCLE -> WHILE
Rule 99    CONDITION -> IF append_false_bottom EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing
Rule 100   end_condition_operation_processing -> <empty>
Rule 101   append_false_bottom -> <empty>
Rule 102   process_condition_operation -> <empty>
Rule 103   R -> S
Rule 104   R -> T
Rule 105   S -> ELIF process_elif_operation EXPRESSION process_condition_operation COLON BLOCK U
Rule 106   process_elif_operation -> <empty>
Rule 107   U -> S
Rule 108   U -> T
Rule 109   U -> empty
Rule 110   T -> ELSE process_else_operation COLON BLOCK end_else_operation_processing
Rule 111   process_else_operation -> <empty>
Rule 112   end_else_operation_processing -> <empty>
Rule 113   SOLUTION_CALL -> ID check_sol_existence L_PAREN V R_PAREN
Rule 114   check_sol_existence -> <empty>
Rule 115   V -> W X
Rule 116   W -> EXPRESSION
Rule 117   W -> NEGATION
Rule 118   X -> COMMA V
Rule 119   X -> empty
Rule 120   PARAMS -> TYPE store_type ID check_param_duplicates Y
Rule 121   check_param_duplicates -> <empty>
Rule 122   Y -> COMMA PARAMS
Rule 123   Y -> empty
Rule 124   SOL_DEFINITIONS -> Z
Rule 125   Z -> SOLUTION_DEF Z
Rule 126   Z -> empty
Rule 127   MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK TICK print_currentSymTab
Rule 128   DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
Rule 129   DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
Rule 130   DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
Rule 131   MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN
Rule 132   MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN
Rule 133   MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN
Rule 134   MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN
Rule 135   PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN
Rule 136   PREDEFINED_SOLS -> DRAW_LINE
Rule 137   PREDEFINED_SOLS -> DRAW_CIRCLE
Rule 138   PREDEFINED_SOLS -> DRAW_RECTANGLE
Rule 139   PREDEFINED_SOLS -> MOVE_UP
Rule 140   PREDEFINED_SOLS -> MOVE_RIGHT
Rule 141   PREDEFINED_SOLS -> MOVE_DOWN
Rule 142   PREDEFINED_SOLS -> MOVE_LEFT
Rule 143   PREDEFINED_SOLS -> PRINT
Rule 144   empty -> <empty>

Terminals, with rules where they appear

AND                  : 45
BOOL                 : 34
BOOL_CONT            : 76
CHAR                 : 32
CHAR_CONT            : 74
COLON                : 1 1 4 23 95 96 99 105 110 127
COMMA                : 16 86 118 122 128 128 129 129 129 130 130
DIVIDE               : 59
DRAW_CIRCLE_R        : 128
DRAW_LINE_R          : 129
DRAW_RECTANGLE_R     : 130
ELIF                 : 105
ELSE                 : 110
EQUALS               : 11 88 94
FLOAT                : 31
FLOAT_CONT           : 75
FOR_CYCLE            : 96
GREATER_T            : 41
GREATER_T_EQUALS     : 42
ID                   : 1 9 23 79 113 120
IF                   : 99
INT                  : 30 127
INT_CONT             : 72
IS                   : 44
LESS_T               : 40
LESS_T_EQUALS        : 43
LIST                 : 35
L_BRACE              : 18 91
L_BRACK              : 82 85
L_PAREN              : 23 60 113 127 128 129 130 131 132 133 134 135
MAIN_R               : 127
MINUS                : 53 66
MOVE_DOWN_R          : 133
MOVE_LEFT_R          : 134
MOVE_RIGHT_R         : 132
MOVE_UP_R            : 131
MULTIPLY             : 58
MULTI_COMMENT        : 
NOT                  : 78
OR                   : 46
PERCENTAGE           : 47
PLUS                 : 52 65
PRINT_R              : 135
PROGRAM              : 1
R_BRACE              : 18 91
R_BRACK              : 82 85
R_PAREN              : 23 60 113 127 128 129 130 131 132 133 134 135
SINGLE_COMMENT       : 
SOL                  : 23
SOLS                 : 1
STRING               : 33
STRING_CONT          : 73
TICK                 : 7 23 88 95 96 96 96 99 127
VARS                 : 4
VOID                 : 28
WHILE_CYCLE          : 95
error                : 

Nonterminals, with rules where they appear

A                    : 7 16
AA                   : 4 5
ASSIGNATION          : 27
B                    : 9
BLOCK                : 95 96 99 105 110
C                    : 11
CONDITION            : 25
CON_VAR              : 61
CON_VAR_TERMINAL     : 69
CYCLE                : 26
D                    : 9
DRAW_CIRCLE          : 137
DRAW_LINE            : 136
DRAW_RECTANGLE       : 138
EXP                  : 36 37 50
EXPRESSION           : 14 60 77 82 85 86 88 94 95 96 99 105 116 128 128 128 129 129 129 129 130 130 130 131 132 133 134 135
F                    : 18 19
FACTOR               : 54
FOR                  : 97
G                    : 36
H                    : 37
I                    : 48
ID_REF               : 68 88 94
J                    : 50
K                    : 54
L                    : 56
LIST_EXP             : 15
M                    : 61
MAIN_DEFINITION      : 1
MOVE_DOWN            : 141
MOVE_LEFT            : 142
MOVE_RIGHT           : 140
MOVE_UP              : 139
N                    : 77
NEGATION             : 117
O                    : 79
P                    : 85 86
PARAMS               : 23 122
PREDEFINED_SOLS      : 71
PRINT                : 143
Q                    : 91 92
R                    : 99
S                    : 103 107
SOLUTION_CALL        : 70
SOLUTION_DEF         : 125
SOL_DEFINITIONS      : 1
STATUTE              : 22 92
S_ASSIGNATION        : 96 96
S_BLOCK              : 23 127
S_STATUTE            : 19
S_TYPE               : 23
T                    : 104 108
TERM                 : 48 56
TYPE                 : 7 29 120
U                    : 105
V                    : 113 118
VAR_BLOCK            : 1
VAR_DEFINITIONS      : 5 21
W                    : 115
WHILE                : 98
X                    : 115
Y                    : 120
Z                    : 124 125
append_equals        : 88 94
append_false_bottom  : 99
assign_var_value     : 11
check_int_type       : 82
check_param_duplicates : 120
check_sign_type_correspondence : 61
check_sol_duplicates : 23 127
check_sol_existence  : 113
check_var_duplicates : 9
check_var_existence  : 79
create_global_fun    : 1
empty                : 6 12 17 20 38 51 57 67 83 87 93 109 119 123 126
end_condition_operation_processing : 99
end_else_operation_processing : 110
get_var_type         : 79
pop_false_bottom     : 60
print_currentSymTab  : 1 23 127
process_assignation_operation : 88 94
process_condition_operation : 99 105
process_elif_operation : 105
process_else_operation : 110
process_possible_multiply_divide_operation : 54
process_possible_plus_minus_operation : 48
process_possible_relop_operation : 37
program              : 0
push_false_bottom    : 60
store_type           : 7 23 120 127

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID create_global_fun COLON VAR_BLOCK print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID create_global_fun COLON VAR_BLOCK print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . create_global_fun COLON VAR_BLOCK print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION
    (2) create_global_fun -> .

    COLON           reduce using rule 2 (create_global_fun -> .)

    create_global_fun              shift and go to state 4

state 4

    (1) program -> PROGRAM ID create_global_fun . COLON VAR_BLOCK print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION

    COLON           shift and go to state 5


state 5

    (1) program -> PROGRAM ID create_global_fun COLON . VAR_BLOCK print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION
    (4) VAR_BLOCK -> . VARS COLON AA

    VARS            shift and go to state 6

    VAR_BLOCK                      shift and go to state 7

state 6

    (4) VAR_BLOCK -> VARS . COLON AA

    COLON           shift and go to state 8


state 7

    (1) program -> PROGRAM ID create_global_fun COLON VAR_BLOCK . print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION
    (3) print_currentSymTab -> .

    SOLS            reduce using rule 3 (print_currentSymTab -> .)

    print_currentSymTab            shift and go to state 9

state 8

    (4) VAR_BLOCK -> VARS COLON . AA
    (5) AA -> . VAR_DEFINITIONS AA
    (6) AA -> . empty
    (7) VAR_DEFINITIONS -> . TYPE store_type A TICK
    (144) empty -> .
    (30) TYPE -> . INT
    (31) TYPE -> . FLOAT
    (32) TYPE -> . CHAR
    (33) TYPE -> . STRING
    (34) TYPE -> . BOOL
    (35) TYPE -> . LIST

    SOLS            reduce using rule 144 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 16
    STRING          shift and go to state 11
    BOOL            shift and go to state 17
    LIST            shift and go to state 15

    AA                             shift and go to state 10
    VAR_DEFINITIONS                shift and go to state 12
    TYPE                           shift and go to state 18
    empty                          shift and go to state 19

state 9

    (1) program -> PROGRAM ID create_global_fun COLON VAR_BLOCK print_currentSymTab . SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION

    SOLS            shift and go to state 20


state 10

    (4) VAR_BLOCK -> VARS COLON AA .

    SOLS            reduce using rule 4 (VAR_BLOCK -> VARS COLON AA .)


state 11

    (33) TYPE -> STRING .

    ID              reduce using rule 33 (TYPE -> STRING .)


state 12

    (5) AA -> VAR_DEFINITIONS . AA
    (5) AA -> . VAR_DEFINITIONS AA
    (6) AA -> . empty
    (7) VAR_DEFINITIONS -> . TYPE store_type A TICK
    (144) empty -> .
    (30) TYPE -> . INT
    (31) TYPE -> . FLOAT
    (32) TYPE -> . CHAR
    (33) TYPE -> . STRING
    (34) TYPE -> . BOOL
    (35) TYPE -> . LIST

    SOLS            reduce using rule 144 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 16
    STRING          shift and go to state 11
    BOOL            shift and go to state 17
    LIST            shift and go to state 15

    AA                             shift and go to state 21
    VAR_DEFINITIONS                shift and go to state 12
    TYPE                           shift and go to state 18
    empty                          shift and go to state 19

state 13

    (30) TYPE -> INT .

    ID              reduce using rule 30 (TYPE -> INT .)


state 14

    (31) TYPE -> FLOAT .

    ID              reduce using rule 31 (TYPE -> FLOAT .)


state 15

    (35) TYPE -> LIST .

    ID              reduce using rule 35 (TYPE -> LIST .)


state 16

    (32) TYPE -> CHAR .

    ID              reduce using rule 32 (TYPE -> CHAR .)


state 17

    (34) TYPE -> BOOL .

    ID              reduce using rule 34 (TYPE -> BOOL .)


state 18

    (7) VAR_DEFINITIONS -> TYPE . store_type A TICK
    (8) store_type -> .

    ID              reduce using rule 8 (store_type -> .)

    store_type                     shift and go to state 22

state 19

    (6) AA -> empty .

    SOLS            reduce using rule 6 (AA -> empty .)


state 20

    (1) program -> PROGRAM ID create_global_fun COLON VAR_BLOCK print_currentSymTab SOLS . COLON SOL_DEFINITIONS MAIN_DEFINITION

    COLON           shift and go to state 23


state 21

    (5) AA -> VAR_DEFINITIONS AA .

    SOLS            reduce using rule 5 (AA -> VAR_DEFINITIONS AA .)


state 22

    (7) VAR_DEFINITIONS -> TYPE store_type . A TICK
    (9) A -> . ID check_var_duplicates B D

    ID              shift and go to state 25

    A                              shift and go to state 24

state 23

    (1) program -> PROGRAM ID create_global_fun COLON VAR_BLOCK print_currentSymTab SOLS COLON . SOL_DEFINITIONS MAIN_DEFINITION
    (124) SOL_DEFINITIONS -> . Z
    (125) Z -> . SOLUTION_DEF Z
    (126) Z -> . empty
    (23) SOLUTION_DEF -> . SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK print_currentSymTab
    (144) empty -> .

    SOL             shift and go to state 27
    INT             reduce using rule 144 (empty -> .)

    SOLUTION_DEF                   shift and go to state 26
    SOL_DEFINITIONS                shift and go to state 28
    Z                              shift and go to state 29
    empty                          shift and go to state 30

state 24

    (7) VAR_DEFINITIONS -> TYPE store_type A . TICK

    TICK            shift and go to state 31


state 25

    (9) A -> ID . check_var_duplicates B D
    (10) check_var_duplicates -> .

    EQUALS          reduce using rule 10 (check_var_duplicates -> .)
    COMMA           reduce using rule 10 (check_var_duplicates -> .)
    TICK            reduce using rule 10 (check_var_duplicates -> .)

    check_var_duplicates           shift and go to state 32

state 26

    (125) Z -> SOLUTION_DEF . Z
    (125) Z -> . SOLUTION_DEF Z
    (126) Z -> . empty
    (23) SOLUTION_DEF -> . SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK print_currentSymTab
    (144) empty -> .

    SOL             shift and go to state 27
    INT             reduce using rule 144 (empty -> .)

    SOLUTION_DEF                   shift and go to state 26
    Z                              shift and go to state 33
    empty                          shift and go to state 30

state 27

    (23) SOLUTION_DEF -> SOL . S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK print_currentSymTab
    (28) S_TYPE -> . VOID
    (29) S_TYPE -> . TYPE
    (30) TYPE -> . INT
    (31) TYPE -> . FLOAT
    (32) TYPE -> . CHAR
    (33) TYPE -> . STRING
    (34) TYPE -> . BOOL
    (35) TYPE -> . LIST

    VOID            shift and go to state 34
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 16
    STRING          shift and go to state 11
    BOOL            shift and go to state 17
    LIST            shift and go to state 15

    S_TYPE                         shift and go to state 35
    TYPE                           shift and go to state 36

state 28

    (1) program -> PROGRAM ID create_global_fun COLON VAR_BLOCK print_currentSymTab SOLS COLON SOL_DEFINITIONS . MAIN_DEFINITION
    (127) MAIN_DEFINITION -> . INT store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK TICK print_currentSymTab

    INT             shift and go to state 37

    MAIN_DEFINITION                shift and go to state 38

state 29

    (124) SOL_DEFINITIONS -> Z .

    INT             reduce using rule 124 (SOL_DEFINITIONS -> Z .)


state 30

    (126) Z -> empty .

    INT             reduce using rule 126 (Z -> empty .)


state 31

    (7) VAR_DEFINITIONS -> TYPE store_type A TICK .

    INT             reduce using rule 7 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    FLOAT           reduce using rule 7 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    CHAR            reduce using rule 7 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    STRING          reduce using rule 7 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    BOOL            reduce using rule 7 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    LIST            reduce using rule 7 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    IF              reduce using rule 7 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    FOR_CYCLE       reduce using rule 7 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    WHILE_CYCLE     reduce using rule 7 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    ID              reduce using rule 7 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    R_BRACE         reduce using rule 7 (VAR_DEFINITIONS -> TYPE store_type A TICK .)
    SOLS            reduce using rule 7 (VAR_DEFINITIONS -> TYPE store_type A TICK .)


state 32

    (9) A -> ID check_var_duplicates . B D
    (11) B -> . EQUALS C assign_var_value
    (12) B -> . empty
    (144) empty -> .

    EQUALS          shift and go to state 40
    COMMA           reduce using rule 144 (empty -> .)
    TICK            reduce using rule 144 (empty -> .)

    B                              shift and go to state 39
    empty                          shift and go to state 41

state 33

    (125) Z -> SOLUTION_DEF Z .

    INT             reduce using rule 125 (Z -> SOLUTION_DEF Z .)


state 34

    (28) S_TYPE -> VOID .

    ID              reduce using rule 28 (S_TYPE -> VOID .)


state 35

    (23) SOLUTION_DEF -> SOL S_TYPE . store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK print_currentSymTab
    (8) store_type -> .

    ID              reduce using rule 8 (store_type -> .)

    store_type                     shift and go to state 42

state 36

    (29) S_TYPE -> TYPE .

    ID              reduce using rule 29 (S_TYPE -> TYPE .)


state 37

    (127) MAIN_DEFINITION -> INT . store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK TICK print_currentSymTab
    (8) store_type -> .

    MAIN_R          reduce using rule 8 (store_type -> .)

    store_type                     shift and go to state 43

state 38

    (1) program -> PROGRAM ID create_global_fun COLON VAR_BLOCK print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION .

    $end            reduce using rule 1 (program -> PROGRAM ID create_global_fun COLON VAR_BLOCK print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION .)


state 39

    (9) A -> ID check_var_duplicates B . D
    (16) D -> . COMMA A
    (17) D -> . empty
    (144) empty -> .

    COMMA           shift and go to state 45
    TICK            reduce using rule 144 (empty -> .)

    D                              shift and go to state 44
    empty                          shift and go to state 46

state 40

    (11) B -> EQUALS . C assign_var_value
    (14) C -> . EXPRESSION
    (15) C -> . LIST_EXP
    (36) EXPRESSION -> . EXP G
    (85) LIST_EXP -> . L_BRACK EXPRESSION P R_BRACK
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_BRACK         shift and go to state 57
    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    LIST_EXP                       shift and go to state 47
    C                              shift and go to state 55
    M                              shift and go to state 56
    TERM                           shift and go to state 51
    empty                          shift and go to state 54
    EXP                            shift and go to state 49
    FACTOR                         shift and go to state 58
    EXPRESSION                     shift and go to state 53

state 41

    (12) B -> empty .

    COMMA           reduce using rule 12 (B -> empty .)
    TICK            reduce using rule 12 (B -> empty .)


state 42

    (23) SOLUTION_DEF -> SOL S_TYPE store_type . ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK print_currentSymTab

    ID              shift and go to state 59


state 43

    (127) MAIN_DEFINITION -> INT store_type . MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK TICK print_currentSymTab

    MAIN_R          shift and go to state 60


state 44

    (9) A -> ID check_var_duplicates B D .

    TICK            reduce using rule 9 (A -> ID check_var_duplicates B D .)


state 45

    (16) D -> COMMA . A
    (9) A -> . ID check_var_duplicates B D

    ID              shift and go to state 25

    A                              shift and go to state 61

state 46

    (17) D -> empty .

    TICK            reduce using rule 17 (D -> empty .)


state 47

    (15) C -> LIST_EXP .

    COMMA           reduce using rule 15 (C -> LIST_EXP .)
    TICK            reduce using rule 15 (C -> LIST_EXP .)


state 48

    (60) FACTOR -> L_PAREN . push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (62) push_false_bottom -> .

    L_PAREN         reduce using rule 62 (push_false_bottom -> .)
    PLUS            reduce using rule 62 (push_false_bottom -> .)
    MINUS           reduce using rule 62 (push_false_bottom -> .)
    ID              reduce using rule 62 (push_false_bottom -> .)
    INT_CONT        reduce using rule 62 (push_false_bottom -> .)
    STRING_CONT     reduce using rule 62 (push_false_bottom -> .)
    CHAR_CONT       reduce using rule 62 (push_false_bottom -> .)
    FLOAT_CONT      reduce using rule 62 (push_false_bottom -> .)
    BOOL_CONT       reduce using rule 62 (push_false_bottom -> .)
    DRAW_LINE_R     reduce using rule 62 (push_false_bottom -> .)
    DRAW_CIRCLE_R   reduce using rule 62 (push_false_bottom -> .)
    DRAW_RECTANGLE_R reduce using rule 62 (push_false_bottom -> .)
    MOVE_UP_R       reduce using rule 62 (push_false_bottom -> .)
    MOVE_RIGHT_R    reduce using rule 62 (push_false_bottom -> .)
    MOVE_DOWN_R     reduce using rule 62 (push_false_bottom -> .)
    MOVE_LEFT_R     reduce using rule 62 (push_false_bottom -> .)
    PRINT_R         reduce using rule 62 (push_false_bottom -> .)

    push_false_bottom              shift and go to state 62

state 49

    (36) EXPRESSION -> EXP . G
    (37) G -> . H EXP process_possible_relop_operation
    (38) G -> . empty
    (40) H -> . LESS_T
    (41) H -> . GREATER_T
    (42) H -> . GREATER_T_EQUALS
    (43) H -> . LESS_T_EQUALS
    (44) H -> . IS
    (45) H -> . AND
    (46) H -> . OR
    (47) H -> . PERCENTAGE
    (144) empty -> .

    LESS_T          shift and go to state 68
    GREATER_T       shift and go to state 64
    GREATER_T_EQUALS shift and go to state 70
    LESS_T_EQUALS   shift and go to state 69
    IS              shift and go to state 67
    AND             shift and go to state 63
    OR              shift and go to state 72
    PERCENTAGE      shift and go to state 71
    COMMA           reduce using rule 144 (empty -> .)
    TICK            reduce using rule 144 (empty -> .)
    R_BRACK         reduce using rule 144 (empty -> .)
    R_PAREN         reduce using rule 144 (empty -> .)
    COLON           reduce using rule 144 (empty -> .)

    H                              shift and go to state 66
    empty                          shift and go to state 73
    G                              shift and go to state 65

state 50

    (66) M -> MINUS .

    ID              reduce using rule 66 (M -> MINUS .)
    INT_CONT        reduce using rule 66 (M -> MINUS .)
    STRING_CONT     reduce using rule 66 (M -> MINUS .)
    CHAR_CONT       reduce using rule 66 (M -> MINUS .)
    FLOAT_CONT      reduce using rule 66 (M -> MINUS .)
    BOOL_CONT       reduce using rule 66 (M -> MINUS .)
    DRAW_LINE_R     reduce using rule 66 (M -> MINUS .)
    DRAW_CIRCLE_R   reduce using rule 66 (M -> MINUS .)
    DRAW_RECTANGLE_R reduce using rule 66 (M -> MINUS .)
    MOVE_UP_R       reduce using rule 66 (M -> MINUS .)
    MOVE_RIGHT_R    reduce using rule 66 (M -> MINUS .)
    MOVE_DOWN_R     reduce using rule 66 (M -> MINUS .)
    MOVE_LEFT_R     reduce using rule 66 (M -> MINUS .)
    PRINT_R         reduce using rule 66 (M -> MINUS .)


state 51

    (48) EXP -> TERM . process_possible_plus_minus_operation I
    (49) process_possible_plus_minus_operation -> .

    PLUS            reduce using rule 49 (process_possible_plus_minus_operation -> .)
    MINUS           reduce using rule 49 (process_possible_plus_minus_operation -> .)
    LESS_T          reduce using rule 49 (process_possible_plus_minus_operation -> .)
    GREATER_T       reduce using rule 49 (process_possible_plus_minus_operation -> .)
    GREATER_T_EQUALS reduce using rule 49 (process_possible_plus_minus_operation -> .)
    LESS_T_EQUALS   reduce using rule 49 (process_possible_plus_minus_operation -> .)
    IS              reduce using rule 49 (process_possible_plus_minus_operation -> .)
    AND             reduce using rule 49 (process_possible_plus_minus_operation -> .)
    OR              reduce using rule 49 (process_possible_plus_minus_operation -> .)
    PERCENTAGE      reduce using rule 49 (process_possible_plus_minus_operation -> .)
    COMMA           reduce using rule 49 (process_possible_plus_minus_operation -> .)
    TICK            reduce using rule 49 (process_possible_plus_minus_operation -> .)
    R_BRACK         reduce using rule 49 (process_possible_plus_minus_operation -> .)
    R_PAREN         reduce using rule 49 (process_possible_plus_minus_operation -> .)
    COLON           reduce using rule 49 (process_possible_plus_minus_operation -> .)

    process_possible_plus_minus_operation shift and go to state 74

state 52

    (65) M -> PLUS .

    ID              reduce using rule 65 (M -> PLUS .)
    INT_CONT        reduce using rule 65 (M -> PLUS .)
    STRING_CONT     reduce using rule 65 (M -> PLUS .)
    CHAR_CONT       reduce using rule 65 (M -> PLUS .)
    FLOAT_CONT      reduce using rule 65 (M -> PLUS .)
    BOOL_CONT       reduce using rule 65 (M -> PLUS .)
    DRAW_LINE_R     reduce using rule 65 (M -> PLUS .)
    DRAW_CIRCLE_R   reduce using rule 65 (M -> PLUS .)
    DRAW_RECTANGLE_R reduce using rule 65 (M -> PLUS .)
    MOVE_UP_R       reduce using rule 65 (M -> PLUS .)
    MOVE_RIGHT_R    reduce using rule 65 (M -> PLUS .)
    MOVE_DOWN_R     reduce using rule 65 (M -> PLUS .)
    MOVE_LEFT_R     reduce using rule 65 (M -> PLUS .)
    PRINT_R         reduce using rule 65 (M -> PLUS .)


state 53

    (14) C -> EXPRESSION .

    COMMA           reduce using rule 14 (C -> EXPRESSION .)
    TICK            reduce using rule 14 (C -> EXPRESSION .)


state 54

    (67) M -> empty .

    ID              reduce using rule 67 (M -> empty .)
    INT_CONT        reduce using rule 67 (M -> empty .)
    STRING_CONT     reduce using rule 67 (M -> empty .)
    CHAR_CONT       reduce using rule 67 (M -> empty .)
    FLOAT_CONT      reduce using rule 67 (M -> empty .)
    BOOL_CONT       reduce using rule 67 (M -> empty .)
    DRAW_LINE_R     reduce using rule 67 (M -> empty .)
    DRAW_CIRCLE_R   reduce using rule 67 (M -> empty .)
    DRAW_RECTANGLE_R reduce using rule 67 (M -> empty .)
    MOVE_UP_R       reduce using rule 67 (M -> empty .)
    MOVE_RIGHT_R    reduce using rule 67 (M -> empty .)
    MOVE_DOWN_R     reduce using rule 67 (M -> empty .)
    MOVE_LEFT_R     reduce using rule 67 (M -> empty .)
    PRINT_R         reduce using rule 67 (M -> empty .)


state 55

    (11) B -> EQUALS C . assign_var_value
    (13) assign_var_value -> .

    COMMA           reduce using rule 13 (assign_var_value -> .)
    TICK            reduce using rule 13 (assign_var_value -> .)

    assign_var_value               shift and go to state 75

state 56

    (61) FACTOR -> M . CON_VAR check_sign_type_correspondence
    (68) CON_VAR -> . ID_REF
    (69) CON_VAR -> . CON_VAR_TERMINAL
    (70) CON_VAR -> . SOLUTION_CALL
    (71) CON_VAR -> . PREDEFINED_SOLS
    (79) ID_REF -> . ID check_var_existence get_var_type O
    (72) CON_VAR_TERMINAL -> . INT_CONT
    (73) CON_VAR_TERMINAL -> . STRING_CONT
    (74) CON_VAR_TERMINAL -> . CHAR_CONT
    (75) CON_VAR_TERMINAL -> . FLOAT_CONT
    (76) CON_VAR_TERMINAL -> . BOOL_CONT
    (113) SOLUTION_CALL -> . ID check_sol_existence L_PAREN V R_PAREN
    (136) PREDEFINED_SOLS -> . DRAW_LINE
    (137) PREDEFINED_SOLS -> . DRAW_CIRCLE
    (138) PREDEFINED_SOLS -> . DRAW_RECTANGLE
    (139) PREDEFINED_SOLS -> . MOVE_UP
    (140) PREDEFINED_SOLS -> . MOVE_RIGHT
    (141) PREDEFINED_SOLS -> . MOVE_DOWN
    (142) PREDEFINED_SOLS -> . MOVE_LEFT
    (143) PREDEFINED_SOLS -> . PRINT
    (129) DRAW_LINE -> . DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
    (128) DRAW_CIRCLE -> . DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
    (130) DRAW_RECTANGLE -> . DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
    (131) MOVE_UP -> . MOVE_UP_R L_PAREN EXPRESSION R_PAREN
    (132) MOVE_RIGHT -> . MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN
    (133) MOVE_DOWN -> . MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN
    (134) MOVE_LEFT -> . MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN
    (135) PRINT -> . PRINT_R L_PAREN EXPRESSION R_PAREN

    ID              shift and go to state 95
    INT_CONT        shift and go to state 81
    STRING_CONT     shift and go to state 83
    CHAR_CONT       shift and go to state 90
    FLOAT_CONT      shift and go to state 97
    BOOL_CONT       shift and go to state 96
    DRAW_LINE_R     shift and go to state 76
    DRAW_CIRCLE_R   shift and go to state 82
    DRAW_RECTANGLE_R shift and go to state 94
    MOVE_UP_R       shift and go to state 98
    MOVE_RIGHT_R    shift and go to state 101
    MOVE_DOWN_R     shift and go to state 77
    MOVE_LEFT_R     shift and go to state 79
    PRINT_R         shift and go to state 78

    MOVE_RIGHT                     shift and go to state 87
    MOVE_LEFT                      shift and go to state 84
    ID_REF                         shift and go to state 85
    SOLUTION_CALL                  shift and go to state 86
    PREDEFINED_SOLS                shift and go to state 99
    CON_VAR_TERMINAL               shift and go to state 92
    DRAW_RECTANGLE                 shift and go to state 93
    MOVE_DOWN                      shift and go to state 100
    DRAW_LINE                      shift and go to state 91
    PRINT                          shift and go to state 80
    CON_VAR                        shift and go to state 89
    MOVE_UP                        shift and go to state 88
    DRAW_CIRCLE                    shift and go to state 102

state 57

    (85) LIST_EXP -> L_BRACK . EXPRESSION P R_BRACK
    (36) EXPRESSION -> . EXP G
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    TERM                           shift and go to state 51
    M                              shift and go to state 56
    empty                          shift and go to state 54
    EXP                            shift and go to state 49
    FACTOR                         shift and go to state 58
    EXPRESSION                     shift and go to state 103

state 58

    (54) TERM -> FACTOR . process_possible_multiply_divide_operation K
    (55) process_possible_multiply_divide_operation -> .

    MULTIPLY        reduce using rule 55 (process_possible_multiply_divide_operation -> .)
    DIVIDE          reduce using rule 55 (process_possible_multiply_divide_operation -> .)
    PLUS            reduce using rule 55 (process_possible_multiply_divide_operation -> .)
    MINUS           reduce using rule 55 (process_possible_multiply_divide_operation -> .)
    LESS_T          reduce using rule 55 (process_possible_multiply_divide_operation -> .)
    GREATER_T       reduce using rule 55 (process_possible_multiply_divide_operation -> .)
    GREATER_T_EQUALS reduce using rule 55 (process_possible_multiply_divide_operation -> .)
    LESS_T_EQUALS   reduce using rule 55 (process_possible_multiply_divide_operation -> .)
    IS              reduce using rule 55 (process_possible_multiply_divide_operation -> .)
    AND             reduce using rule 55 (process_possible_multiply_divide_operation -> .)
    OR              reduce using rule 55 (process_possible_multiply_divide_operation -> .)
    PERCENTAGE      reduce using rule 55 (process_possible_multiply_divide_operation -> .)
    COMMA           reduce using rule 55 (process_possible_multiply_divide_operation -> .)
    TICK            reduce using rule 55 (process_possible_multiply_divide_operation -> .)
    R_BRACK         reduce using rule 55 (process_possible_multiply_divide_operation -> .)
    R_PAREN         reduce using rule 55 (process_possible_multiply_divide_operation -> .)
    COLON           reduce using rule 55 (process_possible_multiply_divide_operation -> .)

    process_possible_multiply_divide_operation shift and go to state 104

state 59

    (23) SOLUTION_DEF -> SOL S_TYPE store_type ID . check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK print_currentSymTab
    (24) check_sol_duplicates -> .

    L_PAREN         reduce using rule 24 (check_sol_duplicates -> .)

    check_sol_duplicates           shift and go to state 105

state 60

    (127) MAIN_DEFINITION -> INT store_type MAIN_R . check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK TICK print_currentSymTab
    (24) check_sol_duplicates -> .

    L_PAREN         reduce using rule 24 (check_sol_duplicates -> .)

    check_sol_duplicates           shift and go to state 106

state 61

    (16) D -> COMMA A .

    TICK            reduce using rule 16 (D -> COMMA A .)


state 62

    (60) FACTOR -> L_PAREN push_false_bottom . EXPRESSION R_PAREN pop_false_bottom
    (36) EXPRESSION -> . EXP G
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    TERM                           shift and go to state 51
    M                              shift and go to state 56
    empty                          shift and go to state 54
    EXP                            shift and go to state 49
    FACTOR                         shift and go to state 58
    EXPRESSION                     shift and go to state 107

state 63

    (45) H -> AND .

    L_PAREN         reduce using rule 45 (H -> AND .)
    PLUS            reduce using rule 45 (H -> AND .)
    MINUS           reduce using rule 45 (H -> AND .)
    ID              reduce using rule 45 (H -> AND .)
    INT_CONT        reduce using rule 45 (H -> AND .)
    STRING_CONT     reduce using rule 45 (H -> AND .)
    CHAR_CONT       reduce using rule 45 (H -> AND .)
    FLOAT_CONT      reduce using rule 45 (H -> AND .)
    BOOL_CONT       reduce using rule 45 (H -> AND .)
    DRAW_LINE_R     reduce using rule 45 (H -> AND .)
    DRAW_CIRCLE_R   reduce using rule 45 (H -> AND .)
    DRAW_RECTANGLE_R reduce using rule 45 (H -> AND .)
    MOVE_UP_R       reduce using rule 45 (H -> AND .)
    MOVE_RIGHT_R    reduce using rule 45 (H -> AND .)
    MOVE_DOWN_R     reduce using rule 45 (H -> AND .)
    MOVE_LEFT_R     reduce using rule 45 (H -> AND .)
    PRINT_R         reduce using rule 45 (H -> AND .)


state 64

    (41) H -> GREATER_T .

    L_PAREN         reduce using rule 41 (H -> GREATER_T .)
    PLUS            reduce using rule 41 (H -> GREATER_T .)
    MINUS           reduce using rule 41 (H -> GREATER_T .)
    ID              reduce using rule 41 (H -> GREATER_T .)
    INT_CONT        reduce using rule 41 (H -> GREATER_T .)
    STRING_CONT     reduce using rule 41 (H -> GREATER_T .)
    CHAR_CONT       reduce using rule 41 (H -> GREATER_T .)
    FLOAT_CONT      reduce using rule 41 (H -> GREATER_T .)
    BOOL_CONT       reduce using rule 41 (H -> GREATER_T .)
    DRAW_LINE_R     reduce using rule 41 (H -> GREATER_T .)
    DRAW_CIRCLE_R   reduce using rule 41 (H -> GREATER_T .)
    DRAW_RECTANGLE_R reduce using rule 41 (H -> GREATER_T .)
    MOVE_UP_R       reduce using rule 41 (H -> GREATER_T .)
    MOVE_RIGHT_R    reduce using rule 41 (H -> GREATER_T .)
    MOVE_DOWN_R     reduce using rule 41 (H -> GREATER_T .)
    MOVE_LEFT_R     reduce using rule 41 (H -> GREATER_T .)
    PRINT_R         reduce using rule 41 (H -> GREATER_T .)


state 65

    (36) EXPRESSION -> EXP G .

    R_PAREN         reduce using rule 36 (EXPRESSION -> EXP G .)
    COLON           reduce using rule 36 (EXPRESSION -> EXP G .)
    COMMA           reduce using rule 36 (EXPRESSION -> EXP G .)
    TICK            reduce using rule 36 (EXPRESSION -> EXP G .)
    R_BRACK         reduce using rule 36 (EXPRESSION -> EXP G .)


state 66

    (37) G -> H . EXP process_possible_relop_operation
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    M                              shift and go to state 56
    TERM                           shift and go to state 51
    empty                          shift and go to state 54
    EXP                            shift and go to state 108
    FACTOR                         shift and go to state 58

state 67

    (44) H -> IS .

    L_PAREN         reduce using rule 44 (H -> IS .)
    PLUS            reduce using rule 44 (H -> IS .)
    MINUS           reduce using rule 44 (H -> IS .)
    ID              reduce using rule 44 (H -> IS .)
    INT_CONT        reduce using rule 44 (H -> IS .)
    STRING_CONT     reduce using rule 44 (H -> IS .)
    CHAR_CONT       reduce using rule 44 (H -> IS .)
    FLOAT_CONT      reduce using rule 44 (H -> IS .)
    BOOL_CONT       reduce using rule 44 (H -> IS .)
    DRAW_LINE_R     reduce using rule 44 (H -> IS .)
    DRAW_CIRCLE_R   reduce using rule 44 (H -> IS .)
    DRAW_RECTANGLE_R reduce using rule 44 (H -> IS .)
    MOVE_UP_R       reduce using rule 44 (H -> IS .)
    MOVE_RIGHT_R    reduce using rule 44 (H -> IS .)
    MOVE_DOWN_R     reduce using rule 44 (H -> IS .)
    MOVE_LEFT_R     reduce using rule 44 (H -> IS .)
    PRINT_R         reduce using rule 44 (H -> IS .)


state 68

    (40) H -> LESS_T .

    L_PAREN         reduce using rule 40 (H -> LESS_T .)
    PLUS            reduce using rule 40 (H -> LESS_T .)
    MINUS           reduce using rule 40 (H -> LESS_T .)
    ID              reduce using rule 40 (H -> LESS_T .)
    INT_CONT        reduce using rule 40 (H -> LESS_T .)
    STRING_CONT     reduce using rule 40 (H -> LESS_T .)
    CHAR_CONT       reduce using rule 40 (H -> LESS_T .)
    FLOAT_CONT      reduce using rule 40 (H -> LESS_T .)
    BOOL_CONT       reduce using rule 40 (H -> LESS_T .)
    DRAW_LINE_R     reduce using rule 40 (H -> LESS_T .)
    DRAW_CIRCLE_R   reduce using rule 40 (H -> LESS_T .)
    DRAW_RECTANGLE_R reduce using rule 40 (H -> LESS_T .)
    MOVE_UP_R       reduce using rule 40 (H -> LESS_T .)
    MOVE_RIGHT_R    reduce using rule 40 (H -> LESS_T .)
    MOVE_DOWN_R     reduce using rule 40 (H -> LESS_T .)
    MOVE_LEFT_R     reduce using rule 40 (H -> LESS_T .)
    PRINT_R         reduce using rule 40 (H -> LESS_T .)


state 69

    (43) H -> LESS_T_EQUALS .

    L_PAREN         reduce using rule 43 (H -> LESS_T_EQUALS .)
    PLUS            reduce using rule 43 (H -> LESS_T_EQUALS .)
    MINUS           reduce using rule 43 (H -> LESS_T_EQUALS .)
    ID              reduce using rule 43 (H -> LESS_T_EQUALS .)
    INT_CONT        reduce using rule 43 (H -> LESS_T_EQUALS .)
    STRING_CONT     reduce using rule 43 (H -> LESS_T_EQUALS .)
    CHAR_CONT       reduce using rule 43 (H -> LESS_T_EQUALS .)
    FLOAT_CONT      reduce using rule 43 (H -> LESS_T_EQUALS .)
    BOOL_CONT       reduce using rule 43 (H -> LESS_T_EQUALS .)
    DRAW_LINE_R     reduce using rule 43 (H -> LESS_T_EQUALS .)
    DRAW_CIRCLE_R   reduce using rule 43 (H -> LESS_T_EQUALS .)
    DRAW_RECTANGLE_R reduce using rule 43 (H -> LESS_T_EQUALS .)
    MOVE_UP_R       reduce using rule 43 (H -> LESS_T_EQUALS .)
    MOVE_RIGHT_R    reduce using rule 43 (H -> LESS_T_EQUALS .)
    MOVE_DOWN_R     reduce using rule 43 (H -> LESS_T_EQUALS .)
    MOVE_LEFT_R     reduce using rule 43 (H -> LESS_T_EQUALS .)
    PRINT_R         reduce using rule 43 (H -> LESS_T_EQUALS .)


state 70

    (42) H -> GREATER_T_EQUALS .

    L_PAREN         reduce using rule 42 (H -> GREATER_T_EQUALS .)
    PLUS            reduce using rule 42 (H -> GREATER_T_EQUALS .)
    MINUS           reduce using rule 42 (H -> GREATER_T_EQUALS .)
    ID              reduce using rule 42 (H -> GREATER_T_EQUALS .)
    INT_CONT        reduce using rule 42 (H -> GREATER_T_EQUALS .)
    STRING_CONT     reduce using rule 42 (H -> GREATER_T_EQUALS .)
    CHAR_CONT       reduce using rule 42 (H -> GREATER_T_EQUALS .)
    FLOAT_CONT      reduce using rule 42 (H -> GREATER_T_EQUALS .)
    BOOL_CONT       reduce using rule 42 (H -> GREATER_T_EQUALS .)
    DRAW_LINE_R     reduce using rule 42 (H -> GREATER_T_EQUALS .)
    DRAW_CIRCLE_R   reduce using rule 42 (H -> GREATER_T_EQUALS .)
    DRAW_RECTANGLE_R reduce using rule 42 (H -> GREATER_T_EQUALS .)
    MOVE_UP_R       reduce using rule 42 (H -> GREATER_T_EQUALS .)
    MOVE_RIGHT_R    reduce using rule 42 (H -> GREATER_T_EQUALS .)
    MOVE_DOWN_R     reduce using rule 42 (H -> GREATER_T_EQUALS .)
    MOVE_LEFT_R     reduce using rule 42 (H -> GREATER_T_EQUALS .)
    PRINT_R         reduce using rule 42 (H -> GREATER_T_EQUALS .)


state 71

    (47) H -> PERCENTAGE .

    L_PAREN         reduce using rule 47 (H -> PERCENTAGE .)
    PLUS            reduce using rule 47 (H -> PERCENTAGE .)
    MINUS           reduce using rule 47 (H -> PERCENTAGE .)
    ID              reduce using rule 47 (H -> PERCENTAGE .)
    INT_CONT        reduce using rule 47 (H -> PERCENTAGE .)
    STRING_CONT     reduce using rule 47 (H -> PERCENTAGE .)
    CHAR_CONT       reduce using rule 47 (H -> PERCENTAGE .)
    FLOAT_CONT      reduce using rule 47 (H -> PERCENTAGE .)
    BOOL_CONT       reduce using rule 47 (H -> PERCENTAGE .)
    DRAW_LINE_R     reduce using rule 47 (H -> PERCENTAGE .)
    DRAW_CIRCLE_R   reduce using rule 47 (H -> PERCENTAGE .)
    DRAW_RECTANGLE_R reduce using rule 47 (H -> PERCENTAGE .)
    MOVE_UP_R       reduce using rule 47 (H -> PERCENTAGE .)
    MOVE_RIGHT_R    reduce using rule 47 (H -> PERCENTAGE .)
    MOVE_DOWN_R     reduce using rule 47 (H -> PERCENTAGE .)
    MOVE_LEFT_R     reduce using rule 47 (H -> PERCENTAGE .)
    PRINT_R         reduce using rule 47 (H -> PERCENTAGE .)


state 72

    (46) H -> OR .

    L_PAREN         reduce using rule 46 (H -> OR .)
    PLUS            reduce using rule 46 (H -> OR .)
    MINUS           reduce using rule 46 (H -> OR .)
    ID              reduce using rule 46 (H -> OR .)
    INT_CONT        reduce using rule 46 (H -> OR .)
    STRING_CONT     reduce using rule 46 (H -> OR .)
    CHAR_CONT       reduce using rule 46 (H -> OR .)
    FLOAT_CONT      reduce using rule 46 (H -> OR .)
    BOOL_CONT       reduce using rule 46 (H -> OR .)
    DRAW_LINE_R     reduce using rule 46 (H -> OR .)
    DRAW_CIRCLE_R   reduce using rule 46 (H -> OR .)
    DRAW_RECTANGLE_R reduce using rule 46 (H -> OR .)
    MOVE_UP_R       reduce using rule 46 (H -> OR .)
    MOVE_RIGHT_R    reduce using rule 46 (H -> OR .)
    MOVE_DOWN_R     reduce using rule 46 (H -> OR .)
    MOVE_LEFT_R     reduce using rule 46 (H -> OR .)
    PRINT_R         reduce using rule 46 (H -> OR .)


state 73

    (38) G -> empty .

    COMMA           reduce using rule 38 (G -> empty .)
    TICK            reduce using rule 38 (G -> empty .)
    R_BRACK         reduce using rule 38 (G -> empty .)
    R_PAREN         reduce using rule 38 (G -> empty .)
    COLON           reduce using rule 38 (G -> empty .)


state 74

    (48) EXP -> TERM process_possible_plus_minus_operation . I
    (50) I -> . J EXP
    (51) I -> . empty
    (52) J -> . PLUS
    (53) J -> . MINUS
    (144) empty -> .

    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    LESS_T          reduce using rule 144 (empty -> .)
    GREATER_T       reduce using rule 144 (empty -> .)
    GREATER_T_EQUALS reduce using rule 144 (empty -> .)
    LESS_T_EQUALS   reduce using rule 144 (empty -> .)
    IS              reduce using rule 144 (empty -> .)
    AND             reduce using rule 144 (empty -> .)
    OR              reduce using rule 144 (empty -> .)
    PERCENTAGE      reduce using rule 144 (empty -> .)
    COMMA           reduce using rule 144 (empty -> .)
    TICK            reduce using rule 144 (empty -> .)
    R_BRACK         reduce using rule 144 (empty -> .)
    R_PAREN         reduce using rule 144 (empty -> .)
    COLON           reduce using rule 144 (empty -> .)

    I                              shift and go to state 109
    J                              shift and go to state 110
    empty                          shift and go to state 113

state 75

    (11) B -> EQUALS C assign_var_value .

    COMMA           reduce using rule 11 (B -> EQUALS C assign_var_value .)
    TICK            reduce using rule 11 (B -> EQUALS C assign_var_value .)


state 76

    (129) DRAW_LINE -> DRAW_LINE_R . L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN

    L_PAREN         shift and go to state 114


state 77

    (133) MOVE_DOWN -> MOVE_DOWN_R . L_PAREN EXPRESSION R_PAREN

    L_PAREN         shift and go to state 115


state 78

    (135) PRINT -> PRINT_R . L_PAREN EXPRESSION R_PAREN

    L_PAREN         shift and go to state 116


state 79

    (134) MOVE_LEFT -> MOVE_LEFT_R . L_PAREN EXPRESSION R_PAREN

    L_PAREN         shift and go to state 117


state 80

    (143) PREDEFINED_SOLS -> PRINT .

    MULTIPLY        reduce using rule 143 (PREDEFINED_SOLS -> PRINT .)
    DIVIDE          reduce using rule 143 (PREDEFINED_SOLS -> PRINT .)
    PLUS            reduce using rule 143 (PREDEFINED_SOLS -> PRINT .)
    MINUS           reduce using rule 143 (PREDEFINED_SOLS -> PRINT .)
    LESS_T          reduce using rule 143 (PREDEFINED_SOLS -> PRINT .)
    GREATER_T       reduce using rule 143 (PREDEFINED_SOLS -> PRINT .)
    GREATER_T_EQUALS reduce using rule 143 (PREDEFINED_SOLS -> PRINT .)
    LESS_T_EQUALS   reduce using rule 143 (PREDEFINED_SOLS -> PRINT .)
    IS              reduce using rule 143 (PREDEFINED_SOLS -> PRINT .)
    AND             reduce using rule 143 (PREDEFINED_SOLS -> PRINT .)
    OR              reduce using rule 143 (PREDEFINED_SOLS -> PRINT .)
    PERCENTAGE      reduce using rule 143 (PREDEFINED_SOLS -> PRINT .)
    COMMA           reduce using rule 143 (PREDEFINED_SOLS -> PRINT .)
    TICK            reduce using rule 143 (PREDEFINED_SOLS -> PRINT .)
    R_BRACK         reduce using rule 143 (PREDEFINED_SOLS -> PRINT .)
    R_PAREN         reduce using rule 143 (PREDEFINED_SOLS -> PRINT .)
    COLON           reduce using rule 143 (PREDEFINED_SOLS -> PRINT .)


state 81

    (72) CON_VAR_TERMINAL -> INT_CONT .

    MULTIPLY        reduce using rule 72 (CON_VAR_TERMINAL -> INT_CONT .)
    DIVIDE          reduce using rule 72 (CON_VAR_TERMINAL -> INT_CONT .)
    PLUS            reduce using rule 72 (CON_VAR_TERMINAL -> INT_CONT .)
    MINUS           reduce using rule 72 (CON_VAR_TERMINAL -> INT_CONT .)
    LESS_T          reduce using rule 72 (CON_VAR_TERMINAL -> INT_CONT .)
    GREATER_T       reduce using rule 72 (CON_VAR_TERMINAL -> INT_CONT .)
    GREATER_T_EQUALS reduce using rule 72 (CON_VAR_TERMINAL -> INT_CONT .)
    LESS_T_EQUALS   reduce using rule 72 (CON_VAR_TERMINAL -> INT_CONT .)
    IS              reduce using rule 72 (CON_VAR_TERMINAL -> INT_CONT .)
    AND             reduce using rule 72 (CON_VAR_TERMINAL -> INT_CONT .)
    OR              reduce using rule 72 (CON_VAR_TERMINAL -> INT_CONT .)
    PERCENTAGE      reduce using rule 72 (CON_VAR_TERMINAL -> INT_CONT .)
    COMMA           reduce using rule 72 (CON_VAR_TERMINAL -> INT_CONT .)
    TICK            reduce using rule 72 (CON_VAR_TERMINAL -> INT_CONT .)
    R_BRACK         reduce using rule 72 (CON_VAR_TERMINAL -> INT_CONT .)
    R_PAREN         reduce using rule 72 (CON_VAR_TERMINAL -> INT_CONT .)
    COLON           reduce using rule 72 (CON_VAR_TERMINAL -> INT_CONT .)


state 82

    (128) DRAW_CIRCLE -> DRAW_CIRCLE_R . L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN

    L_PAREN         shift and go to state 118


state 83

    (73) CON_VAR_TERMINAL -> STRING_CONT .

    MULTIPLY        reduce using rule 73 (CON_VAR_TERMINAL -> STRING_CONT .)
    DIVIDE          reduce using rule 73 (CON_VAR_TERMINAL -> STRING_CONT .)
    PLUS            reduce using rule 73 (CON_VAR_TERMINAL -> STRING_CONT .)
    MINUS           reduce using rule 73 (CON_VAR_TERMINAL -> STRING_CONT .)
    LESS_T          reduce using rule 73 (CON_VAR_TERMINAL -> STRING_CONT .)
    GREATER_T       reduce using rule 73 (CON_VAR_TERMINAL -> STRING_CONT .)
    GREATER_T_EQUALS reduce using rule 73 (CON_VAR_TERMINAL -> STRING_CONT .)
    LESS_T_EQUALS   reduce using rule 73 (CON_VAR_TERMINAL -> STRING_CONT .)
    IS              reduce using rule 73 (CON_VAR_TERMINAL -> STRING_CONT .)
    AND             reduce using rule 73 (CON_VAR_TERMINAL -> STRING_CONT .)
    OR              reduce using rule 73 (CON_VAR_TERMINAL -> STRING_CONT .)
    PERCENTAGE      reduce using rule 73 (CON_VAR_TERMINAL -> STRING_CONT .)
    COMMA           reduce using rule 73 (CON_VAR_TERMINAL -> STRING_CONT .)
    TICK            reduce using rule 73 (CON_VAR_TERMINAL -> STRING_CONT .)
    R_BRACK         reduce using rule 73 (CON_VAR_TERMINAL -> STRING_CONT .)
    R_PAREN         reduce using rule 73 (CON_VAR_TERMINAL -> STRING_CONT .)
    COLON           reduce using rule 73 (CON_VAR_TERMINAL -> STRING_CONT .)


state 84

    (142) PREDEFINED_SOLS -> MOVE_LEFT .

    MULTIPLY        reduce using rule 142 (PREDEFINED_SOLS -> MOVE_LEFT .)
    DIVIDE          reduce using rule 142 (PREDEFINED_SOLS -> MOVE_LEFT .)
    PLUS            reduce using rule 142 (PREDEFINED_SOLS -> MOVE_LEFT .)
    MINUS           reduce using rule 142 (PREDEFINED_SOLS -> MOVE_LEFT .)
    LESS_T          reduce using rule 142 (PREDEFINED_SOLS -> MOVE_LEFT .)
    GREATER_T       reduce using rule 142 (PREDEFINED_SOLS -> MOVE_LEFT .)
    GREATER_T_EQUALS reduce using rule 142 (PREDEFINED_SOLS -> MOVE_LEFT .)
    LESS_T_EQUALS   reduce using rule 142 (PREDEFINED_SOLS -> MOVE_LEFT .)
    IS              reduce using rule 142 (PREDEFINED_SOLS -> MOVE_LEFT .)
    AND             reduce using rule 142 (PREDEFINED_SOLS -> MOVE_LEFT .)
    OR              reduce using rule 142 (PREDEFINED_SOLS -> MOVE_LEFT .)
    PERCENTAGE      reduce using rule 142 (PREDEFINED_SOLS -> MOVE_LEFT .)
    COMMA           reduce using rule 142 (PREDEFINED_SOLS -> MOVE_LEFT .)
    TICK            reduce using rule 142 (PREDEFINED_SOLS -> MOVE_LEFT .)
    R_BRACK         reduce using rule 142 (PREDEFINED_SOLS -> MOVE_LEFT .)
    R_PAREN         reduce using rule 142 (PREDEFINED_SOLS -> MOVE_LEFT .)
    COLON           reduce using rule 142 (PREDEFINED_SOLS -> MOVE_LEFT .)


state 85

    (68) CON_VAR -> ID_REF .

    MULTIPLY        reduce using rule 68 (CON_VAR -> ID_REF .)
    DIVIDE          reduce using rule 68 (CON_VAR -> ID_REF .)
    PLUS            reduce using rule 68 (CON_VAR -> ID_REF .)
    MINUS           reduce using rule 68 (CON_VAR -> ID_REF .)
    LESS_T          reduce using rule 68 (CON_VAR -> ID_REF .)
    GREATER_T       reduce using rule 68 (CON_VAR -> ID_REF .)
    GREATER_T_EQUALS reduce using rule 68 (CON_VAR -> ID_REF .)
    LESS_T_EQUALS   reduce using rule 68 (CON_VAR -> ID_REF .)
    IS              reduce using rule 68 (CON_VAR -> ID_REF .)
    AND             reduce using rule 68 (CON_VAR -> ID_REF .)
    OR              reduce using rule 68 (CON_VAR -> ID_REF .)
    PERCENTAGE      reduce using rule 68 (CON_VAR -> ID_REF .)
    COMMA           reduce using rule 68 (CON_VAR -> ID_REF .)
    TICK            reduce using rule 68 (CON_VAR -> ID_REF .)
    R_BRACK         reduce using rule 68 (CON_VAR -> ID_REF .)
    R_PAREN         reduce using rule 68 (CON_VAR -> ID_REF .)
    COLON           reduce using rule 68 (CON_VAR -> ID_REF .)


state 86

    (70) CON_VAR -> SOLUTION_CALL .

    MULTIPLY        reduce using rule 70 (CON_VAR -> SOLUTION_CALL .)
    DIVIDE          reduce using rule 70 (CON_VAR -> SOLUTION_CALL .)
    PLUS            reduce using rule 70 (CON_VAR -> SOLUTION_CALL .)
    MINUS           reduce using rule 70 (CON_VAR -> SOLUTION_CALL .)
    LESS_T          reduce using rule 70 (CON_VAR -> SOLUTION_CALL .)
    GREATER_T       reduce using rule 70 (CON_VAR -> SOLUTION_CALL .)
    GREATER_T_EQUALS reduce using rule 70 (CON_VAR -> SOLUTION_CALL .)
    LESS_T_EQUALS   reduce using rule 70 (CON_VAR -> SOLUTION_CALL .)
    IS              reduce using rule 70 (CON_VAR -> SOLUTION_CALL .)
    AND             reduce using rule 70 (CON_VAR -> SOLUTION_CALL .)
    OR              reduce using rule 70 (CON_VAR -> SOLUTION_CALL .)
    PERCENTAGE      reduce using rule 70 (CON_VAR -> SOLUTION_CALL .)
    COMMA           reduce using rule 70 (CON_VAR -> SOLUTION_CALL .)
    TICK            reduce using rule 70 (CON_VAR -> SOLUTION_CALL .)
    R_BRACK         reduce using rule 70 (CON_VAR -> SOLUTION_CALL .)
    R_PAREN         reduce using rule 70 (CON_VAR -> SOLUTION_CALL .)
    COLON           reduce using rule 70 (CON_VAR -> SOLUTION_CALL .)


state 87

    (140) PREDEFINED_SOLS -> MOVE_RIGHT .

    MULTIPLY        reduce using rule 140 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    DIVIDE          reduce using rule 140 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    PLUS            reduce using rule 140 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    MINUS           reduce using rule 140 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    LESS_T          reduce using rule 140 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    GREATER_T       reduce using rule 140 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    GREATER_T_EQUALS reduce using rule 140 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    LESS_T_EQUALS   reduce using rule 140 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    IS              reduce using rule 140 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    AND             reduce using rule 140 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    OR              reduce using rule 140 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    PERCENTAGE      reduce using rule 140 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    COMMA           reduce using rule 140 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    TICK            reduce using rule 140 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    R_BRACK         reduce using rule 140 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    R_PAREN         reduce using rule 140 (PREDEFINED_SOLS -> MOVE_RIGHT .)
    COLON           reduce using rule 140 (PREDEFINED_SOLS -> MOVE_RIGHT .)


state 88

    (139) PREDEFINED_SOLS -> MOVE_UP .

    MULTIPLY        reduce using rule 139 (PREDEFINED_SOLS -> MOVE_UP .)
    DIVIDE          reduce using rule 139 (PREDEFINED_SOLS -> MOVE_UP .)
    PLUS            reduce using rule 139 (PREDEFINED_SOLS -> MOVE_UP .)
    MINUS           reduce using rule 139 (PREDEFINED_SOLS -> MOVE_UP .)
    LESS_T          reduce using rule 139 (PREDEFINED_SOLS -> MOVE_UP .)
    GREATER_T       reduce using rule 139 (PREDEFINED_SOLS -> MOVE_UP .)
    GREATER_T_EQUALS reduce using rule 139 (PREDEFINED_SOLS -> MOVE_UP .)
    LESS_T_EQUALS   reduce using rule 139 (PREDEFINED_SOLS -> MOVE_UP .)
    IS              reduce using rule 139 (PREDEFINED_SOLS -> MOVE_UP .)
    AND             reduce using rule 139 (PREDEFINED_SOLS -> MOVE_UP .)
    OR              reduce using rule 139 (PREDEFINED_SOLS -> MOVE_UP .)
    PERCENTAGE      reduce using rule 139 (PREDEFINED_SOLS -> MOVE_UP .)
    COMMA           reduce using rule 139 (PREDEFINED_SOLS -> MOVE_UP .)
    TICK            reduce using rule 139 (PREDEFINED_SOLS -> MOVE_UP .)
    R_BRACK         reduce using rule 139 (PREDEFINED_SOLS -> MOVE_UP .)
    R_PAREN         reduce using rule 139 (PREDEFINED_SOLS -> MOVE_UP .)
    COLON           reduce using rule 139 (PREDEFINED_SOLS -> MOVE_UP .)


state 89

    (61) FACTOR -> M CON_VAR . check_sign_type_correspondence
    (64) check_sign_type_correspondence -> .

    MULTIPLY        reduce using rule 64 (check_sign_type_correspondence -> .)
    DIVIDE          reduce using rule 64 (check_sign_type_correspondence -> .)
    PLUS            reduce using rule 64 (check_sign_type_correspondence -> .)
    MINUS           reduce using rule 64 (check_sign_type_correspondence -> .)
    LESS_T          reduce using rule 64 (check_sign_type_correspondence -> .)
    GREATER_T       reduce using rule 64 (check_sign_type_correspondence -> .)
    GREATER_T_EQUALS reduce using rule 64 (check_sign_type_correspondence -> .)
    LESS_T_EQUALS   reduce using rule 64 (check_sign_type_correspondence -> .)
    IS              reduce using rule 64 (check_sign_type_correspondence -> .)
    AND             reduce using rule 64 (check_sign_type_correspondence -> .)
    OR              reduce using rule 64 (check_sign_type_correspondence -> .)
    PERCENTAGE      reduce using rule 64 (check_sign_type_correspondence -> .)
    COMMA           reduce using rule 64 (check_sign_type_correspondence -> .)
    TICK            reduce using rule 64 (check_sign_type_correspondence -> .)
    R_BRACK         reduce using rule 64 (check_sign_type_correspondence -> .)
    R_PAREN         reduce using rule 64 (check_sign_type_correspondence -> .)
    COLON           reduce using rule 64 (check_sign_type_correspondence -> .)

    check_sign_type_correspondence shift and go to state 119

state 90

    (74) CON_VAR_TERMINAL -> CHAR_CONT .

    MULTIPLY        reduce using rule 74 (CON_VAR_TERMINAL -> CHAR_CONT .)
    DIVIDE          reduce using rule 74 (CON_VAR_TERMINAL -> CHAR_CONT .)
    PLUS            reduce using rule 74 (CON_VAR_TERMINAL -> CHAR_CONT .)
    MINUS           reduce using rule 74 (CON_VAR_TERMINAL -> CHAR_CONT .)
    LESS_T          reduce using rule 74 (CON_VAR_TERMINAL -> CHAR_CONT .)
    GREATER_T       reduce using rule 74 (CON_VAR_TERMINAL -> CHAR_CONT .)
    GREATER_T_EQUALS reduce using rule 74 (CON_VAR_TERMINAL -> CHAR_CONT .)
    LESS_T_EQUALS   reduce using rule 74 (CON_VAR_TERMINAL -> CHAR_CONT .)
    IS              reduce using rule 74 (CON_VAR_TERMINAL -> CHAR_CONT .)
    AND             reduce using rule 74 (CON_VAR_TERMINAL -> CHAR_CONT .)
    OR              reduce using rule 74 (CON_VAR_TERMINAL -> CHAR_CONT .)
    PERCENTAGE      reduce using rule 74 (CON_VAR_TERMINAL -> CHAR_CONT .)
    COMMA           reduce using rule 74 (CON_VAR_TERMINAL -> CHAR_CONT .)
    TICK            reduce using rule 74 (CON_VAR_TERMINAL -> CHAR_CONT .)
    R_BRACK         reduce using rule 74 (CON_VAR_TERMINAL -> CHAR_CONT .)
    R_PAREN         reduce using rule 74 (CON_VAR_TERMINAL -> CHAR_CONT .)
    COLON           reduce using rule 74 (CON_VAR_TERMINAL -> CHAR_CONT .)


state 91

    (136) PREDEFINED_SOLS -> DRAW_LINE .

    MULTIPLY        reduce using rule 136 (PREDEFINED_SOLS -> DRAW_LINE .)
    DIVIDE          reduce using rule 136 (PREDEFINED_SOLS -> DRAW_LINE .)
    PLUS            reduce using rule 136 (PREDEFINED_SOLS -> DRAW_LINE .)
    MINUS           reduce using rule 136 (PREDEFINED_SOLS -> DRAW_LINE .)
    LESS_T          reduce using rule 136 (PREDEFINED_SOLS -> DRAW_LINE .)
    GREATER_T       reduce using rule 136 (PREDEFINED_SOLS -> DRAW_LINE .)
    GREATER_T_EQUALS reduce using rule 136 (PREDEFINED_SOLS -> DRAW_LINE .)
    LESS_T_EQUALS   reduce using rule 136 (PREDEFINED_SOLS -> DRAW_LINE .)
    IS              reduce using rule 136 (PREDEFINED_SOLS -> DRAW_LINE .)
    AND             reduce using rule 136 (PREDEFINED_SOLS -> DRAW_LINE .)
    OR              reduce using rule 136 (PREDEFINED_SOLS -> DRAW_LINE .)
    PERCENTAGE      reduce using rule 136 (PREDEFINED_SOLS -> DRAW_LINE .)
    COMMA           reduce using rule 136 (PREDEFINED_SOLS -> DRAW_LINE .)
    TICK            reduce using rule 136 (PREDEFINED_SOLS -> DRAW_LINE .)
    R_BRACK         reduce using rule 136 (PREDEFINED_SOLS -> DRAW_LINE .)
    R_PAREN         reduce using rule 136 (PREDEFINED_SOLS -> DRAW_LINE .)
    COLON           reduce using rule 136 (PREDEFINED_SOLS -> DRAW_LINE .)


state 92

    (69) CON_VAR -> CON_VAR_TERMINAL .

    MULTIPLY        reduce using rule 69 (CON_VAR -> CON_VAR_TERMINAL .)
    DIVIDE          reduce using rule 69 (CON_VAR -> CON_VAR_TERMINAL .)
    PLUS            reduce using rule 69 (CON_VAR -> CON_VAR_TERMINAL .)
    MINUS           reduce using rule 69 (CON_VAR -> CON_VAR_TERMINAL .)
    LESS_T          reduce using rule 69 (CON_VAR -> CON_VAR_TERMINAL .)
    GREATER_T       reduce using rule 69 (CON_VAR -> CON_VAR_TERMINAL .)
    GREATER_T_EQUALS reduce using rule 69 (CON_VAR -> CON_VAR_TERMINAL .)
    LESS_T_EQUALS   reduce using rule 69 (CON_VAR -> CON_VAR_TERMINAL .)
    IS              reduce using rule 69 (CON_VAR -> CON_VAR_TERMINAL .)
    AND             reduce using rule 69 (CON_VAR -> CON_VAR_TERMINAL .)
    OR              reduce using rule 69 (CON_VAR -> CON_VAR_TERMINAL .)
    PERCENTAGE      reduce using rule 69 (CON_VAR -> CON_VAR_TERMINAL .)
    COMMA           reduce using rule 69 (CON_VAR -> CON_VAR_TERMINAL .)
    TICK            reduce using rule 69 (CON_VAR -> CON_VAR_TERMINAL .)
    R_BRACK         reduce using rule 69 (CON_VAR -> CON_VAR_TERMINAL .)
    R_PAREN         reduce using rule 69 (CON_VAR -> CON_VAR_TERMINAL .)
    COLON           reduce using rule 69 (CON_VAR -> CON_VAR_TERMINAL .)


state 93

    (138) PREDEFINED_SOLS -> DRAW_RECTANGLE .

    MULTIPLY        reduce using rule 138 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    DIVIDE          reduce using rule 138 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    PLUS            reduce using rule 138 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    MINUS           reduce using rule 138 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    LESS_T          reduce using rule 138 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    GREATER_T       reduce using rule 138 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    GREATER_T_EQUALS reduce using rule 138 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    LESS_T_EQUALS   reduce using rule 138 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    IS              reduce using rule 138 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    AND             reduce using rule 138 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    OR              reduce using rule 138 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    PERCENTAGE      reduce using rule 138 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    COMMA           reduce using rule 138 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    TICK            reduce using rule 138 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    R_BRACK         reduce using rule 138 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    R_PAREN         reduce using rule 138 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)
    COLON           reduce using rule 138 (PREDEFINED_SOLS -> DRAW_RECTANGLE .)


state 94

    (130) DRAW_RECTANGLE -> DRAW_RECTANGLE_R . L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN

    L_PAREN         shift and go to state 120


state 95

    (79) ID_REF -> ID . check_var_existence get_var_type O
    (113) SOLUTION_CALL -> ID . check_sol_existence L_PAREN V R_PAREN
    (80) check_var_existence -> .
    (114) check_sol_existence -> .

    L_BRACK         reduce using rule 80 (check_var_existence -> .)
    MULTIPLY        reduce using rule 80 (check_var_existence -> .)
    DIVIDE          reduce using rule 80 (check_var_existence -> .)
    PLUS            reduce using rule 80 (check_var_existence -> .)
    MINUS           reduce using rule 80 (check_var_existence -> .)
    LESS_T          reduce using rule 80 (check_var_existence -> .)
    GREATER_T       reduce using rule 80 (check_var_existence -> .)
    GREATER_T_EQUALS reduce using rule 80 (check_var_existence -> .)
    LESS_T_EQUALS   reduce using rule 80 (check_var_existence -> .)
    IS              reduce using rule 80 (check_var_existence -> .)
    AND             reduce using rule 80 (check_var_existence -> .)
    OR              reduce using rule 80 (check_var_existence -> .)
    PERCENTAGE      reduce using rule 80 (check_var_existence -> .)
    COMMA           reduce using rule 80 (check_var_existence -> .)
    TICK            reduce using rule 80 (check_var_existence -> .)
    R_BRACK         reduce using rule 80 (check_var_existence -> .)
    R_PAREN         reduce using rule 80 (check_var_existence -> .)
    COLON           reduce using rule 80 (check_var_existence -> .)
    L_PAREN         reduce using rule 114 (check_sol_existence -> .)

    check_var_existence            shift and go to state 122
    check_sol_existence            shift and go to state 121

state 96

    (76) CON_VAR_TERMINAL -> BOOL_CONT .

    MULTIPLY        reduce using rule 76 (CON_VAR_TERMINAL -> BOOL_CONT .)
    DIVIDE          reduce using rule 76 (CON_VAR_TERMINAL -> BOOL_CONT .)
    PLUS            reduce using rule 76 (CON_VAR_TERMINAL -> BOOL_CONT .)
    MINUS           reduce using rule 76 (CON_VAR_TERMINAL -> BOOL_CONT .)
    LESS_T          reduce using rule 76 (CON_VAR_TERMINAL -> BOOL_CONT .)
    GREATER_T       reduce using rule 76 (CON_VAR_TERMINAL -> BOOL_CONT .)
    GREATER_T_EQUALS reduce using rule 76 (CON_VAR_TERMINAL -> BOOL_CONT .)
    LESS_T_EQUALS   reduce using rule 76 (CON_VAR_TERMINAL -> BOOL_CONT .)
    IS              reduce using rule 76 (CON_VAR_TERMINAL -> BOOL_CONT .)
    AND             reduce using rule 76 (CON_VAR_TERMINAL -> BOOL_CONT .)
    OR              reduce using rule 76 (CON_VAR_TERMINAL -> BOOL_CONT .)
    PERCENTAGE      reduce using rule 76 (CON_VAR_TERMINAL -> BOOL_CONT .)
    COMMA           reduce using rule 76 (CON_VAR_TERMINAL -> BOOL_CONT .)
    TICK            reduce using rule 76 (CON_VAR_TERMINAL -> BOOL_CONT .)
    R_BRACK         reduce using rule 76 (CON_VAR_TERMINAL -> BOOL_CONT .)
    R_PAREN         reduce using rule 76 (CON_VAR_TERMINAL -> BOOL_CONT .)
    COLON           reduce using rule 76 (CON_VAR_TERMINAL -> BOOL_CONT .)


state 97

    (75) CON_VAR_TERMINAL -> FLOAT_CONT .

    MULTIPLY        reduce using rule 75 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    DIVIDE          reduce using rule 75 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    PLUS            reduce using rule 75 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    MINUS           reduce using rule 75 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    LESS_T          reduce using rule 75 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    GREATER_T       reduce using rule 75 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    GREATER_T_EQUALS reduce using rule 75 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    LESS_T_EQUALS   reduce using rule 75 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    IS              reduce using rule 75 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    AND             reduce using rule 75 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    OR              reduce using rule 75 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    PERCENTAGE      reduce using rule 75 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    COMMA           reduce using rule 75 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    TICK            reduce using rule 75 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    R_BRACK         reduce using rule 75 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    R_PAREN         reduce using rule 75 (CON_VAR_TERMINAL -> FLOAT_CONT .)
    COLON           reduce using rule 75 (CON_VAR_TERMINAL -> FLOAT_CONT .)


state 98

    (131) MOVE_UP -> MOVE_UP_R . L_PAREN EXPRESSION R_PAREN

    L_PAREN         shift and go to state 123


state 99

    (71) CON_VAR -> PREDEFINED_SOLS .

    MULTIPLY        reduce using rule 71 (CON_VAR -> PREDEFINED_SOLS .)
    DIVIDE          reduce using rule 71 (CON_VAR -> PREDEFINED_SOLS .)
    PLUS            reduce using rule 71 (CON_VAR -> PREDEFINED_SOLS .)
    MINUS           reduce using rule 71 (CON_VAR -> PREDEFINED_SOLS .)
    LESS_T          reduce using rule 71 (CON_VAR -> PREDEFINED_SOLS .)
    GREATER_T       reduce using rule 71 (CON_VAR -> PREDEFINED_SOLS .)
    GREATER_T_EQUALS reduce using rule 71 (CON_VAR -> PREDEFINED_SOLS .)
    LESS_T_EQUALS   reduce using rule 71 (CON_VAR -> PREDEFINED_SOLS .)
    IS              reduce using rule 71 (CON_VAR -> PREDEFINED_SOLS .)
    AND             reduce using rule 71 (CON_VAR -> PREDEFINED_SOLS .)
    OR              reduce using rule 71 (CON_VAR -> PREDEFINED_SOLS .)
    PERCENTAGE      reduce using rule 71 (CON_VAR -> PREDEFINED_SOLS .)
    COMMA           reduce using rule 71 (CON_VAR -> PREDEFINED_SOLS .)
    TICK            reduce using rule 71 (CON_VAR -> PREDEFINED_SOLS .)
    R_BRACK         reduce using rule 71 (CON_VAR -> PREDEFINED_SOLS .)
    R_PAREN         reduce using rule 71 (CON_VAR -> PREDEFINED_SOLS .)
    COLON           reduce using rule 71 (CON_VAR -> PREDEFINED_SOLS .)


state 100

    (141) PREDEFINED_SOLS -> MOVE_DOWN .

    MULTIPLY        reduce using rule 141 (PREDEFINED_SOLS -> MOVE_DOWN .)
    DIVIDE          reduce using rule 141 (PREDEFINED_SOLS -> MOVE_DOWN .)
    PLUS            reduce using rule 141 (PREDEFINED_SOLS -> MOVE_DOWN .)
    MINUS           reduce using rule 141 (PREDEFINED_SOLS -> MOVE_DOWN .)
    LESS_T          reduce using rule 141 (PREDEFINED_SOLS -> MOVE_DOWN .)
    GREATER_T       reduce using rule 141 (PREDEFINED_SOLS -> MOVE_DOWN .)
    GREATER_T_EQUALS reduce using rule 141 (PREDEFINED_SOLS -> MOVE_DOWN .)
    LESS_T_EQUALS   reduce using rule 141 (PREDEFINED_SOLS -> MOVE_DOWN .)
    IS              reduce using rule 141 (PREDEFINED_SOLS -> MOVE_DOWN .)
    AND             reduce using rule 141 (PREDEFINED_SOLS -> MOVE_DOWN .)
    OR              reduce using rule 141 (PREDEFINED_SOLS -> MOVE_DOWN .)
    PERCENTAGE      reduce using rule 141 (PREDEFINED_SOLS -> MOVE_DOWN .)
    COMMA           reduce using rule 141 (PREDEFINED_SOLS -> MOVE_DOWN .)
    TICK            reduce using rule 141 (PREDEFINED_SOLS -> MOVE_DOWN .)
    R_BRACK         reduce using rule 141 (PREDEFINED_SOLS -> MOVE_DOWN .)
    R_PAREN         reduce using rule 141 (PREDEFINED_SOLS -> MOVE_DOWN .)
    COLON           reduce using rule 141 (PREDEFINED_SOLS -> MOVE_DOWN .)


state 101

    (132) MOVE_RIGHT -> MOVE_RIGHT_R . L_PAREN EXPRESSION R_PAREN

    L_PAREN         shift and go to state 124


state 102

    (137) PREDEFINED_SOLS -> DRAW_CIRCLE .

    MULTIPLY        reduce using rule 137 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    DIVIDE          reduce using rule 137 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    PLUS            reduce using rule 137 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    MINUS           reduce using rule 137 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    LESS_T          reduce using rule 137 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    GREATER_T       reduce using rule 137 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    GREATER_T_EQUALS reduce using rule 137 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    LESS_T_EQUALS   reduce using rule 137 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    IS              reduce using rule 137 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    AND             reduce using rule 137 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    OR              reduce using rule 137 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    PERCENTAGE      reduce using rule 137 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    COMMA           reduce using rule 137 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    TICK            reduce using rule 137 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    R_BRACK         reduce using rule 137 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    R_PAREN         reduce using rule 137 (PREDEFINED_SOLS -> DRAW_CIRCLE .)
    COLON           reduce using rule 137 (PREDEFINED_SOLS -> DRAW_CIRCLE .)


state 103

    (85) LIST_EXP -> L_BRACK EXPRESSION . P R_BRACK
    (86) P -> . COMMA EXPRESSION P
    (87) P -> . empty
    (144) empty -> .

    COMMA           shift and go to state 126
    R_BRACK         reduce using rule 144 (empty -> .)

    P                              shift and go to state 125
    empty                          shift and go to state 127

state 104

    (54) TERM -> FACTOR process_possible_multiply_divide_operation . K
    (56) K -> . L TERM
    (57) K -> . empty
    (58) L -> . MULTIPLY
    (59) L -> . DIVIDE
    (144) empty -> .

    MULTIPLY        shift and go to state 131
    DIVIDE          shift and go to state 128
    PLUS            reduce using rule 144 (empty -> .)
    MINUS           reduce using rule 144 (empty -> .)
    LESS_T          reduce using rule 144 (empty -> .)
    GREATER_T       reduce using rule 144 (empty -> .)
    GREATER_T_EQUALS reduce using rule 144 (empty -> .)
    LESS_T_EQUALS   reduce using rule 144 (empty -> .)
    IS              reduce using rule 144 (empty -> .)
    AND             reduce using rule 144 (empty -> .)
    OR              reduce using rule 144 (empty -> .)
    PERCENTAGE      reduce using rule 144 (empty -> .)
    COMMA           reduce using rule 144 (empty -> .)
    TICK            reduce using rule 144 (empty -> .)
    R_BRACK         reduce using rule 144 (empty -> .)
    R_PAREN         reduce using rule 144 (empty -> .)
    COLON           reduce using rule 144 (empty -> .)

    K                              shift and go to state 129
    L                              shift and go to state 130
    empty                          shift and go to state 132

state 105

    (23) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates . L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK print_currentSymTab

    L_PAREN         shift and go to state 133


state 106

    (127) MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates . L_PAREN R_PAREN COLON S_BLOCK TICK print_currentSymTab

    L_PAREN         shift and go to state 134


state 107

    (60) FACTOR -> L_PAREN push_false_bottom EXPRESSION . R_PAREN pop_false_bottom

    R_PAREN         shift and go to state 135


state 108

    (37) G -> H EXP . process_possible_relop_operation
    (39) process_possible_relop_operation -> .

    COMMA           reduce using rule 39 (process_possible_relop_operation -> .)
    TICK            reduce using rule 39 (process_possible_relop_operation -> .)
    R_BRACK         reduce using rule 39 (process_possible_relop_operation -> .)
    R_PAREN         reduce using rule 39 (process_possible_relop_operation -> .)
    COLON           reduce using rule 39 (process_possible_relop_operation -> .)

    process_possible_relop_operation shift and go to state 136

state 109

    (48) EXP -> TERM process_possible_plus_minus_operation I .

    LESS_T          reduce using rule 48 (EXP -> TERM process_possible_plus_minus_operation I .)
    GREATER_T       reduce using rule 48 (EXP -> TERM process_possible_plus_minus_operation I .)
    GREATER_T_EQUALS reduce using rule 48 (EXP -> TERM process_possible_plus_minus_operation I .)
    LESS_T_EQUALS   reduce using rule 48 (EXP -> TERM process_possible_plus_minus_operation I .)
    IS              reduce using rule 48 (EXP -> TERM process_possible_plus_minus_operation I .)
    AND             reduce using rule 48 (EXP -> TERM process_possible_plus_minus_operation I .)
    OR              reduce using rule 48 (EXP -> TERM process_possible_plus_minus_operation I .)
    PERCENTAGE      reduce using rule 48 (EXP -> TERM process_possible_plus_minus_operation I .)
    COMMA           reduce using rule 48 (EXP -> TERM process_possible_plus_minus_operation I .)
    R_PAREN         reduce using rule 48 (EXP -> TERM process_possible_plus_minus_operation I .)
    TICK            reduce using rule 48 (EXP -> TERM process_possible_plus_minus_operation I .)
    COLON           reduce using rule 48 (EXP -> TERM process_possible_plus_minus_operation I .)
    R_BRACK         reduce using rule 48 (EXP -> TERM process_possible_plus_minus_operation I .)


state 110

    (50) I -> J . EXP
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    TERM                           shift and go to state 51
    M                              shift and go to state 56
    empty                          shift and go to state 54
    EXP                            shift and go to state 137
    FACTOR                         shift and go to state 58

state 111

    (52) J -> PLUS .

    L_PAREN         reduce using rule 52 (J -> PLUS .)
    PLUS            reduce using rule 52 (J -> PLUS .)
    MINUS           reduce using rule 52 (J -> PLUS .)
    ID              reduce using rule 52 (J -> PLUS .)
    INT_CONT        reduce using rule 52 (J -> PLUS .)
    STRING_CONT     reduce using rule 52 (J -> PLUS .)
    CHAR_CONT       reduce using rule 52 (J -> PLUS .)
    FLOAT_CONT      reduce using rule 52 (J -> PLUS .)
    BOOL_CONT       reduce using rule 52 (J -> PLUS .)
    DRAW_LINE_R     reduce using rule 52 (J -> PLUS .)
    DRAW_CIRCLE_R   reduce using rule 52 (J -> PLUS .)
    DRAW_RECTANGLE_R reduce using rule 52 (J -> PLUS .)
    MOVE_UP_R       reduce using rule 52 (J -> PLUS .)
    MOVE_RIGHT_R    reduce using rule 52 (J -> PLUS .)
    MOVE_DOWN_R     reduce using rule 52 (J -> PLUS .)
    MOVE_LEFT_R     reduce using rule 52 (J -> PLUS .)
    PRINT_R         reduce using rule 52 (J -> PLUS .)


state 112

    (53) J -> MINUS .

    L_PAREN         reduce using rule 53 (J -> MINUS .)
    PLUS            reduce using rule 53 (J -> MINUS .)
    MINUS           reduce using rule 53 (J -> MINUS .)
    ID              reduce using rule 53 (J -> MINUS .)
    INT_CONT        reduce using rule 53 (J -> MINUS .)
    STRING_CONT     reduce using rule 53 (J -> MINUS .)
    CHAR_CONT       reduce using rule 53 (J -> MINUS .)
    FLOAT_CONT      reduce using rule 53 (J -> MINUS .)
    BOOL_CONT       reduce using rule 53 (J -> MINUS .)
    DRAW_LINE_R     reduce using rule 53 (J -> MINUS .)
    DRAW_CIRCLE_R   reduce using rule 53 (J -> MINUS .)
    DRAW_RECTANGLE_R reduce using rule 53 (J -> MINUS .)
    MOVE_UP_R       reduce using rule 53 (J -> MINUS .)
    MOVE_RIGHT_R    reduce using rule 53 (J -> MINUS .)
    MOVE_DOWN_R     reduce using rule 53 (J -> MINUS .)
    MOVE_LEFT_R     reduce using rule 53 (J -> MINUS .)
    PRINT_R         reduce using rule 53 (J -> MINUS .)


state 113

    (51) I -> empty .

    LESS_T          reduce using rule 51 (I -> empty .)
    GREATER_T       reduce using rule 51 (I -> empty .)
    GREATER_T_EQUALS reduce using rule 51 (I -> empty .)
    LESS_T_EQUALS   reduce using rule 51 (I -> empty .)
    IS              reduce using rule 51 (I -> empty .)
    AND             reduce using rule 51 (I -> empty .)
    OR              reduce using rule 51 (I -> empty .)
    PERCENTAGE      reduce using rule 51 (I -> empty .)
    COMMA           reduce using rule 51 (I -> empty .)
    TICK            reduce using rule 51 (I -> empty .)
    R_BRACK         reduce using rule 51 (I -> empty .)
    R_PAREN         reduce using rule 51 (I -> empty .)
    COLON           reduce using rule 51 (I -> empty .)


state 114

    (129) DRAW_LINE -> DRAW_LINE_R L_PAREN . EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    TERM                           shift and go to state 51
    M                              shift and go to state 56
    empty                          shift and go to state 54
    EXP                            shift and go to state 49
    FACTOR                         shift and go to state 58
    EXPRESSION                     shift and go to state 138

state 115

    (133) MOVE_DOWN -> MOVE_DOWN_R L_PAREN . EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    TERM                           shift and go to state 51
    M                              shift and go to state 56
    empty                          shift and go to state 54
    EXP                            shift and go to state 49
    FACTOR                         shift and go to state 58
    EXPRESSION                     shift and go to state 139

state 116

    (135) PRINT -> PRINT_R L_PAREN . EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    TERM                           shift and go to state 51
    M                              shift and go to state 56
    empty                          shift and go to state 54
    EXP                            shift and go to state 49
    FACTOR                         shift and go to state 58
    EXPRESSION                     shift and go to state 140

state 117

    (134) MOVE_LEFT -> MOVE_LEFT_R L_PAREN . EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    TERM                           shift and go to state 51
    M                              shift and go to state 56
    empty                          shift and go to state 54
    EXP                            shift and go to state 49
    FACTOR                         shift and go to state 58
    EXPRESSION                     shift and go to state 141

state 118

    (128) DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN . EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    TERM                           shift and go to state 51
    M                              shift and go to state 56
    empty                          shift and go to state 54
    EXP                            shift and go to state 49
    FACTOR                         shift and go to state 58
    EXPRESSION                     shift and go to state 142

state 119

    (61) FACTOR -> M CON_VAR check_sign_type_correspondence .

    MULTIPLY        reduce using rule 61 (FACTOR -> M CON_VAR check_sign_type_correspondence .)
    DIVIDE          reduce using rule 61 (FACTOR -> M CON_VAR check_sign_type_correspondence .)
    PLUS            reduce using rule 61 (FACTOR -> M CON_VAR check_sign_type_correspondence .)
    MINUS           reduce using rule 61 (FACTOR -> M CON_VAR check_sign_type_correspondence .)
    LESS_T          reduce using rule 61 (FACTOR -> M CON_VAR check_sign_type_correspondence .)
    GREATER_T       reduce using rule 61 (FACTOR -> M CON_VAR check_sign_type_correspondence .)
    GREATER_T_EQUALS reduce using rule 61 (FACTOR -> M CON_VAR check_sign_type_correspondence .)
    LESS_T_EQUALS   reduce using rule 61 (FACTOR -> M CON_VAR check_sign_type_correspondence .)
    IS              reduce using rule 61 (FACTOR -> M CON_VAR check_sign_type_correspondence .)
    AND             reduce using rule 61 (FACTOR -> M CON_VAR check_sign_type_correspondence .)
    OR              reduce using rule 61 (FACTOR -> M CON_VAR check_sign_type_correspondence .)
    PERCENTAGE      reduce using rule 61 (FACTOR -> M CON_VAR check_sign_type_correspondence .)
    TICK            reduce using rule 61 (FACTOR -> M CON_VAR check_sign_type_correspondence .)
    R_PAREN         reduce using rule 61 (FACTOR -> M CON_VAR check_sign_type_correspondence .)
    COMMA           reduce using rule 61 (FACTOR -> M CON_VAR check_sign_type_correspondence .)
    COLON           reduce using rule 61 (FACTOR -> M CON_VAR check_sign_type_correspondence .)
    R_BRACK         reduce using rule 61 (FACTOR -> M CON_VAR check_sign_type_correspondence .)


state 120

    (130) DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN . EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    TERM                           shift and go to state 51
    M                              shift and go to state 56
    empty                          shift and go to state 54
    EXP                            shift and go to state 49
    FACTOR                         shift and go to state 58
    EXPRESSION                     shift and go to state 143

state 121

    (113) SOLUTION_CALL -> ID check_sol_existence . L_PAREN V R_PAREN

    L_PAREN         shift and go to state 144


state 122

    (79) ID_REF -> ID check_var_existence . get_var_type O
    (81) get_var_type -> .

    L_BRACK         reduce using rule 81 (get_var_type -> .)
    MULTIPLY        reduce using rule 81 (get_var_type -> .)
    DIVIDE          reduce using rule 81 (get_var_type -> .)
    PLUS            reduce using rule 81 (get_var_type -> .)
    MINUS           reduce using rule 81 (get_var_type -> .)
    LESS_T          reduce using rule 81 (get_var_type -> .)
    GREATER_T       reduce using rule 81 (get_var_type -> .)
    GREATER_T_EQUALS reduce using rule 81 (get_var_type -> .)
    LESS_T_EQUALS   reduce using rule 81 (get_var_type -> .)
    IS              reduce using rule 81 (get_var_type -> .)
    AND             reduce using rule 81 (get_var_type -> .)
    OR              reduce using rule 81 (get_var_type -> .)
    PERCENTAGE      reduce using rule 81 (get_var_type -> .)
    COMMA           reduce using rule 81 (get_var_type -> .)
    TICK            reduce using rule 81 (get_var_type -> .)
    R_BRACK         reduce using rule 81 (get_var_type -> .)
    R_PAREN         reduce using rule 81 (get_var_type -> .)
    COLON           reduce using rule 81 (get_var_type -> .)
    EQUALS          reduce using rule 81 (get_var_type -> .)

    get_var_type                   shift and go to state 145

state 123

    (131) MOVE_UP -> MOVE_UP_R L_PAREN . EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    TERM                           shift and go to state 51
    M                              shift and go to state 56
    empty                          shift and go to state 54
    EXP                            shift and go to state 49
    FACTOR                         shift and go to state 58
    EXPRESSION                     shift and go to state 146

state 124

    (132) MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN . EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    TERM                           shift and go to state 51
    M                              shift and go to state 56
    empty                          shift and go to state 54
    EXP                            shift and go to state 49
    FACTOR                         shift and go to state 58
    EXPRESSION                     shift and go to state 147

state 125

    (85) LIST_EXP -> L_BRACK EXPRESSION P . R_BRACK

    R_BRACK         shift and go to state 148


state 126

    (86) P -> COMMA . EXPRESSION P
    (36) EXPRESSION -> . EXP G
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    TERM                           shift and go to state 51
    M                              shift and go to state 56
    empty                          shift and go to state 54
    EXP                            shift and go to state 49
    FACTOR                         shift and go to state 58
    EXPRESSION                     shift and go to state 149

state 127

    (87) P -> empty .

    R_BRACK         reduce using rule 87 (P -> empty .)


state 128

    (59) L -> DIVIDE .

    L_PAREN         reduce using rule 59 (L -> DIVIDE .)
    PLUS            reduce using rule 59 (L -> DIVIDE .)
    MINUS           reduce using rule 59 (L -> DIVIDE .)
    ID              reduce using rule 59 (L -> DIVIDE .)
    INT_CONT        reduce using rule 59 (L -> DIVIDE .)
    STRING_CONT     reduce using rule 59 (L -> DIVIDE .)
    CHAR_CONT       reduce using rule 59 (L -> DIVIDE .)
    FLOAT_CONT      reduce using rule 59 (L -> DIVIDE .)
    BOOL_CONT       reduce using rule 59 (L -> DIVIDE .)
    DRAW_LINE_R     reduce using rule 59 (L -> DIVIDE .)
    DRAW_CIRCLE_R   reduce using rule 59 (L -> DIVIDE .)
    DRAW_RECTANGLE_R reduce using rule 59 (L -> DIVIDE .)
    MOVE_UP_R       reduce using rule 59 (L -> DIVIDE .)
    MOVE_RIGHT_R    reduce using rule 59 (L -> DIVIDE .)
    MOVE_DOWN_R     reduce using rule 59 (L -> DIVIDE .)
    MOVE_LEFT_R     reduce using rule 59 (L -> DIVIDE .)
    PRINT_R         reduce using rule 59 (L -> DIVIDE .)


state 129

    (54) TERM -> FACTOR process_possible_multiply_divide_operation K .

    PLUS            reduce using rule 54 (TERM -> FACTOR process_possible_multiply_divide_operation K .)
    MINUS           reduce using rule 54 (TERM -> FACTOR process_possible_multiply_divide_operation K .)
    LESS_T          reduce using rule 54 (TERM -> FACTOR process_possible_multiply_divide_operation K .)
    GREATER_T       reduce using rule 54 (TERM -> FACTOR process_possible_multiply_divide_operation K .)
    GREATER_T_EQUALS reduce using rule 54 (TERM -> FACTOR process_possible_multiply_divide_operation K .)
    LESS_T_EQUALS   reduce using rule 54 (TERM -> FACTOR process_possible_multiply_divide_operation K .)
    IS              reduce using rule 54 (TERM -> FACTOR process_possible_multiply_divide_operation K .)
    AND             reduce using rule 54 (TERM -> FACTOR process_possible_multiply_divide_operation K .)
    OR              reduce using rule 54 (TERM -> FACTOR process_possible_multiply_divide_operation K .)
    PERCENTAGE      reduce using rule 54 (TERM -> FACTOR process_possible_multiply_divide_operation K .)
    COMMA           reduce using rule 54 (TERM -> FACTOR process_possible_multiply_divide_operation K .)
    R_PAREN         reduce using rule 54 (TERM -> FACTOR process_possible_multiply_divide_operation K .)
    R_BRACK         reduce using rule 54 (TERM -> FACTOR process_possible_multiply_divide_operation K .)
    TICK            reduce using rule 54 (TERM -> FACTOR process_possible_multiply_divide_operation K .)
    COLON           reduce using rule 54 (TERM -> FACTOR process_possible_multiply_divide_operation K .)


state 130

    (56) K -> L . TERM
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    TERM                           shift and go to state 150
    M                              shift and go to state 56
    empty                          shift and go to state 54
    FACTOR                         shift and go to state 58

state 131

    (58) L -> MULTIPLY .

    L_PAREN         reduce using rule 58 (L -> MULTIPLY .)
    PLUS            reduce using rule 58 (L -> MULTIPLY .)
    MINUS           reduce using rule 58 (L -> MULTIPLY .)
    ID              reduce using rule 58 (L -> MULTIPLY .)
    INT_CONT        reduce using rule 58 (L -> MULTIPLY .)
    STRING_CONT     reduce using rule 58 (L -> MULTIPLY .)
    CHAR_CONT       reduce using rule 58 (L -> MULTIPLY .)
    FLOAT_CONT      reduce using rule 58 (L -> MULTIPLY .)
    BOOL_CONT       reduce using rule 58 (L -> MULTIPLY .)
    DRAW_LINE_R     reduce using rule 58 (L -> MULTIPLY .)
    DRAW_CIRCLE_R   reduce using rule 58 (L -> MULTIPLY .)
    DRAW_RECTANGLE_R reduce using rule 58 (L -> MULTIPLY .)
    MOVE_UP_R       reduce using rule 58 (L -> MULTIPLY .)
    MOVE_RIGHT_R    reduce using rule 58 (L -> MULTIPLY .)
    MOVE_DOWN_R     reduce using rule 58 (L -> MULTIPLY .)
    MOVE_LEFT_R     reduce using rule 58 (L -> MULTIPLY .)
    PRINT_R         reduce using rule 58 (L -> MULTIPLY .)


state 132

    (57) K -> empty .

    PLUS            reduce using rule 57 (K -> empty .)
    MINUS           reduce using rule 57 (K -> empty .)
    LESS_T          reduce using rule 57 (K -> empty .)
    GREATER_T       reduce using rule 57 (K -> empty .)
    GREATER_T_EQUALS reduce using rule 57 (K -> empty .)
    LESS_T_EQUALS   reduce using rule 57 (K -> empty .)
    IS              reduce using rule 57 (K -> empty .)
    AND             reduce using rule 57 (K -> empty .)
    OR              reduce using rule 57 (K -> empty .)
    PERCENTAGE      reduce using rule 57 (K -> empty .)
    COMMA           reduce using rule 57 (K -> empty .)
    TICK            reduce using rule 57 (K -> empty .)
    R_BRACK         reduce using rule 57 (K -> empty .)
    R_PAREN         reduce using rule 57 (K -> empty .)
    COLON           reduce using rule 57 (K -> empty .)


state 133

    (23) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN . PARAMS R_PAREN COLON S_BLOCK TICK print_currentSymTab
    (120) PARAMS -> . TYPE store_type ID check_param_duplicates Y
    (30) TYPE -> . INT
    (31) TYPE -> . FLOAT
    (32) TYPE -> . CHAR
    (33) TYPE -> . STRING
    (34) TYPE -> . BOOL
    (35) TYPE -> . LIST

    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 16
    STRING          shift and go to state 11
    BOOL            shift and go to state 17
    LIST            shift and go to state 15

    PARAMS                         shift and go to state 151
    TYPE                           shift and go to state 152

state 134

    (127) MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates L_PAREN . R_PAREN COLON S_BLOCK TICK print_currentSymTab

    R_PAREN         shift and go to state 153


state 135

    (60) FACTOR -> L_PAREN push_false_bottom EXPRESSION R_PAREN . pop_false_bottom
    (63) pop_false_bottom -> .

    MULTIPLY        reduce using rule 63 (pop_false_bottom -> .)
    DIVIDE          reduce using rule 63 (pop_false_bottom -> .)
    PLUS            reduce using rule 63 (pop_false_bottom -> .)
    MINUS           reduce using rule 63 (pop_false_bottom -> .)
    LESS_T          reduce using rule 63 (pop_false_bottom -> .)
    GREATER_T       reduce using rule 63 (pop_false_bottom -> .)
    GREATER_T_EQUALS reduce using rule 63 (pop_false_bottom -> .)
    LESS_T_EQUALS   reduce using rule 63 (pop_false_bottom -> .)
    IS              reduce using rule 63 (pop_false_bottom -> .)
    AND             reduce using rule 63 (pop_false_bottom -> .)
    OR              reduce using rule 63 (pop_false_bottom -> .)
    PERCENTAGE      reduce using rule 63 (pop_false_bottom -> .)
    COMMA           reduce using rule 63 (pop_false_bottom -> .)
    TICK            reduce using rule 63 (pop_false_bottom -> .)
    R_BRACK         reduce using rule 63 (pop_false_bottom -> .)
    R_PAREN         reduce using rule 63 (pop_false_bottom -> .)
    COLON           reduce using rule 63 (pop_false_bottom -> .)

    pop_false_bottom               shift and go to state 154

state 136

    (37) G -> H EXP process_possible_relop_operation .

    COMMA           reduce using rule 37 (G -> H EXP process_possible_relop_operation .)
    TICK            reduce using rule 37 (G -> H EXP process_possible_relop_operation .)
    R_BRACK         reduce using rule 37 (G -> H EXP process_possible_relop_operation .)
    R_PAREN         reduce using rule 37 (G -> H EXP process_possible_relop_operation .)
    COLON           reduce using rule 37 (G -> H EXP process_possible_relop_operation .)


state 137

    (50) I -> J EXP .

    LESS_T          reduce using rule 50 (I -> J EXP .)
    GREATER_T       reduce using rule 50 (I -> J EXP .)
    GREATER_T_EQUALS reduce using rule 50 (I -> J EXP .)
    LESS_T_EQUALS   reduce using rule 50 (I -> J EXP .)
    IS              reduce using rule 50 (I -> J EXP .)
    AND             reduce using rule 50 (I -> J EXP .)
    OR              reduce using rule 50 (I -> J EXP .)
    PERCENTAGE      reduce using rule 50 (I -> J EXP .)
    COMMA           reduce using rule 50 (I -> J EXP .)
    TICK            reduce using rule 50 (I -> J EXP .)
    R_BRACK         reduce using rule 50 (I -> J EXP .)
    R_PAREN         reduce using rule 50 (I -> J EXP .)
    COLON           reduce using rule 50 (I -> J EXP .)


state 138

    (129) DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION . COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN

    COMMA           shift and go to state 155


state 139

    (133) MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 156


state 140

    (135) PRINT -> PRINT_R L_PAREN EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 157


state 141

    (134) MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 158


state 142

    (128) DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION . COMMA EXPRESSION COMMA EXPRESSION R_PAREN

    COMMA           shift and go to state 159


state 143

    (130) DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION . COMMA EXPRESSION COMMA EXPRESSION R_PAREN

    COMMA           shift and go to state 160


state 144

    (113) SOLUTION_CALL -> ID check_sol_existence L_PAREN . V R_PAREN
    (115) V -> . W X
    (116) W -> . EXPRESSION
    (117) W -> . NEGATION
    (36) EXPRESSION -> . EXP G
    (77) NEGATION -> . N EXPRESSION
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (78) N -> . NOT
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    NOT             shift and go to state 166
    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    M                              shift and go to state 56
    TERM                           shift and go to state 51
    EXP                            shift and go to state 49
    FACTOR                         shift and go to state 58
    NEGATION                       shift and go to state 161
    empty                          shift and go to state 54
    W                              shift and go to state 164
    V                              shift and go to state 165
    N                              shift and go to state 163
    EXPRESSION                     shift and go to state 162

state 145

    (79) ID_REF -> ID check_var_existence get_var_type . O
    (82) O -> . L_BRACK EXPRESSION check_int_type R_BRACK
    (83) O -> . empty
    (144) empty -> .

    L_BRACK         shift and go to state 167
    MULTIPLY        reduce using rule 144 (empty -> .)
    DIVIDE          reduce using rule 144 (empty -> .)
    PLUS            reduce using rule 144 (empty -> .)
    MINUS           reduce using rule 144 (empty -> .)
    LESS_T          reduce using rule 144 (empty -> .)
    GREATER_T       reduce using rule 144 (empty -> .)
    GREATER_T_EQUALS reduce using rule 144 (empty -> .)
    LESS_T_EQUALS   reduce using rule 144 (empty -> .)
    IS              reduce using rule 144 (empty -> .)
    AND             reduce using rule 144 (empty -> .)
    OR              reduce using rule 144 (empty -> .)
    PERCENTAGE      reduce using rule 144 (empty -> .)
    COMMA           reduce using rule 144 (empty -> .)
    TICK            reduce using rule 144 (empty -> .)
    R_BRACK         reduce using rule 144 (empty -> .)
    R_PAREN         reduce using rule 144 (empty -> .)
    COLON           reduce using rule 144 (empty -> .)
    EQUALS          reduce using rule 144 (empty -> .)

    O                              shift and go to state 168
    empty                          shift and go to state 169

state 146

    (131) MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 170


state 147

    (132) MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 171


state 148

    (85) LIST_EXP -> L_BRACK EXPRESSION P R_BRACK .

    COMMA           reduce using rule 85 (LIST_EXP -> L_BRACK EXPRESSION P R_BRACK .)
    TICK            reduce using rule 85 (LIST_EXP -> L_BRACK EXPRESSION P R_BRACK .)


state 149

    (86) P -> COMMA EXPRESSION . P
    (86) P -> . COMMA EXPRESSION P
    (87) P -> . empty
    (144) empty -> .

    COMMA           shift and go to state 126
    R_BRACK         reduce using rule 144 (empty -> .)

    P                              shift and go to state 172
    empty                          shift and go to state 127

state 150

    (56) K -> L TERM .

    PLUS            reduce using rule 56 (K -> L TERM .)
    MINUS           reduce using rule 56 (K -> L TERM .)
    LESS_T          reduce using rule 56 (K -> L TERM .)
    GREATER_T       reduce using rule 56 (K -> L TERM .)
    GREATER_T_EQUALS reduce using rule 56 (K -> L TERM .)
    LESS_T_EQUALS   reduce using rule 56 (K -> L TERM .)
    IS              reduce using rule 56 (K -> L TERM .)
    AND             reduce using rule 56 (K -> L TERM .)
    OR              reduce using rule 56 (K -> L TERM .)
    PERCENTAGE      reduce using rule 56 (K -> L TERM .)
    COMMA           reduce using rule 56 (K -> L TERM .)
    TICK            reduce using rule 56 (K -> L TERM .)
    R_BRACK         reduce using rule 56 (K -> L TERM .)
    R_PAREN         reduce using rule 56 (K -> L TERM .)
    COLON           reduce using rule 56 (K -> L TERM .)


state 151

    (23) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS . R_PAREN COLON S_BLOCK TICK print_currentSymTab

    R_PAREN         shift and go to state 173


state 152

    (120) PARAMS -> TYPE . store_type ID check_param_duplicates Y
    (8) store_type -> .

    ID              reduce using rule 8 (store_type -> .)

    store_type                     shift and go to state 174

state 153

    (127) MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN . COLON S_BLOCK TICK print_currentSymTab

    COLON           shift and go to state 175


state 154

    (60) FACTOR -> L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom .

    MULTIPLY        reduce using rule 60 (FACTOR -> L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom .)
    DIVIDE          reduce using rule 60 (FACTOR -> L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom .)
    PLUS            reduce using rule 60 (FACTOR -> L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom .)
    MINUS           reduce using rule 60 (FACTOR -> L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom .)
    LESS_T          reduce using rule 60 (FACTOR -> L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom .)
    GREATER_T       reduce using rule 60 (FACTOR -> L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom .)
    GREATER_T_EQUALS reduce using rule 60 (FACTOR -> L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom .)
    LESS_T_EQUALS   reduce using rule 60 (FACTOR -> L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom .)
    IS              reduce using rule 60 (FACTOR -> L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom .)
    AND             reduce using rule 60 (FACTOR -> L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom .)
    OR              reduce using rule 60 (FACTOR -> L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom .)
    PERCENTAGE      reduce using rule 60 (FACTOR -> L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom .)
    TICK            reduce using rule 60 (FACTOR -> L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom .)
    R_PAREN         reduce using rule 60 (FACTOR -> L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom .)
    COMMA           reduce using rule 60 (FACTOR -> L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom .)
    COLON           reduce using rule 60 (FACTOR -> L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom .)
    R_BRACK         reduce using rule 60 (FACTOR -> L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom .)


state 155

    (129) DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA . EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    TERM                           shift and go to state 51
    M                              shift and go to state 56
    empty                          shift and go to state 54
    EXP                            shift and go to state 49
    FACTOR                         shift and go to state 58
    EXPRESSION                     shift and go to state 176

state 156

    (133) MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 133 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 133 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    PLUS            reduce using rule 133 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    MINUS           reduce using rule 133 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 133 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 133 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 133 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 133 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    IS              reduce using rule 133 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    AND             reduce using rule 133 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    OR              reduce using rule 133 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 133 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    COMMA           reduce using rule 133 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    TICK            reduce using rule 133 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 133 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 133 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)
    COLON           reduce using rule 133 (MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN .)


state 157

    (135) PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 135 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 135 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    PLUS            reduce using rule 135 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    MINUS           reduce using rule 135 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 135 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 135 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 135 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 135 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    IS              reduce using rule 135 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    AND             reduce using rule 135 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    OR              reduce using rule 135 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 135 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    COMMA           reduce using rule 135 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    TICK            reduce using rule 135 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 135 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 135 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)
    COLON           reduce using rule 135 (PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN .)


state 158

    (134) MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 134 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 134 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    PLUS            reduce using rule 134 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    MINUS           reduce using rule 134 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 134 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 134 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 134 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 134 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    IS              reduce using rule 134 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    AND             reduce using rule 134 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    OR              reduce using rule 134 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 134 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    COMMA           reduce using rule 134 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    TICK            reduce using rule 134 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 134 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 134 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)
    COLON           reduce using rule 134 (MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN .)


state 159

    (128) DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA . EXPRESSION COMMA EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    TERM                           shift and go to state 51
    M                              shift and go to state 56
    empty                          shift and go to state 54
    EXP                            shift and go to state 49
    FACTOR                         shift and go to state 58
    EXPRESSION                     shift and go to state 177

state 160

    (130) DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA . EXPRESSION COMMA EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    TERM                           shift and go to state 51
    M                              shift and go to state 56
    empty                          shift and go to state 54
    EXP                            shift and go to state 49
    FACTOR                         shift and go to state 58
    EXPRESSION                     shift and go to state 178

state 161

    (117) W -> NEGATION .

    COMMA           reduce using rule 117 (W -> NEGATION .)
    R_PAREN         reduce using rule 117 (W -> NEGATION .)


state 162

    (116) W -> EXPRESSION .

    COMMA           reduce using rule 116 (W -> EXPRESSION .)
    R_PAREN         reduce using rule 116 (W -> EXPRESSION .)


state 163

    (77) NEGATION -> N . EXPRESSION
    (36) EXPRESSION -> . EXP G
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    TERM                           shift and go to state 51
    M                              shift and go to state 56
    empty                          shift and go to state 54
    EXP                            shift and go to state 49
    FACTOR                         shift and go to state 58
    EXPRESSION                     shift and go to state 179

state 164

    (115) V -> W . X
    (118) X -> . COMMA V
    (119) X -> . empty
    (144) empty -> .

    COMMA           shift and go to state 181
    R_PAREN         reduce using rule 144 (empty -> .)

    X                              shift and go to state 180
    empty                          shift and go to state 182

state 165

    (113) SOLUTION_CALL -> ID check_sol_existence L_PAREN V . R_PAREN

    R_PAREN         shift and go to state 183


state 166

    (78) N -> NOT .

    L_PAREN         reduce using rule 78 (N -> NOT .)
    PLUS            reduce using rule 78 (N -> NOT .)
    MINUS           reduce using rule 78 (N -> NOT .)
    ID              reduce using rule 78 (N -> NOT .)
    INT_CONT        reduce using rule 78 (N -> NOT .)
    STRING_CONT     reduce using rule 78 (N -> NOT .)
    CHAR_CONT       reduce using rule 78 (N -> NOT .)
    FLOAT_CONT      reduce using rule 78 (N -> NOT .)
    BOOL_CONT       reduce using rule 78 (N -> NOT .)
    DRAW_LINE_R     reduce using rule 78 (N -> NOT .)
    DRAW_CIRCLE_R   reduce using rule 78 (N -> NOT .)
    DRAW_RECTANGLE_R reduce using rule 78 (N -> NOT .)
    MOVE_UP_R       reduce using rule 78 (N -> NOT .)
    MOVE_RIGHT_R    reduce using rule 78 (N -> NOT .)
    MOVE_DOWN_R     reduce using rule 78 (N -> NOT .)
    MOVE_LEFT_R     reduce using rule 78 (N -> NOT .)
    PRINT_R         reduce using rule 78 (N -> NOT .)


state 167

    (82) O -> L_BRACK . EXPRESSION check_int_type R_BRACK
    (36) EXPRESSION -> . EXP G
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    TERM                           shift and go to state 51
    M                              shift and go to state 56
    empty                          shift and go to state 54
    EXP                            shift and go to state 49
    FACTOR                         shift and go to state 58
    EXPRESSION                     shift and go to state 184

state 168

    (79) ID_REF -> ID check_var_existence get_var_type O .

    EQUALS          reduce using rule 79 (ID_REF -> ID check_var_existence get_var_type O .)
    MULTIPLY        reduce using rule 79 (ID_REF -> ID check_var_existence get_var_type O .)
    DIVIDE          reduce using rule 79 (ID_REF -> ID check_var_existence get_var_type O .)
    PLUS            reduce using rule 79 (ID_REF -> ID check_var_existence get_var_type O .)
    MINUS           reduce using rule 79 (ID_REF -> ID check_var_existence get_var_type O .)
    LESS_T          reduce using rule 79 (ID_REF -> ID check_var_existence get_var_type O .)
    GREATER_T       reduce using rule 79 (ID_REF -> ID check_var_existence get_var_type O .)
    GREATER_T_EQUALS reduce using rule 79 (ID_REF -> ID check_var_existence get_var_type O .)
    LESS_T_EQUALS   reduce using rule 79 (ID_REF -> ID check_var_existence get_var_type O .)
    IS              reduce using rule 79 (ID_REF -> ID check_var_existence get_var_type O .)
    AND             reduce using rule 79 (ID_REF -> ID check_var_existence get_var_type O .)
    OR              reduce using rule 79 (ID_REF -> ID check_var_existence get_var_type O .)
    PERCENTAGE      reduce using rule 79 (ID_REF -> ID check_var_existence get_var_type O .)
    COMMA           reduce using rule 79 (ID_REF -> ID check_var_existence get_var_type O .)
    TICK            reduce using rule 79 (ID_REF -> ID check_var_existence get_var_type O .)
    R_BRACK         reduce using rule 79 (ID_REF -> ID check_var_existence get_var_type O .)
    R_PAREN         reduce using rule 79 (ID_REF -> ID check_var_existence get_var_type O .)
    COLON           reduce using rule 79 (ID_REF -> ID check_var_existence get_var_type O .)


state 169

    (83) O -> empty .

    MULTIPLY        reduce using rule 83 (O -> empty .)
    DIVIDE          reduce using rule 83 (O -> empty .)
    PLUS            reduce using rule 83 (O -> empty .)
    MINUS           reduce using rule 83 (O -> empty .)
    LESS_T          reduce using rule 83 (O -> empty .)
    GREATER_T       reduce using rule 83 (O -> empty .)
    GREATER_T_EQUALS reduce using rule 83 (O -> empty .)
    LESS_T_EQUALS   reduce using rule 83 (O -> empty .)
    IS              reduce using rule 83 (O -> empty .)
    AND             reduce using rule 83 (O -> empty .)
    OR              reduce using rule 83 (O -> empty .)
    PERCENTAGE      reduce using rule 83 (O -> empty .)
    COMMA           reduce using rule 83 (O -> empty .)
    TICK            reduce using rule 83 (O -> empty .)
    R_BRACK         reduce using rule 83 (O -> empty .)
    R_PAREN         reduce using rule 83 (O -> empty .)
    COLON           reduce using rule 83 (O -> empty .)
    EQUALS          reduce using rule 83 (O -> empty .)


state 170

    (131) MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 131 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 131 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    PLUS            reduce using rule 131 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    MINUS           reduce using rule 131 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 131 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 131 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 131 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 131 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    IS              reduce using rule 131 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    AND             reduce using rule 131 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    OR              reduce using rule 131 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 131 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    COMMA           reduce using rule 131 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    TICK            reduce using rule 131 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 131 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 131 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)
    COLON           reduce using rule 131 (MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN .)


state 171

    (132) MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 132 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 132 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    PLUS            reduce using rule 132 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    MINUS           reduce using rule 132 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 132 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 132 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 132 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 132 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    IS              reduce using rule 132 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    AND             reduce using rule 132 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    OR              reduce using rule 132 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 132 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    COMMA           reduce using rule 132 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    TICK            reduce using rule 132 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 132 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 132 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)
    COLON           reduce using rule 132 (MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN .)


state 172

    (86) P -> COMMA EXPRESSION P .

    R_BRACK         reduce using rule 86 (P -> COMMA EXPRESSION P .)


state 173

    (23) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN . COLON S_BLOCK TICK print_currentSymTab

    COLON           shift and go to state 185


state 174

    (120) PARAMS -> TYPE store_type . ID check_param_duplicates Y

    ID              shift and go to state 186


state 175

    (127) MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON . S_BLOCK TICK print_currentSymTab
    (18) S_BLOCK -> . L_BRACE F R_BRACE

    L_BRACE         shift and go to state 187

    S_BLOCK                        shift and go to state 188

state 176

    (129) DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION . COMMA EXPRESSION COMMA EXPRESSION R_PAREN

    COMMA           shift and go to state 189


state 177

    (128) DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION . COMMA EXPRESSION R_PAREN

    COMMA           shift and go to state 190


state 178

    (130) DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION . COMMA EXPRESSION R_PAREN

    COMMA           shift and go to state 191


state 179

    (77) NEGATION -> N EXPRESSION .

    COMMA           reduce using rule 77 (NEGATION -> N EXPRESSION .)
    R_PAREN         reduce using rule 77 (NEGATION -> N EXPRESSION .)


state 180

    (115) V -> W X .

    R_PAREN         reduce using rule 115 (V -> W X .)


state 181

    (118) X -> COMMA . V
    (115) V -> . W X
    (116) W -> . EXPRESSION
    (117) W -> . NEGATION
    (36) EXPRESSION -> . EXP G
    (77) NEGATION -> . N EXPRESSION
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (78) N -> . NOT
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    NOT             shift and go to state 166
    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    M                              shift and go to state 56
    TERM                           shift and go to state 51
    W                              shift and go to state 164
    FACTOR                         shift and go to state 58
    NEGATION                       shift and go to state 161
    N                              shift and go to state 163
    empty                          shift and go to state 54
    EXP                            shift and go to state 49
    V                              shift and go to state 192
    EXPRESSION                     shift and go to state 162

state 182

    (119) X -> empty .

    R_PAREN         reduce using rule 119 (X -> empty .)


state 183

    (113) SOLUTION_CALL -> ID check_sol_existence L_PAREN V R_PAREN .

    MULTIPLY        reduce using rule 113 (SOLUTION_CALL -> ID check_sol_existence L_PAREN V R_PAREN .)
    DIVIDE          reduce using rule 113 (SOLUTION_CALL -> ID check_sol_existence L_PAREN V R_PAREN .)
    PLUS            reduce using rule 113 (SOLUTION_CALL -> ID check_sol_existence L_PAREN V R_PAREN .)
    MINUS           reduce using rule 113 (SOLUTION_CALL -> ID check_sol_existence L_PAREN V R_PAREN .)
    LESS_T          reduce using rule 113 (SOLUTION_CALL -> ID check_sol_existence L_PAREN V R_PAREN .)
    GREATER_T       reduce using rule 113 (SOLUTION_CALL -> ID check_sol_existence L_PAREN V R_PAREN .)
    GREATER_T_EQUALS reduce using rule 113 (SOLUTION_CALL -> ID check_sol_existence L_PAREN V R_PAREN .)
    LESS_T_EQUALS   reduce using rule 113 (SOLUTION_CALL -> ID check_sol_existence L_PAREN V R_PAREN .)
    IS              reduce using rule 113 (SOLUTION_CALL -> ID check_sol_existence L_PAREN V R_PAREN .)
    AND             reduce using rule 113 (SOLUTION_CALL -> ID check_sol_existence L_PAREN V R_PAREN .)
    OR              reduce using rule 113 (SOLUTION_CALL -> ID check_sol_existence L_PAREN V R_PAREN .)
    PERCENTAGE      reduce using rule 113 (SOLUTION_CALL -> ID check_sol_existence L_PAREN V R_PAREN .)
    COMMA           reduce using rule 113 (SOLUTION_CALL -> ID check_sol_existence L_PAREN V R_PAREN .)
    TICK            reduce using rule 113 (SOLUTION_CALL -> ID check_sol_existence L_PAREN V R_PAREN .)
    R_BRACK         reduce using rule 113 (SOLUTION_CALL -> ID check_sol_existence L_PAREN V R_PAREN .)
    R_PAREN         reduce using rule 113 (SOLUTION_CALL -> ID check_sol_existence L_PAREN V R_PAREN .)
    COLON           reduce using rule 113 (SOLUTION_CALL -> ID check_sol_existence L_PAREN V R_PAREN .)


state 184

    (82) O -> L_BRACK EXPRESSION . check_int_type R_BRACK
    (84) check_int_type -> .

    R_BRACK         reduce using rule 84 (check_int_type -> .)

    check_int_type                 shift and go to state 193

state 185

    (23) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON . S_BLOCK TICK print_currentSymTab
    (18) S_BLOCK -> . L_BRACE F R_BRACE

    L_BRACE         shift and go to state 187

    S_BLOCK                        shift and go to state 194

state 186

    (120) PARAMS -> TYPE store_type ID . check_param_duplicates Y
    (121) check_param_duplicates -> .

    COMMA           reduce using rule 121 (check_param_duplicates -> .)
    R_PAREN         reduce using rule 121 (check_param_duplicates -> .)

    check_param_duplicates         shift and go to state 195

state 187

    (18) S_BLOCK -> L_BRACE . F R_BRACE
    (19) F -> . S_STATUTE F
    (20) F -> . empty
    (21) S_STATUTE -> . VAR_DEFINITIONS
    (22) S_STATUTE -> . STATUTE
    (144) empty -> .
    (7) VAR_DEFINITIONS -> . TYPE store_type A TICK
    (25) STATUTE -> . CONDITION
    (26) STATUTE -> . CYCLE
    (27) STATUTE -> . ASSIGNATION
    (30) TYPE -> . INT
    (31) TYPE -> . FLOAT
    (32) TYPE -> . CHAR
    (33) TYPE -> . STRING
    (34) TYPE -> . BOOL
    (35) TYPE -> . LIST
    (99) CONDITION -> . IF append_false_bottom EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing
    (97) CYCLE -> . FOR
    (98) CYCLE -> . WHILE
    (88) ASSIGNATION -> . ID_REF EQUALS append_equals EXPRESSION process_assignation_operation TICK
    (96) FOR -> . FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK
    (95) WHILE -> . WHILE_CYCLE EXPRESSION COLON BLOCK TICK
    (79) ID_REF -> . ID check_var_existence get_var_type O

    R_BRACE         reduce using rule 144 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 16
    STRING          shift and go to state 11
    BOOL            shift and go to state 17
    LIST            shift and go to state 15
    IF              shift and go to state 208
    FOR_CYCLE       shift and go to state 204
    WHILE_CYCLE     shift and go to state 210
    ID              shift and go to state 207

    WHILE                          shift and go to state 196
    S_STATUTE                      shift and go to state 198
    VAR_DEFINITIONS                shift and go to state 199
    ID_REF                         shift and go to state 200
    CONDITION                      shift and go to state 201
    CYCLE                          shift and go to state 202
    STATUTE                        shift and go to state 203
    ASSIGNATION                    shift and go to state 197
    FOR                            shift and go to state 205
    F                              shift and go to state 206
    empty                          shift and go to state 209
    TYPE                           shift and go to state 18

state 188

    (127) MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK . TICK print_currentSymTab

    TICK            shift and go to state 211


state 189

    (129) DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA . EXPRESSION COMMA EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    TERM                           shift and go to state 51
    M                              shift and go to state 56
    empty                          shift and go to state 54
    EXP                            shift and go to state 49
    FACTOR                         shift and go to state 58
    EXPRESSION                     shift and go to state 212

state 190

    (128) DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA . EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    TERM                           shift and go to state 51
    M                              shift and go to state 56
    empty                          shift and go to state 54
    EXP                            shift and go to state 49
    FACTOR                         shift and go to state 58
    EXPRESSION                     shift and go to state 213

state 191

    (130) DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA . EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    TERM                           shift and go to state 51
    M                              shift and go to state 56
    empty                          shift and go to state 54
    EXP                            shift and go to state 49
    FACTOR                         shift and go to state 58
    EXPRESSION                     shift and go to state 214

state 192

    (118) X -> COMMA V .

    R_PAREN         reduce using rule 118 (X -> COMMA V .)


state 193

    (82) O -> L_BRACK EXPRESSION check_int_type . R_BRACK

    R_BRACK         shift and go to state 215


state 194

    (23) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK . TICK print_currentSymTab

    TICK            shift and go to state 216


state 195

    (120) PARAMS -> TYPE store_type ID check_param_duplicates . Y
    (122) Y -> . COMMA PARAMS
    (123) Y -> . empty
    (144) empty -> .

    COMMA           shift and go to state 217
    R_PAREN         reduce using rule 144 (empty -> .)

    Y                              shift and go to state 218
    empty                          shift and go to state 219

state 196

    (98) CYCLE -> WHILE .

    INT             reduce using rule 98 (CYCLE -> WHILE .)
    FLOAT           reduce using rule 98 (CYCLE -> WHILE .)
    CHAR            reduce using rule 98 (CYCLE -> WHILE .)
    STRING          reduce using rule 98 (CYCLE -> WHILE .)
    BOOL            reduce using rule 98 (CYCLE -> WHILE .)
    LIST            reduce using rule 98 (CYCLE -> WHILE .)
    IF              reduce using rule 98 (CYCLE -> WHILE .)
    FOR_CYCLE       reduce using rule 98 (CYCLE -> WHILE .)
    WHILE_CYCLE     reduce using rule 98 (CYCLE -> WHILE .)
    ID              reduce using rule 98 (CYCLE -> WHILE .)
    R_BRACE         reduce using rule 98 (CYCLE -> WHILE .)


state 197

    (27) STATUTE -> ASSIGNATION .

    IF              reduce using rule 27 (STATUTE -> ASSIGNATION .)
    FOR_CYCLE       reduce using rule 27 (STATUTE -> ASSIGNATION .)
    WHILE_CYCLE     reduce using rule 27 (STATUTE -> ASSIGNATION .)
    ID              reduce using rule 27 (STATUTE -> ASSIGNATION .)
    R_BRACE         reduce using rule 27 (STATUTE -> ASSIGNATION .)
    INT             reduce using rule 27 (STATUTE -> ASSIGNATION .)
    FLOAT           reduce using rule 27 (STATUTE -> ASSIGNATION .)
    CHAR            reduce using rule 27 (STATUTE -> ASSIGNATION .)
    STRING          reduce using rule 27 (STATUTE -> ASSIGNATION .)
    BOOL            reduce using rule 27 (STATUTE -> ASSIGNATION .)
    LIST            reduce using rule 27 (STATUTE -> ASSIGNATION .)


state 198

    (19) F -> S_STATUTE . F
    (19) F -> . S_STATUTE F
    (20) F -> . empty
    (21) S_STATUTE -> . VAR_DEFINITIONS
    (22) S_STATUTE -> . STATUTE
    (144) empty -> .
    (7) VAR_DEFINITIONS -> . TYPE store_type A TICK
    (25) STATUTE -> . CONDITION
    (26) STATUTE -> . CYCLE
    (27) STATUTE -> . ASSIGNATION
    (30) TYPE -> . INT
    (31) TYPE -> . FLOAT
    (32) TYPE -> . CHAR
    (33) TYPE -> . STRING
    (34) TYPE -> . BOOL
    (35) TYPE -> . LIST
    (99) CONDITION -> . IF append_false_bottom EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing
    (97) CYCLE -> . FOR
    (98) CYCLE -> . WHILE
    (88) ASSIGNATION -> . ID_REF EQUALS append_equals EXPRESSION process_assignation_operation TICK
    (96) FOR -> . FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK
    (95) WHILE -> . WHILE_CYCLE EXPRESSION COLON BLOCK TICK
    (79) ID_REF -> . ID check_var_existence get_var_type O

    R_BRACE         reduce using rule 144 (empty -> .)
    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 16
    STRING          shift and go to state 11
    BOOL            shift and go to state 17
    LIST            shift and go to state 15
    IF              shift and go to state 208
    FOR_CYCLE       shift and go to state 204
    WHILE_CYCLE     shift and go to state 210
    ID              shift and go to state 207

    WHILE                          shift and go to state 196
    S_STATUTE                      shift and go to state 198
    VAR_DEFINITIONS                shift and go to state 199
    ID_REF                         shift and go to state 200
    CONDITION                      shift and go to state 201
    CYCLE                          shift and go to state 202
    STATUTE                        shift and go to state 203
    ASSIGNATION                    shift and go to state 197
    FOR                            shift and go to state 205
    F                              shift and go to state 220
    empty                          shift and go to state 209
    TYPE                           shift and go to state 18

state 199

    (21) S_STATUTE -> VAR_DEFINITIONS .

    INT             reduce using rule 21 (S_STATUTE -> VAR_DEFINITIONS .)
    FLOAT           reduce using rule 21 (S_STATUTE -> VAR_DEFINITIONS .)
    CHAR            reduce using rule 21 (S_STATUTE -> VAR_DEFINITIONS .)
    STRING          reduce using rule 21 (S_STATUTE -> VAR_DEFINITIONS .)
    BOOL            reduce using rule 21 (S_STATUTE -> VAR_DEFINITIONS .)
    LIST            reduce using rule 21 (S_STATUTE -> VAR_DEFINITIONS .)
    IF              reduce using rule 21 (S_STATUTE -> VAR_DEFINITIONS .)
    FOR_CYCLE       reduce using rule 21 (S_STATUTE -> VAR_DEFINITIONS .)
    WHILE_CYCLE     reduce using rule 21 (S_STATUTE -> VAR_DEFINITIONS .)
    ID              reduce using rule 21 (S_STATUTE -> VAR_DEFINITIONS .)
    R_BRACE         reduce using rule 21 (S_STATUTE -> VAR_DEFINITIONS .)


state 200

    (88) ASSIGNATION -> ID_REF . EQUALS append_equals EXPRESSION process_assignation_operation TICK

    EQUALS          shift and go to state 221


state 201

    (25) STATUTE -> CONDITION .

    IF              reduce using rule 25 (STATUTE -> CONDITION .)
    FOR_CYCLE       reduce using rule 25 (STATUTE -> CONDITION .)
    WHILE_CYCLE     reduce using rule 25 (STATUTE -> CONDITION .)
    ID              reduce using rule 25 (STATUTE -> CONDITION .)
    R_BRACE         reduce using rule 25 (STATUTE -> CONDITION .)
    INT             reduce using rule 25 (STATUTE -> CONDITION .)
    FLOAT           reduce using rule 25 (STATUTE -> CONDITION .)
    CHAR            reduce using rule 25 (STATUTE -> CONDITION .)
    STRING          reduce using rule 25 (STATUTE -> CONDITION .)
    BOOL            reduce using rule 25 (STATUTE -> CONDITION .)
    LIST            reduce using rule 25 (STATUTE -> CONDITION .)


state 202

    (26) STATUTE -> CYCLE .

    IF              reduce using rule 26 (STATUTE -> CYCLE .)
    FOR_CYCLE       reduce using rule 26 (STATUTE -> CYCLE .)
    WHILE_CYCLE     reduce using rule 26 (STATUTE -> CYCLE .)
    ID              reduce using rule 26 (STATUTE -> CYCLE .)
    R_BRACE         reduce using rule 26 (STATUTE -> CYCLE .)
    INT             reduce using rule 26 (STATUTE -> CYCLE .)
    FLOAT           reduce using rule 26 (STATUTE -> CYCLE .)
    CHAR            reduce using rule 26 (STATUTE -> CYCLE .)
    STRING          reduce using rule 26 (STATUTE -> CYCLE .)
    BOOL            reduce using rule 26 (STATUTE -> CYCLE .)
    LIST            reduce using rule 26 (STATUTE -> CYCLE .)


state 203

    (22) S_STATUTE -> STATUTE .

    INT             reduce using rule 22 (S_STATUTE -> STATUTE .)
    FLOAT           reduce using rule 22 (S_STATUTE -> STATUTE .)
    CHAR            reduce using rule 22 (S_STATUTE -> STATUTE .)
    STRING          reduce using rule 22 (S_STATUTE -> STATUTE .)
    BOOL            reduce using rule 22 (S_STATUTE -> STATUTE .)
    LIST            reduce using rule 22 (S_STATUTE -> STATUTE .)
    IF              reduce using rule 22 (S_STATUTE -> STATUTE .)
    FOR_CYCLE       reduce using rule 22 (S_STATUTE -> STATUTE .)
    WHILE_CYCLE     reduce using rule 22 (S_STATUTE -> STATUTE .)
    ID              reduce using rule 22 (S_STATUTE -> STATUTE .)
    R_BRACE         reduce using rule 22 (S_STATUTE -> STATUTE .)


state 204

    (96) FOR -> FOR_CYCLE . S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK
    (94) S_ASSIGNATION -> . ID_REF EQUALS append_equals EXPRESSION process_assignation_operation
    (79) ID_REF -> . ID check_var_existence get_var_type O

    ID              shift and go to state 207

    ID_REF                         shift and go to state 222
    S_ASSIGNATION                  shift and go to state 223

state 205

    (97) CYCLE -> FOR .

    INT             reduce using rule 97 (CYCLE -> FOR .)
    FLOAT           reduce using rule 97 (CYCLE -> FOR .)
    CHAR            reduce using rule 97 (CYCLE -> FOR .)
    STRING          reduce using rule 97 (CYCLE -> FOR .)
    BOOL            reduce using rule 97 (CYCLE -> FOR .)
    LIST            reduce using rule 97 (CYCLE -> FOR .)
    IF              reduce using rule 97 (CYCLE -> FOR .)
    FOR_CYCLE       reduce using rule 97 (CYCLE -> FOR .)
    WHILE_CYCLE     reduce using rule 97 (CYCLE -> FOR .)
    ID              reduce using rule 97 (CYCLE -> FOR .)
    R_BRACE         reduce using rule 97 (CYCLE -> FOR .)


state 206

    (18) S_BLOCK -> L_BRACE F . R_BRACE

    R_BRACE         shift and go to state 224


state 207

    (79) ID_REF -> ID . check_var_existence get_var_type O
    (80) check_var_existence -> .

    L_BRACK         reduce using rule 80 (check_var_existence -> .)
    EQUALS          reduce using rule 80 (check_var_existence -> .)

    check_var_existence            shift and go to state 122

state 208

    (99) CONDITION -> IF . append_false_bottom EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing
    (101) append_false_bottom -> .

    L_PAREN         reduce using rule 101 (append_false_bottom -> .)
    PLUS            reduce using rule 101 (append_false_bottom -> .)
    MINUS           reduce using rule 101 (append_false_bottom -> .)
    ID              reduce using rule 101 (append_false_bottom -> .)
    INT_CONT        reduce using rule 101 (append_false_bottom -> .)
    STRING_CONT     reduce using rule 101 (append_false_bottom -> .)
    CHAR_CONT       reduce using rule 101 (append_false_bottom -> .)
    FLOAT_CONT      reduce using rule 101 (append_false_bottom -> .)
    BOOL_CONT       reduce using rule 101 (append_false_bottom -> .)
    DRAW_LINE_R     reduce using rule 101 (append_false_bottom -> .)
    DRAW_CIRCLE_R   reduce using rule 101 (append_false_bottom -> .)
    DRAW_RECTANGLE_R reduce using rule 101 (append_false_bottom -> .)
    MOVE_UP_R       reduce using rule 101 (append_false_bottom -> .)
    MOVE_RIGHT_R    reduce using rule 101 (append_false_bottom -> .)
    MOVE_DOWN_R     reduce using rule 101 (append_false_bottom -> .)
    MOVE_LEFT_R     reduce using rule 101 (append_false_bottom -> .)
    PRINT_R         reduce using rule 101 (append_false_bottom -> .)

    append_false_bottom            shift and go to state 225

state 209

    (20) F -> empty .

    R_BRACE         reduce using rule 20 (F -> empty .)


state 210

    (95) WHILE -> WHILE_CYCLE . EXPRESSION COLON BLOCK TICK
    (36) EXPRESSION -> . EXP G
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    TERM                           shift and go to state 51
    M                              shift and go to state 56
    empty                          shift and go to state 54
    EXP                            shift and go to state 49
    FACTOR                         shift and go to state 58
    EXPRESSION                     shift and go to state 226

state 211

    (127) MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK TICK . print_currentSymTab
    (3) print_currentSymTab -> .

    $end            reduce using rule 3 (print_currentSymTab -> .)

    print_currentSymTab            shift and go to state 227

state 212

    (129) DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION . COMMA EXPRESSION R_PAREN

    COMMA           shift and go to state 228


state 213

    (128) DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 229


state 214

    (130) DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 230


state 215

    (82) O -> L_BRACK EXPRESSION check_int_type R_BRACK .

    MULTIPLY        reduce using rule 82 (O -> L_BRACK EXPRESSION check_int_type R_BRACK .)
    DIVIDE          reduce using rule 82 (O -> L_BRACK EXPRESSION check_int_type R_BRACK .)
    PLUS            reduce using rule 82 (O -> L_BRACK EXPRESSION check_int_type R_BRACK .)
    MINUS           reduce using rule 82 (O -> L_BRACK EXPRESSION check_int_type R_BRACK .)
    LESS_T          reduce using rule 82 (O -> L_BRACK EXPRESSION check_int_type R_BRACK .)
    GREATER_T       reduce using rule 82 (O -> L_BRACK EXPRESSION check_int_type R_BRACK .)
    GREATER_T_EQUALS reduce using rule 82 (O -> L_BRACK EXPRESSION check_int_type R_BRACK .)
    LESS_T_EQUALS   reduce using rule 82 (O -> L_BRACK EXPRESSION check_int_type R_BRACK .)
    IS              reduce using rule 82 (O -> L_BRACK EXPRESSION check_int_type R_BRACK .)
    AND             reduce using rule 82 (O -> L_BRACK EXPRESSION check_int_type R_BRACK .)
    OR              reduce using rule 82 (O -> L_BRACK EXPRESSION check_int_type R_BRACK .)
    PERCENTAGE      reduce using rule 82 (O -> L_BRACK EXPRESSION check_int_type R_BRACK .)
    COMMA           reduce using rule 82 (O -> L_BRACK EXPRESSION check_int_type R_BRACK .)
    TICK            reduce using rule 82 (O -> L_BRACK EXPRESSION check_int_type R_BRACK .)
    R_BRACK         reduce using rule 82 (O -> L_BRACK EXPRESSION check_int_type R_BRACK .)
    R_PAREN         reduce using rule 82 (O -> L_BRACK EXPRESSION check_int_type R_BRACK .)
    COLON           reduce using rule 82 (O -> L_BRACK EXPRESSION check_int_type R_BRACK .)
    EQUALS          reduce using rule 82 (O -> L_BRACK EXPRESSION check_int_type R_BRACK .)


state 216

    (23) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK . print_currentSymTab
    (3) print_currentSymTab -> .

    SOL             reduce using rule 3 (print_currentSymTab -> .)
    INT             reduce using rule 3 (print_currentSymTab -> .)

    print_currentSymTab            shift and go to state 231

state 217

    (122) Y -> COMMA . PARAMS
    (120) PARAMS -> . TYPE store_type ID check_param_duplicates Y
    (30) TYPE -> . INT
    (31) TYPE -> . FLOAT
    (32) TYPE -> . CHAR
    (33) TYPE -> . STRING
    (34) TYPE -> . BOOL
    (35) TYPE -> . LIST

    INT             shift and go to state 13
    FLOAT           shift and go to state 14
    CHAR            shift and go to state 16
    STRING          shift and go to state 11
    BOOL            shift and go to state 17
    LIST            shift and go to state 15

    TYPE                           shift and go to state 152
    PARAMS                         shift and go to state 232

state 218

    (120) PARAMS -> TYPE store_type ID check_param_duplicates Y .

    R_PAREN         reduce using rule 120 (PARAMS -> TYPE store_type ID check_param_duplicates Y .)


state 219

    (123) Y -> empty .

    R_PAREN         reduce using rule 123 (Y -> empty .)


state 220

    (19) F -> S_STATUTE F .

    R_BRACE         reduce using rule 19 (F -> S_STATUTE F .)


state 221

    (88) ASSIGNATION -> ID_REF EQUALS . append_equals EXPRESSION process_assignation_operation TICK
    (89) append_equals -> .

    L_PAREN         reduce using rule 89 (append_equals -> .)
    PLUS            reduce using rule 89 (append_equals -> .)
    MINUS           reduce using rule 89 (append_equals -> .)
    ID              reduce using rule 89 (append_equals -> .)
    INT_CONT        reduce using rule 89 (append_equals -> .)
    STRING_CONT     reduce using rule 89 (append_equals -> .)
    CHAR_CONT       reduce using rule 89 (append_equals -> .)
    FLOAT_CONT      reduce using rule 89 (append_equals -> .)
    BOOL_CONT       reduce using rule 89 (append_equals -> .)
    DRAW_LINE_R     reduce using rule 89 (append_equals -> .)
    DRAW_CIRCLE_R   reduce using rule 89 (append_equals -> .)
    DRAW_RECTANGLE_R reduce using rule 89 (append_equals -> .)
    MOVE_UP_R       reduce using rule 89 (append_equals -> .)
    MOVE_RIGHT_R    reduce using rule 89 (append_equals -> .)
    MOVE_DOWN_R     reduce using rule 89 (append_equals -> .)
    MOVE_LEFT_R     reduce using rule 89 (append_equals -> .)
    PRINT_R         reduce using rule 89 (append_equals -> .)

    append_equals                  shift and go to state 233

state 222

    (94) S_ASSIGNATION -> ID_REF . EQUALS append_equals EXPRESSION process_assignation_operation

    EQUALS          shift and go to state 234


state 223

    (96) FOR -> FOR_CYCLE S_ASSIGNATION . TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK

    TICK            shift and go to state 235


state 224

    (18) S_BLOCK -> L_BRACE F R_BRACE .

    TICK            reduce using rule 18 (S_BLOCK -> L_BRACE F R_BRACE .)


state 225

    (99) CONDITION -> IF append_false_bottom . EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing
    (36) EXPRESSION -> . EXP G
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    TERM                           shift and go to state 51
    M                              shift and go to state 56
    empty                          shift and go to state 54
    EXP                            shift and go to state 49
    FACTOR                         shift and go to state 58
    EXPRESSION                     shift and go to state 236

state 226

    (95) WHILE -> WHILE_CYCLE EXPRESSION . COLON BLOCK TICK

    COLON           shift and go to state 237


state 227

    (127) MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK TICK print_currentSymTab .

    $end            reduce using rule 127 (MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK TICK print_currentSymTab .)


state 228

    (129) DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA . EXPRESSION R_PAREN
    (36) EXPRESSION -> . EXP G
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    TERM                           shift and go to state 51
    M                              shift and go to state 56
    empty                          shift and go to state 54
    EXP                            shift and go to state 49
    FACTOR                         shift and go to state 58
    EXPRESSION                     shift and go to state 238

state 229

    (128) DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 128 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 128 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    PLUS            reduce using rule 128 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    MINUS           reduce using rule 128 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 128 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 128 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 128 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 128 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    IS              reduce using rule 128 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    AND             reduce using rule 128 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    OR              reduce using rule 128 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 128 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    COMMA           reduce using rule 128 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    TICK            reduce using rule 128 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 128 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 128 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    COLON           reduce using rule 128 (DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)


state 230

    (130) DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 130 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 130 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    PLUS            reduce using rule 130 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    MINUS           reduce using rule 130 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 130 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 130 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 130 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 130 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    IS              reduce using rule 130 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    AND             reduce using rule 130 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    OR              reduce using rule 130 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 130 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    COMMA           reduce using rule 130 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    TICK            reduce using rule 130 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 130 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 130 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    COLON           reduce using rule 130 (DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)


state 231

    (23) SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK print_currentSymTab .

    SOL             reduce using rule 23 (SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK print_currentSymTab .)
    INT             reduce using rule 23 (SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK print_currentSymTab .)


state 232

    (122) Y -> COMMA PARAMS .

    R_PAREN         reduce using rule 122 (Y -> COMMA PARAMS .)


state 233

    (88) ASSIGNATION -> ID_REF EQUALS append_equals . EXPRESSION process_assignation_operation TICK
    (36) EXPRESSION -> . EXP G
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    TERM                           shift and go to state 51
    M                              shift and go to state 56
    empty                          shift and go to state 54
    EXP                            shift and go to state 49
    FACTOR                         shift and go to state 58
    EXPRESSION                     shift and go to state 239

state 234

    (94) S_ASSIGNATION -> ID_REF EQUALS . append_equals EXPRESSION process_assignation_operation
    (89) append_equals -> .

    L_PAREN         reduce using rule 89 (append_equals -> .)
    PLUS            reduce using rule 89 (append_equals -> .)
    MINUS           reduce using rule 89 (append_equals -> .)
    ID              reduce using rule 89 (append_equals -> .)
    INT_CONT        reduce using rule 89 (append_equals -> .)
    STRING_CONT     reduce using rule 89 (append_equals -> .)
    CHAR_CONT       reduce using rule 89 (append_equals -> .)
    FLOAT_CONT      reduce using rule 89 (append_equals -> .)
    BOOL_CONT       reduce using rule 89 (append_equals -> .)
    DRAW_LINE_R     reduce using rule 89 (append_equals -> .)
    DRAW_CIRCLE_R   reduce using rule 89 (append_equals -> .)
    DRAW_RECTANGLE_R reduce using rule 89 (append_equals -> .)
    MOVE_UP_R       reduce using rule 89 (append_equals -> .)
    MOVE_RIGHT_R    reduce using rule 89 (append_equals -> .)
    MOVE_DOWN_R     reduce using rule 89 (append_equals -> .)
    MOVE_LEFT_R     reduce using rule 89 (append_equals -> .)
    PRINT_R         reduce using rule 89 (append_equals -> .)

    append_equals                  shift and go to state 240

state 235

    (96) FOR -> FOR_CYCLE S_ASSIGNATION TICK . EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK
    (36) EXPRESSION -> . EXP G
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    TERM                           shift and go to state 51
    M                              shift and go to state 56
    empty                          shift and go to state 54
    EXP                            shift and go to state 49
    FACTOR                         shift and go to state 58
    EXPRESSION                     shift and go to state 241

state 236

    (99) CONDITION -> IF append_false_bottom EXPRESSION . process_condition_operation COLON BLOCK R TICK end_condition_operation_processing
    (102) process_condition_operation -> .

    COLON           reduce using rule 102 (process_condition_operation -> .)

    process_condition_operation    shift and go to state 242

state 237

    (95) WHILE -> WHILE_CYCLE EXPRESSION COLON . BLOCK TICK
    (91) BLOCK -> . L_BRACE Q R_BRACE

    L_BRACE         shift and go to state 243

    BLOCK                          shift and go to state 244

state 238

    (129) DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION . R_PAREN

    R_PAREN         shift and go to state 245


state 239

    (88) ASSIGNATION -> ID_REF EQUALS append_equals EXPRESSION . process_assignation_operation TICK
    (90) process_assignation_operation -> .

    TICK            reduce using rule 90 (process_assignation_operation -> .)

    process_assignation_operation  shift and go to state 246

state 240

    (94) S_ASSIGNATION -> ID_REF EQUALS append_equals . EXPRESSION process_assignation_operation
    (36) EXPRESSION -> . EXP G
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    TERM                           shift and go to state 51
    M                              shift and go to state 56
    empty                          shift and go to state 54
    EXP                            shift and go to state 49
    FACTOR                         shift and go to state 58
    EXPRESSION                     shift and go to state 247

state 241

    (96) FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION . TICK S_ASSIGNATION COLON BLOCK TICK

    TICK            shift and go to state 248


state 242

    (99) CONDITION -> IF append_false_bottom EXPRESSION process_condition_operation . COLON BLOCK R TICK end_condition_operation_processing

    COLON           shift and go to state 249


state 243

    (91) BLOCK -> L_BRACE . Q R_BRACE
    (92) Q -> . STATUTE Q
    (93) Q -> . empty
    (25) STATUTE -> . CONDITION
    (26) STATUTE -> . CYCLE
    (27) STATUTE -> . ASSIGNATION
    (144) empty -> .
    (99) CONDITION -> . IF append_false_bottom EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing
    (97) CYCLE -> . FOR
    (98) CYCLE -> . WHILE
    (88) ASSIGNATION -> . ID_REF EQUALS append_equals EXPRESSION process_assignation_operation TICK
    (96) FOR -> . FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK
    (95) WHILE -> . WHILE_CYCLE EXPRESSION COLON BLOCK TICK
    (79) ID_REF -> . ID check_var_existence get_var_type O

    R_BRACE         reduce using rule 144 (empty -> .)
    IF              shift and go to state 208
    FOR_CYCLE       shift and go to state 204
    WHILE_CYCLE     shift and go to state 210
    ID              shift and go to state 207

    STATUTE                        shift and go to state 251
    ASSIGNATION                    shift and go to state 197
    FOR                            shift and go to state 205
    ID_REF                         shift and go to state 200
    Q                              shift and go to state 252
    WHILE                          shift and go to state 196
    empty                          shift and go to state 250
    CONDITION                      shift and go to state 201
    CYCLE                          shift and go to state 202

state 244

    (95) WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK . TICK

    TICK            shift and go to state 253


state 245

    (129) DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .

    MULTIPLY        reduce using rule 129 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    DIVIDE          reduce using rule 129 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    PLUS            reduce using rule 129 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    MINUS           reduce using rule 129 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    LESS_T          reduce using rule 129 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    GREATER_T       reduce using rule 129 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    GREATER_T_EQUALS reduce using rule 129 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    LESS_T_EQUALS   reduce using rule 129 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    IS              reduce using rule 129 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    AND             reduce using rule 129 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    OR              reduce using rule 129 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    PERCENTAGE      reduce using rule 129 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    COMMA           reduce using rule 129 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    TICK            reduce using rule 129 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    R_BRACK         reduce using rule 129 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    R_PAREN         reduce using rule 129 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)
    COLON           reduce using rule 129 (DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN .)


state 246

    (88) ASSIGNATION -> ID_REF EQUALS append_equals EXPRESSION process_assignation_operation . TICK

    TICK            shift and go to state 254


state 247

    (94) S_ASSIGNATION -> ID_REF EQUALS append_equals EXPRESSION . process_assignation_operation
    (90) process_assignation_operation -> .

    TICK            reduce using rule 90 (process_assignation_operation -> .)
    COLON           reduce using rule 90 (process_assignation_operation -> .)

    process_assignation_operation  shift and go to state 255

state 248

    (96) FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK . S_ASSIGNATION COLON BLOCK TICK
    (94) S_ASSIGNATION -> . ID_REF EQUALS append_equals EXPRESSION process_assignation_operation
    (79) ID_REF -> . ID check_var_existence get_var_type O

    ID              shift and go to state 207

    ID_REF                         shift and go to state 222
    S_ASSIGNATION                  shift and go to state 256

state 249

    (99) CONDITION -> IF append_false_bottom EXPRESSION process_condition_operation COLON . BLOCK R TICK end_condition_operation_processing
    (91) BLOCK -> . L_BRACE Q R_BRACE

    L_BRACE         shift and go to state 243

    BLOCK                          shift and go to state 257

state 250

    (93) Q -> empty .

    R_BRACE         reduce using rule 93 (Q -> empty .)


state 251

    (92) Q -> STATUTE . Q
    (92) Q -> . STATUTE Q
    (93) Q -> . empty
    (25) STATUTE -> . CONDITION
    (26) STATUTE -> . CYCLE
    (27) STATUTE -> . ASSIGNATION
    (144) empty -> .
    (99) CONDITION -> . IF append_false_bottom EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing
    (97) CYCLE -> . FOR
    (98) CYCLE -> . WHILE
    (88) ASSIGNATION -> . ID_REF EQUALS append_equals EXPRESSION process_assignation_operation TICK
    (96) FOR -> . FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK
    (95) WHILE -> . WHILE_CYCLE EXPRESSION COLON BLOCK TICK
    (79) ID_REF -> . ID check_var_existence get_var_type O

    R_BRACE         reduce using rule 144 (empty -> .)
    IF              shift and go to state 208
    FOR_CYCLE       shift and go to state 204
    WHILE_CYCLE     shift and go to state 210
    ID              shift and go to state 207

    STATUTE                        shift and go to state 251
    ASSIGNATION                    shift and go to state 197
    FOR                            shift and go to state 205
    ID_REF                         shift and go to state 200
    Q                              shift and go to state 258
    WHILE                          shift and go to state 196
    empty                          shift and go to state 250
    CONDITION                      shift and go to state 201
    CYCLE                          shift and go to state 202

state 252

    (91) BLOCK -> L_BRACE Q . R_BRACE

    R_BRACE         shift and go to state 259


state 253

    (95) WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .

    IF              reduce using rule 95 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    FOR_CYCLE       reduce using rule 95 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    WHILE_CYCLE     reduce using rule 95 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    ID              reduce using rule 95 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    R_BRACE         reduce using rule 95 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    INT             reduce using rule 95 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    FLOAT           reduce using rule 95 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    CHAR            reduce using rule 95 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    STRING          reduce using rule 95 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    BOOL            reduce using rule 95 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)
    LIST            reduce using rule 95 (WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK .)


state 254

    (88) ASSIGNATION -> ID_REF EQUALS append_equals EXPRESSION process_assignation_operation TICK .

    IF              reduce using rule 88 (ASSIGNATION -> ID_REF EQUALS append_equals EXPRESSION process_assignation_operation TICK .)
    FOR_CYCLE       reduce using rule 88 (ASSIGNATION -> ID_REF EQUALS append_equals EXPRESSION process_assignation_operation TICK .)
    WHILE_CYCLE     reduce using rule 88 (ASSIGNATION -> ID_REF EQUALS append_equals EXPRESSION process_assignation_operation TICK .)
    ID              reduce using rule 88 (ASSIGNATION -> ID_REF EQUALS append_equals EXPRESSION process_assignation_operation TICK .)
    R_BRACE         reduce using rule 88 (ASSIGNATION -> ID_REF EQUALS append_equals EXPRESSION process_assignation_operation TICK .)
    INT             reduce using rule 88 (ASSIGNATION -> ID_REF EQUALS append_equals EXPRESSION process_assignation_operation TICK .)
    FLOAT           reduce using rule 88 (ASSIGNATION -> ID_REF EQUALS append_equals EXPRESSION process_assignation_operation TICK .)
    CHAR            reduce using rule 88 (ASSIGNATION -> ID_REF EQUALS append_equals EXPRESSION process_assignation_operation TICK .)
    STRING          reduce using rule 88 (ASSIGNATION -> ID_REF EQUALS append_equals EXPRESSION process_assignation_operation TICK .)
    BOOL            reduce using rule 88 (ASSIGNATION -> ID_REF EQUALS append_equals EXPRESSION process_assignation_operation TICK .)
    LIST            reduce using rule 88 (ASSIGNATION -> ID_REF EQUALS append_equals EXPRESSION process_assignation_operation TICK .)


state 255

    (94) S_ASSIGNATION -> ID_REF EQUALS append_equals EXPRESSION process_assignation_operation .

    COLON           reduce using rule 94 (S_ASSIGNATION -> ID_REF EQUALS append_equals EXPRESSION process_assignation_operation .)
    TICK            reduce using rule 94 (S_ASSIGNATION -> ID_REF EQUALS append_equals EXPRESSION process_assignation_operation .)


state 256

    (96) FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION . COLON BLOCK TICK

    COLON           shift and go to state 260


state 257

    (99) CONDITION -> IF append_false_bottom EXPRESSION process_condition_operation COLON BLOCK . R TICK end_condition_operation_processing
    (103) R -> . S
    (104) R -> . T
    (105) S -> . ELIF process_elif_operation EXPRESSION process_condition_operation COLON BLOCK U
    (110) T -> . ELSE process_else_operation COLON BLOCK end_else_operation_processing

    ELIF            shift and go to state 261
    ELSE            shift and go to state 263

    S                              shift and go to state 264
    R                              shift and go to state 265
    T                              shift and go to state 262

state 258

    (92) Q -> STATUTE Q .

    R_BRACE         reduce using rule 92 (Q -> STATUTE Q .)


state 259

    (91) BLOCK -> L_BRACE Q R_BRACE .

    TICK            reduce using rule 91 (BLOCK -> L_BRACE Q R_BRACE .)
    ELIF            reduce using rule 91 (BLOCK -> L_BRACE Q R_BRACE .)
    ELSE            reduce using rule 91 (BLOCK -> L_BRACE Q R_BRACE .)


state 260

    (96) FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON . BLOCK TICK
    (91) BLOCK -> . L_BRACE Q R_BRACE

    L_BRACE         shift and go to state 243

    BLOCK                          shift and go to state 266

state 261

    (105) S -> ELIF . process_elif_operation EXPRESSION process_condition_operation COLON BLOCK U
    (106) process_elif_operation -> .

    L_PAREN         reduce using rule 106 (process_elif_operation -> .)
    PLUS            reduce using rule 106 (process_elif_operation -> .)
    MINUS           reduce using rule 106 (process_elif_operation -> .)
    ID              reduce using rule 106 (process_elif_operation -> .)
    INT_CONT        reduce using rule 106 (process_elif_operation -> .)
    STRING_CONT     reduce using rule 106 (process_elif_operation -> .)
    CHAR_CONT       reduce using rule 106 (process_elif_operation -> .)
    FLOAT_CONT      reduce using rule 106 (process_elif_operation -> .)
    BOOL_CONT       reduce using rule 106 (process_elif_operation -> .)
    DRAW_LINE_R     reduce using rule 106 (process_elif_operation -> .)
    DRAW_CIRCLE_R   reduce using rule 106 (process_elif_operation -> .)
    DRAW_RECTANGLE_R reduce using rule 106 (process_elif_operation -> .)
    MOVE_UP_R       reduce using rule 106 (process_elif_operation -> .)
    MOVE_RIGHT_R    reduce using rule 106 (process_elif_operation -> .)
    MOVE_DOWN_R     reduce using rule 106 (process_elif_operation -> .)
    MOVE_LEFT_R     reduce using rule 106 (process_elif_operation -> .)
    PRINT_R         reduce using rule 106 (process_elif_operation -> .)

    process_elif_operation         shift and go to state 267

state 262

    (104) R -> T .

    TICK            reduce using rule 104 (R -> T .)


state 263

    (110) T -> ELSE . process_else_operation COLON BLOCK end_else_operation_processing
    (111) process_else_operation -> .

    COLON           reduce using rule 111 (process_else_operation -> .)

    process_else_operation         shift and go to state 268

state 264

    (103) R -> S .

    TICK            reduce using rule 103 (R -> S .)


state 265

    (99) CONDITION -> IF append_false_bottom EXPRESSION process_condition_operation COLON BLOCK R . TICK end_condition_operation_processing

    TICK            shift and go to state 269


state 266

    (96) FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK . TICK

    TICK            shift and go to state 270


state 267

    (105) S -> ELIF process_elif_operation . EXPRESSION process_condition_operation COLON BLOCK U
    (36) EXPRESSION -> . EXP G
    (48) EXP -> . TERM process_possible_plus_minus_operation I
    (54) TERM -> . FACTOR process_possible_multiply_divide_operation K
    (60) FACTOR -> . L_PAREN push_false_bottom EXPRESSION R_PAREN pop_false_bottom
    (61) FACTOR -> . M CON_VAR check_sign_type_correspondence
    (65) M -> . PLUS
    (66) M -> . MINUS
    (67) M -> . empty
    (144) empty -> .

    L_PAREN         shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 50
    ID              reduce using rule 144 (empty -> .)
    INT_CONT        reduce using rule 144 (empty -> .)
    STRING_CONT     reduce using rule 144 (empty -> .)
    CHAR_CONT       reduce using rule 144 (empty -> .)
    FLOAT_CONT      reduce using rule 144 (empty -> .)
    BOOL_CONT       reduce using rule 144 (empty -> .)
    DRAW_LINE_R     reduce using rule 144 (empty -> .)
    DRAW_CIRCLE_R   reduce using rule 144 (empty -> .)
    DRAW_RECTANGLE_R reduce using rule 144 (empty -> .)
    MOVE_UP_R       reduce using rule 144 (empty -> .)
    MOVE_RIGHT_R    reduce using rule 144 (empty -> .)
    MOVE_DOWN_R     reduce using rule 144 (empty -> .)
    MOVE_LEFT_R     reduce using rule 144 (empty -> .)
    PRINT_R         reduce using rule 144 (empty -> .)

    TERM                           shift and go to state 51
    M                              shift and go to state 56
    empty                          shift and go to state 54
    EXP                            shift and go to state 49
    FACTOR                         shift and go to state 58
    EXPRESSION                     shift and go to state 271

state 268

    (110) T -> ELSE process_else_operation . COLON BLOCK end_else_operation_processing

    COLON           shift and go to state 272


state 269

    (99) CONDITION -> IF append_false_bottom EXPRESSION process_condition_operation COLON BLOCK R TICK . end_condition_operation_processing
    (100) end_condition_operation_processing -> .

    INT             reduce using rule 100 (end_condition_operation_processing -> .)
    FLOAT           reduce using rule 100 (end_condition_operation_processing -> .)
    CHAR            reduce using rule 100 (end_condition_operation_processing -> .)
    STRING          reduce using rule 100 (end_condition_operation_processing -> .)
    BOOL            reduce using rule 100 (end_condition_operation_processing -> .)
    LIST            reduce using rule 100 (end_condition_operation_processing -> .)
    IF              reduce using rule 100 (end_condition_operation_processing -> .)
    FOR_CYCLE       reduce using rule 100 (end_condition_operation_processing -> .)
    WHILE_CYCLE     reduce using rule 100 (end_condition_operation_processing -> .)
    ID              reduce using rule 100 (end_condition_operation_processing -> .)
    R_BRACE         reduce using rule 100 (end_condition_operation_processing -> .)

    end_condition_operation_processing shift and go to state 273

state 270

    (96) FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .

    INT             reduce using rule 96 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    FLOAT           reduce using rule 96 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    CHAR            reduce using rule 96 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    STRING          reduce using rule 96 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    BOOL            reduce using rule 96 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    LIST            reduce using rule 96 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    IF              reduce using rule 96 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    FOR_CYCLE       reduce using rule 96 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    WHILE_CYCLE     reduce using rule 96 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    ID              reduce using rule 96 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)
    R_BRACE         reduce using rule 96 (FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK .)


state 271

    (105) S -> ELIF process_elif_operation EXPRESSION . process_condition_operation COLON BLOCK U
    (102) process_condition_operation -> .

    COLON           reduce using rule 102 (process_condition_operation -> .)

    process_condition_operation    shift and go to state 274

state 272

    (110) T -> ELSE process_else_operation COLON . BLOCK end_else_operation_processing
    (91) BLOCK -> . L_BRACE Q R_BRACE

    L_BRACE         shift and go to state 243

    BLOCK                          shift and go to state 275

state 273

    (99) CONDITION -> IF append_false_bottom EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .

    IF              reduce using rule 99 (CONDITION -> IF append_false_bottom EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    FOR_CYCLE       reduce using rule 99 (CONDITION -> IF append_false_bottom EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    WHILE_CYCLE     reduce using rule 99 (CONDITION -> IF append_false_bottom EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    ID              reduce using rule 99 (CONDITION -> IF append_false_bottom EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    R_BRACE         reduce using rule 99 (CONDITION -> IF append_false_bottom EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    INT             reduce using rule 99 (CONDITION -> IF append_false_bottom EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    FLOAT           reduce using rule 99 (CONDITION -> IF append_false_bottom EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    CHAR            reduce using rule 99 (CONDITION -> IF append_false_bottom EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    STRING          reduce using rule 99 (CONDITION -> IF append_false_bottom EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    BOOL            reduce using rule 99 (CONDITION -> IF append_false_bottom EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)
    LIST            reduce using rule 99 (CONDITION -> IF append_false_bottom EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing .)


state 274

    (105) S -> ELIF process_elif_operation EXPRESSION process_condition_operation . COLON BLOCK U

    COLON           shift and go to state 276


state 275

    (110) T -> ELSE process_else_operation COLON BLOCK . end_else_operation_processing
    (112) end_else_operation_processing -> .

    TICK            reduce using rule 112 (end_else_operation_processing -> .)

    end_else_operation_processing  shift and go to state 277

state 276

    (105) S -> ELIF process_elif_operation EXPRESSION process_condition_operation COLON . BLOCK U
    (91) BLOCK -> . L_BRACE Q R_BRACE

    L_BRACE         shift and go to state 243

    BLOCK                          shift and go to state 278

state 277

    (110) T -> ELSE process_else_operation COLON BLOCK end_else_operation_processing .

    TICK            reduce using rule 110 (T -> ELSE process_else_operation COLON BLOCK end_else_operation_processing .)


state 278

    (105) S -> ELIF process_elif_operation EXPRESSION process_condition_operation COLON BLOCK . U
    (107) U -> . S
    (108) U -> . T
    (109) U -> . empty
    (105) S -> . ELIF process_elif_operation EXPRESSION process_condition_operation COLON BLOCK U
    (110) T -> . ELSE process_else_operation COLON BLOCK end_else_operation_processing
    (144) empty -> .

    ELIF            shift and go to state 261
    ELSE            shift and go to state 263
    TICK            reduce using rule 144 (empty -> .)

    S                              shift and go to state 280
    empty                          shift and go to state 281
    T                              shift and go to state 282
    U                              shift and go to state 279

state 279

    (105) S -> ELIF process_elif_operation EXPRESSION process_condition_operation COLON BLOCK U .

    TICK            reduce using rule 105 (S -> ELIF process_elif_operation EXPRESSION process_condition_operation COLON BLOCK U .)


state 280

    (107) U -> S .

    TICK            reduce using rule 107 (U -> S .)


state 281

    (109) U -> empty .

    TICK            reduce using rule 109 (U -> empty .)


state 282

    (108) U -> T .

    TICK            reduce using rule 108 (U -> T .)

