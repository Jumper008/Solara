
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'IF ELSE ELIF WHILE_CYCLE FOR_CYCLE INT FLOAT CHAR STRING BOOL LIST VOID L_BRACE R_BRACE L_PAREN R_PAREN L_BRACK R_BRACK COLON COMMA PLUS MINUS MULTIPLY DIVIDE GREATER_T LESS_T GREATER_T_EQUALS LESS_T_EQUALS EQUALS PERCENTAGE IS NOT AND OR ID INT_CONT STRING_CONT CHAR_CONT FLOAT_CONT BOOL_CONT TICK SINGLE_COMMENT MULTI_COMMENT PROGRAM DRAW_CIRCLE_R DRAW_LINE_R DRAW_RECTANGLE_R MOVE_UP_R MOVE_DOWN_R MOVE_RIGHT_R MOVE_LEFT_R PRINT_R SOLS VARS SOL MAIN_R RETURN\n    program : PROGRAM ID create_global_fun COLON VAR_BLOCK update_global_fun print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION update_constant_number free_symbol_table print_funDir\n    \n    print_funDir :\n    \n    free_symbol_table :\n    \n    update_constant_number :\n    \n    create_global_fun :\n    \n    update_global_fun :\n    \n    print_currentSymTab :\n    \n    VAR_BLOCK : VARS COLON AA\n    \n    AA : VAR_DEFINITIONS AA\n    | empty\n    \n    VAR_DEFINITIONS : TYPE store_type A TICK\n    \n    store_type :\n    \n    A : ID check_var_duplicates update_local_count B D\n    \n    check_var_duplicates :\n    \n    update_local_count :\n    \n    B : EQUALS C assign_var_value\n    | empty\n    \n    assign_var_value :\n    \n    C : S_EXPRESSION\n    | LIST_EXP\n    \n    D : COMMA A\n    | empty\n    \n    S_BLOCK : L_BRACE F R_BRACE\n    \n    F : S_STATUTE F\n    | empty\n    \n    S_STATUTE : VAR_DEFINITIONS\n    | STATUTE\n    \n    SOLUTION_DEF : SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block\n    \n    reset_execution_block :\n    \n    check_sol_duplicates :\n    \n    update_fun :\n    \n    STATUTE : CONDITION\n    | CYCLE\n    | ASSIGNATION\n    | CON_VAR TICK\n    | RETURN_STATEMENT\n    \n    RETURN_STATEMENT : RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value\n    | RETURN TICK process_return_operation_without_return_value\n    \n    check_return_type_correspondence :\n    \n    process_return_operation_with_return_value :\n    \n    process_return_operation_without_return_value :\n    \n    S_TYPE : VOID\n    | TYPE\n    \n    TYPE : INT\n    | FLOAT\n    | CHAR\n    | STRING\n    | BOOL\n    | LIST\n    \n    EXPRESSION : EXP G\n    \n    G : H EXP process_possible_relop_operation\n    | empty\n    \n    process_possible_relop_operation :\n    \n    H : LESS_T\n    | GREATER_T\n    | GREATER_T_EQUALS\n    | LESS_T_EQUALS\n    | IS\n    | AND\n    | OR\n    | PERCENTAGE\n    \n    EXP : TERM process_possible_plus_minus_operation I\n    \n    process_possible_plus_minus_operation :\n    \n    I : J EXP\n    | empty\n    \n    J : PLUS\n    | MINUS\n    \n    TERM : FACTOR process_possible_multiply_divide_operation K\n    \n    process_possible_multiply_divide_operation :\n    \n    K : L TERM\n    | empty\n    \n    L : MULTIPLY\n    | DIVIDE\n    \n    FACTOR : L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom\n    | CON_VAR\n    \n    push_false_bottom :\n    \n    pop_false_bottom :\n    \n    CON_VAR : ID_REF\n    | CON_VAR_TERMINAL\n    | SOLUTION_CALL\n    | PREDEFINED_SOLS\n    \n    CON_VAR_TERMINAL : INT_CONT\n    | STRING_CONT\n    | CHAR_CONT\n    | FLOAT_CONT\n    | BOOL_CONT\n    \n    NEGATION : N S_EXPRESSION process_negation_operation\n    \n    process_negation_operation :\n    \n    N : NOT\n    \n    ID_REF : ID check_var_existence get_var_type O\n    \n    check_var_existence :\n    \n    get_var_type :\n    \n    O : L_BRACK S_EXPRESSION check_int_type R_BRACK\n    | empty\n    \n    check_int_type :\n    \n    LIST_EXP : L_BRACK S_EXPRESSION P R_BRACK\n    \n    P : COMMA S_EXPRESSION P\n    | empty\n    \n    ASSIGNATION : ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK\n    \n    append_equals :\n    \n    process_assignation_operation :\n    \n    BLOCK : L_BRACE Q R_BRACE\n    \n    Q : STATUTE Q\n    | empty\n    \n    S_ASSIGNATION : ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation\n    \n    WHILE : WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK\n    \n    append_jump :\n    \n    end_while_operation_processing :\n    \n    FOR : FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK\n    \n    process_for_condition_operation :\n    \n    process_for_assignation_operation :\n    \n    end_for_operation_processing :\n    \n    CYCLE : FOR\n    | WHILE\n    \n    CONDITION : IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing\n    \n    end_condition_operation_processing :\n    \n    append_false_bottom :\n    \n    process_condition_operation :\n    \n    R : S\n    | T\n    | empty\n    \n    S : ELIF process_elif_operation S_EXPRESSION process_condition_operation COLON BLOCK U\n    \n    process_elif_operation :\n    \n    U : S\n    | T\n    | empty\n    \n    T : ELSE process_else_operation COLON BLOCK end_else_operation_processing\n    \n    process_else_operation :\n    \n    end_else_operation_processing :\n    \n    SOLUTION_CALL : ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing\n    \n    end_argument_processing :\n    \n    generate_era_quad :\n    \n    check_sol_existence :\n    \n    V : S_EXPRESSION process_argument X\n    \n    process_argument :\n    \n    X : COMMA update_parameter_counter V\n    | empty\n    \n    update_parameter_counter :\n    \n    S_EXPRESSION : EXPRESSION\n    | NEGATION\n    \n    PARAMS : TYPE store_type ID check_param_duplicates update_param_count Y\n    \n    check_param_duplicates :\n    \n    update_param_count :\n    \n    Y : COMMA PARAMS\n    | empty\n    \n    SOL_DEFINITIONS : Z\n    \n    Z : SOLUTION_DEF Z\n    | empty\n    \n    MAIN_DEFINITION : INT store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block\n    \n    DRAW_CIRCLE : DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN\n    \n    DRAW_LINE : DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN\n    \n    DRAW_RECTANGLE : DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN\n    \n    MOVE_UP : MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN\n    \n    MOVE_RIGHT : MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN\n    \n    MOVE_DOWN : MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN\n    \n    MOVE_LEFT : MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN\n    \n    PRINT : PRINT_R L_PAREN S_EXPRESSION R_PAREN\n    \n    PREDEFINED_SOLS : DRAW_LINE\n    | DRAW_CIRCLE\n    | DRAW_RECTANGLE\n    | MOVE_UP\n    | MOVE_RIGHT\n    | MOVE_DOWN\n    | MOVE_LEFT\n    | PRINT\n    empty :\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    '
    
_lr_action_items = {'DIVIDE':([55,58,59,61,63,64,65,66,67,70,73,74,75,76,77,79,82,83,85,88,114,118,137,152,153,158,161,162,165,166,168,173,187,199,200,222,223,253,],[-80,-165,-82,-83,-164,-78,-162,-161,-75,-84,-160,-158,-91,-86,-85,-79,-81,-163,-69,-159,-92,143,-166,-155,-77,-156,-90,-94,-153,-154,-157,-74,-131,-130,-93,-152,-150,-151,]),'L_BRACE':([182,189,264,269,297,300,305,],[191,191,272,272,272,272,272,]),'RETURN':([27,191,204,205,207,208,209,212,213,214,216,229,232,246,247,257,265,272,274,279,291,294,298,308,],[-11,206,-36,-114,-34,206,-26,-32,-33,-27,-113,-41,-35,-39,-38,-40,-37,206,-99,206,-106,-116,-115,-109,]),'VARS':([5,],[6,]),'DRAW_LINE_R':([27,42,54,72,78,86,93,94,95,96,97,98,100,101,102,103,104,105,106,108,110,116,117,119,130,131,132,136,139,143,145,146,151,154,156,159,160,183,184,185,191,196,203,204,205,206,207,208,209,212,213,214,216,218,221,224,227,229,231,232,237,246,247,248,249,250,257,259,260,265,272,274,279,288,291,294,295,298,308,],[-11,51,-76,51,51,-89,51,51,51,51,-59,-55,51,-58,-54,-57,-56,-61,-60,51,51,51,51,51,51,-66,-67,-132,51,-73,51,-72,51,51,51,51,51,51,51,51,51,-138,-107,-36,-114,51,-34,51,-26,-32,-33,-27,-113,-117,51,51,51,-41,-100,-35,51,-39,-38,51,-100,-107,-40,51,51,-37,51,-99,51,-123,-106,-116,51,-115,-109,]),'MOVE_DOWN_R':([27,42,54,72,78,86,93,94,95,96,97,98,100,101,102,103,104,105,106,108,110,116,117,119,130,131,132,136,139,143,145,146,151,154,156,159,160,183,184,185,191,196,203,204,205,206,207,208,209,212,213,214,216,218,221,224,227,229,231,232,237,246,247,248,249,250,257,259,260,265,272,274,279,288,291,294,295,298,308,],[-11,52,-76,52,52,-89,52,52,52,52,-59,-55,52,-58,-54,-57,-56,-61,-60,52,52,52,52,52,52,-66,-67,-132,52,-73,52,-72,52,52,52,52,52,52,52,52,52,-138,-107,-36,-114,52,-34,52,-26,-32,-33,-27,-113,-117,52,52,52,-41,-100,-35,52,-39,-38,52,-100,-107,-40,52,52,-37,52,-99,52,-123,-106,-116,52,-115,-109,]),'PRINT_R':([27,42,54,72,78,86,93,94,95,96,97,98,100,101,102,103,104,105,106,108,110,116,117,119,130,131,132,136,139,143,145,146,151,154,156,159,160,183,184,185,191,196,203,204,205,206,207,208,209,212,213,214,216,218,221,224,227,229,231,232,237,246,247,248,249,250,257,259,260,265,272,274,279,288,291,294,295,298,308,],[-11,87,-76,87,87,-89,87,87,87,87,-59,-55,87,-58,-54,-57,-56,-61,-60,87,87,87,87,87,87,-66,-67,-132,87,-73,87,-72,87,87,87,87,87,87,87,87,87,-138,-107,-36,-114,87,-34,87,-26,-32,-33,-27,-113,-117,87,87,87,-41,-100,-35,87,-39,-38,87,-100,-107,-40,87,87,-37,87,-99,87,-123,-106,-116,87,-115,-109,]),'MOVE_LEFT_R':([27,42,54,72,78,86,93,94,95,96,97,98,100,101,102,103,104,105,106,108,110,116,117,119,130,131,132,136,139,143,145,146,151,154,156,159,160,183,184,185,191,196,203,204,205,206,207,208,209,212,213,214,216,218,221,224,227,229,231,232,237,246,247,248,249,250,257,259,260,265,272,274,279,288,291,294,295,298,308,],[-11,68,-76,68,68,-89,68,68,68,68,-59,-55,68,-58,-54,-57,-56,-61,-60,68,68,68,68,68,68,-66,-67,-132,68,-73,68,-72,68,68,68,68,68,68,68,68,68,-138,-107,-36,-114,68,-34,68,-26,-32,-33,-27,-113,-117,68,68,68,-41,-100,-35,68,-39,-38,68,-100,-107,-40,68,68,-37,68,-99,68,-123,-106,-116,68,-115,-109,]),'CHAR':([8,12,27,30,149,191,204,205,207,208,209,212,213,214,216,229,232,242,246,247,257,265,274,291,294,298,308,],[16,16,-11,16,16,16,-36,-114,-34,16,-26,-32,-33,-27,-113,-41,-35,16,-39,-38,-40,-37,-99,-106,-116,-115,-109,]),'PROGRAM':([0,],[2,]),'MULTIPLY':([55,58,59,61,63,64,65,66,67,70,73,74,75,76,77,79,82,83,85,88,114,118,137,152,153,158,161,162,165,166,168,173,187,199,200,222,223,253,],[-80,-165,-82,-83,-164,-78,-162,-161,-75,-84,-160,-158,-91,-86,-85,-79,-81,-163,-69,-159,-92,146,-166,-155,-77,-156,-90,-94,-153,-154,-157,-74,-131,-130,-93,-152,-150,-151,]),'INT_CONT':([27,42,54,72,78,86,93,94,95,96,97,98,100,101,102,103,104,105,106,108,110,116,117,119,130,131,132,136,139,143,145,146,151,154,156,159,160,183,184,185,191,196,203,204,205,206,207,208,209,212,213,214,216,218,221,224,227,229,231,232,237,246,247,248,249,250,257,259,260,265,272,274,279,288,291,294,295,298,308,],[-11,59,-76,59,59,-89,59,59,59,59,-59,-55,59,-58,-54,-57,-56,-61,-60,59,59,59,59,59,59,-66,-67,-132,59,-73,59,-72,59,59,59,59,59,59,59,59,59,-138,-107,-36,-114,59,-34,59,-26,-32,-33,-27,-113,-117,59,59,59,-41,-100,-35,59,-39,-38,59,-100,-107,-40,59,59,-37,59,-99,59,-123,-106,-116,59,-115,-109,]),'TICK':([24,25,28,34,41,43,47,49,50,53,55,57,58,59,61,62,63,64,65,66,67,69,70,71,73,74,75,76,77,79,81,82,83,85,88,92,99,107,109,111,112,114,118,127,129,133,135,137,144,147,152,153,155,157,158,161,162,163,165,166,167,168,173,187,192,199,200,201,206,210,211,222,223,228,234,236,253,258,266,267,268,273,275,276,277,281,283,284,286,287,290,301,303,304,306,307,309,310,311,312,],[27,-14,-15,-166,-166,-17,-13,-22,-20,-19,-80,-166,-165,-82,-83,-63,-164,-78,-162,-161,-75,-139,-84,-18,-160,-158,-91,-86,-85,-79,-140,-81,-163,-69,-159,-21,-50,-52,-166,-16,-88,-92,-166,-53,-62,-65,-87,-166,-68,-71,-155,-77,-51,-64,-156,-90,-94,-96,-153,-154,-70,-157,-74,-131,220,-130,-93,225,229,-78,232,-152,-150,246,250,-23,-151,-101,274,-101,-110,-108,-105,282,-166,291,-121,-120,-119,294,-102,-129,-112,-127,308,-166,-124,-126,-125,-122,]),'MINUS':([55,58,59,61,62,63,64,65,66,67,70,73,74,75,76,77,79,82,83,85,88,109,114,118,137,144,147,152,153,158,161,162,165,166,167,168,173,187,199,200,222,223,253,],[-80,-165,-82,-83,-63,-164,-78,-162,-161,-75,-84,-160,-158,-91,-86,-85,-79,-81,-163,-69,-159,132,-92,-166,-166,-68,-71,-155,-77,-156,-90,-94,-153,-154,-70,-157,-74,-131,-130,-93,-152,-150,-151,]),'DRAW_CIRCLE_R':([27,42,54,72,78,86,93,94,95,96,97,98,100,101,102,103,104,105,106,108,110,116,117,119,130,131,132,136,139,143,145,146,151,154,156,159,160,183,184,185,191,196,203,204,205,206,207,208,209,212,213,214,216,218,221,224,227,229,231,232,237,246,247,248,249,250,257,259,260,265,272,274,279,288,291,294,295,298,308,],[-11,60,-76,60,60,-89,60,60,60,60,-59,-55,60,-58,-54,-57,-56,-61,-60,60,60,60,60,60,60,-66,-67,-132,60,-73,60,-72,60,60,60,60,60,60,60,60,60,-138,-107,-36,-114,60,-34,60,-26,-32,-33,-27,-113,-117,60,60,60,-41,-100,-35,60,-39,-38,60,-100,-107,-40,60,60,-37,60,-99,60,-123,-106,-116,60,-115,-109,]),'IS':([55,57,58,59,61,62,63,64,65,66,67,70,73,74,75,76,77,79,82,83,85,88,109,114,118,129,133,137,144,147,152,153,157,158,161,162,165,166,167,168,173,187,199,200,222,223,253,],[-80,101,-165,-82,-83,-63,-164,-78,-162,-161,-75,-84,-160,-158,-91,-86,-85,-79,-81,-163,-69,-159,-166,-92,-166,-62,-65,-166,-68,-71,-155,-77,-64,-156,-90,-94,-153,-154,-70,-157,-74,-131,-130,-93,-152,-150,-151,]),'STRING_CONT':([27,42,54,72,78,86,93,94,95,96,97,98,100,101,102,103,104,105,106,108,110,116,117,119,130,131,132,136,139,143,145,146,151,154,156,159,160,183,184,185,191,196,203,204,205,206,207,208,209,212,213,214,216,218,221,224,227,229,231,232,237,246,247,248,249,250,257,259,260,265,272,274,279,288,291,294,295,298,308,],[-11,61,-76,61,61,-89,61,61,61,61,-59,-55,61,-58,-54,-57,-56,-61,-60,61,61,61,61,61,61,-66,-67,-132,61,-73,61,-72,61,61,61,61,61,61,61,61,61,-138,-107,-36,-114,61,-34,61,-26,-32,-33,-27,-113,-117,61,61,61,-41,-100,-35,61,-39,-38,61,-100,-107,-40,61,61,-37,61,-99,61,-123,-106,-116,61,-115,-109,]),'MOVE_RIGHT_R':([27,42,54,72,78,86,93,94,95,96,97,98,100,101,102,103,104,105,106,108,110,116,117,119,130,131,132,136,139,143,145,146,151,154,156,159,160,183,184,185,191,196,203,204,205,206,207,208,209,212,213,214,216,218,221,224,227,229,231,232,237,246,247,248,249,250,257,259,260,265,272,274,279,288,291,294,295,298,308,],[-11,84,-76,84,84,-89,84,84,84,84,-59,-55,84,-58,-54,-57,-56,-61,-60,84,84,84,84,84,84,-66,-67,-132,84,-73,84,-72,84,84,84,84,84,84,84,84,84,-138,-107,-36,-114,84,-34,84,-26,-32,-33,-27,-113,-117,84,84,84,-41,-100,-35,84,-39,-38,84,-100,-107,-40,84,84,-37,84,-99,84,-123,-106,-116,84,-115,-109,]),'SOL':([26,29,225,241,254,263,271,],[30,30,-31,-7,-3,-29,-28,]),'ELIF':([277,290,307,],[288,-102,288,]),'SOLS':([7,8,9,10,12,19,20,21,27,],[-6,-166,-7,-8,-166,-10,23,-9,-11,]),'COLON':([3,4,6,23,55,57,58,59,61,62,63,64,65,66,67,69,70,73,74,75,76,77,79,81,82,83,85,88,99,107,109,112,114,118,127,129,133,135,137,144,147,152,153,155,157,158,161,162,165,166,167,168,171,173,180,187,199,200,222,223,245,251,253,256,261,267,275,285,292,293,296,299,302,],[-5,5,8,26,-80,-166,-165,-82,-83,-63,-164,-78,-162,-161,-75,-139,-84,-160,-158,-91,-86,-85,-79,-140,-81,-163,-69,-159,-50,-52,-166,-88,-92,-166,-53,-62,-65,-87,-166,-68,-71,-155,-77,-51,-64,-156,-90,-94,-153,-154,-70,-157,182,-74,189,-131,-130,-93,-152,-150,-118,-118,-151,264,269,-101,-105,-128,-111,297,300,-118,305,]),'COMMA':([25,28,34,41,43,50,53,55,57,58,59,61,62,63,64,65,66,67,69,70,71,73,74,75,76,77,79,81,82,83,85,88,99,107,109,111,112,114,115,118,123,126,127,128,129,133,135,137,144,147,152,153,155,157,158,161,162,163,164,165,166,167,168,172,173,174,175,176,186,187,190,193,199,200,202,222,223,226,253,],[-14,-15,-166,48,-17,-20,-19,-80,-166,-165,-82,-83,-63,-164,-78,-162,-161,-75,-139,-84,-18,-160,-158,-91,-86,-85,-79,-140,-81,-163,-69,-159,-50,-52,-166,-16,-88,-92,139,-166,151,154,-53,156,-62,-65,-87,-166,-68,-71,-155,-77,-51,-64,-156,-90,-94,-96,139,-153,-154,-70,-157,183,-74,184,185,-135,196,-131,-142,221,-130,-93,-143,-152,-150,242,-151,]),'PERCENTAGE':([55,57,58,59,61,62,63,64,65,66,67,70,73,74,75,76,77,79,82,83,85,88,109,114,118,129,133,137,144,147,152,153,157,158,161,162,165,166,167,168,173,187,199,200,222,223,253,],[-80,105,-165,-82,-83,-63,-164,-78,-162,-161,-75,-84,-160,-158,-91,-86,-85,-79,-81,-163,-69,-159,-166,-92,-166,-62,-65,-166,-68,-71,-155,-77,-64,-156,-90,-94,-153,-154,-70,-157,-74,-131,-130,-93,-152,-150,-151,]),'VOID':([30,],[36,]),'$end':([1,40,46,91,122,220,238,252,262,270,],[0,-4,-3,-2,-1,-31,-7,-3,-29,-149,]),'PLUS':([55,58,59,61,62,63,64,65,66,67,70,73,74,75,76,77,79,82,83,85,88,109,114,118,137,144,147,152,153,158,161,162,165,166,167,168,173,187,199,200,222,223,253,],[-80,-165,-82,-83,-63,-164,-78,-162,-161,-75,-84,-160,-158,-91,-86,-85,-79,-81,-163,-69,-159,131,-92,-166,-166,-68,-71,-155,-77,-156,-90,-94,-153,-154,-70,-157,-74,-131,-130,-93,-152,-150,-151,]),'L_PAREN':([42,51,52,54,56,60,68,72,75,78,80,84,86,87,89,90,93,94,95,96,97,98,100,101,102,103,104,105,106,108,110,113,116,117,119,120,121,130,131,132,136,139,143,145,146,151,154,156,159,160,183,184,185,196,203,206,218,221,224,227,231,237,248,249,250,259,260,288,295,],[54,93,94,-76,96,108,110,54,-133,54,116,117,-89,119,-30,-30,54,54,54,54,-59,-55,54,-58,-54,-57,-56,-61,-60,54,54,136,54,54,54,149,150,54,-66,-67,-132,54,-73,54,-72,54,54,54,54,54,54,54,54,-138,-107,54,-117,54,54,54,-100,54,54,-100,-107,54,54,-123,54,]),'FOR_CYCLE':([27,191,204,205,207,208,209,212,213,214,216,229,232,246,247,257,265,272,274,279,291,294,298,308,],[-11,215,-36,-114,-34,215,-26,-32,-33,-27,-113,-41,-35,-39,-38,-40,-37,215,-99,215,-106,-116,-115,-109,]),'STRING':([8,12,27,30,149,191,204,205,207,208,209,212,213,214,216,229,232,242,246,247,257,265,274,291,294,298,308,],[11,11,-11,11,11,11,-36,-114,-34,11,-26,-32,-33,-27,-113,-41,-35,11,-39,-38,-40,-37,-99,-106,-116,-115,-109,]),'GREATER_T_EQUALS':([55,57,58,59,61,62,63,64,65,66,67,70,73,74,75,76,77,79,82,83,85,88,109,114,118,129,133,137,144,147,152,153,157,158,161,162,165,166,167,168,173,187,199,200,222,223,253,],[-80,104,-165,-82,-83,-63,-164,-78,-162,-161,-75,-84,-160,-158,-91,-86,-85,-79,-81,-163,-69,-159,-166,-92,-166,-62,-65,-166,-68,-71,-155,-77,-64,-156,-90,-94,-153,-154,-70,-157,-74,-131,-130,-93,-152,-150,-151,]),'CHAR_CONT':([27,42,54,72,78,86,93,94,95,96,97,98,100,101,102,103,104,105,106,108,110,116,117,119,130,131,132,136,139,143,145,146,151,154,156,159,160,183,184,185,191,196,203,204,205,206,207,208,209,212,213,214,216,218,221,224,227,229,231,232,237,246,247,248,249,250,257,259,260,265,272,274,279,288,291,294,295,298,308,],[-11,70,-76,70,70,-89,70,70,70,70,-59,-55,70,-58,-54,-57,-56,-61,-60,70,70,70,70,70,70,-66,-67,-132,70,-73,70,-72,70,70,70,70,70,70,70,70,70,-138,-107,-36,-114,70,-34,70,-26,-32,-33,-27,-113,-117,70,70,70,-41,-100,-35,70,-39,-38,70,-100,-107,-40,70,70,-37,70,-99,70,-123,-106,-116,70,-115,-109,]),'EQUALS':([25,28,34,75,114,137,161,162,200,210,233,235,],[-14,-15,42,-91,-92,-166,-90,-94,-93,231,249,-91,]),'ELSE':([277,290,307,],[285,-102,285,]),'R_PAREN':([55,57,58,59,61,62,63,64,65,66,67,69,70,73,74,75,76,77,79,81,82,83,85,88,99,107,109,112,114,118,124,125,127,129,133,134,135,137,141,142,144,147,148,150,152,153,155,157,158,161,162,165,166,167,168,169,173,176,177,186,187,190,194,195,197,198,199,200,202,222,223,226,239,240,243,244,253,255,],[-80,-166,-165,-82,-83,-63,-164,-78,-162,-161,-75,-139,-84,-160,-158,-91,-86,-85,-79,-140,-81,-163,-69,-159,-50,-52,-166,-88,-92,-166,152,153,-53,-62,-65,158,-87,-166,165,166,-68,-71,168,171,-155,-77,-51,-64,-156,-90,-94,-153,-154,-70,-157,180,-74,-135,187,-166,-131,-142,222,223,-134,-137,-130,-93,-143,-152,-150,-166,253,-136,-141,-145,-151,-144,]),'DRAW_RECTANGLE_R':([27,42,54,72,78,86,93,94,95,96,97,98,100,101,102,103,104,105,106,108,110,116,117,119,130,131,132,136,139,143,145,146,151,154,156,159,160,183,184,185,191,196,203,204,205,206,207,208,209,212,213,214,216,218,221,224,227,229,231,232,237,246,247,248,249,250,257,259,260,265,272,274,279,288,291,294,295,298,308,],[-11,56,-76,56,56,-89,56,56,56,56,-59,-55,56,-58,-54,-57,-56,-61,-60,56,56,56,56,56,56,-66,-67,-132,56,-73,56,-72,56,56,56,56,56,56,56,56,56,-138,-107,-36,-114,56,-34,56,-26,-32,-33,-27,-113,-117,56,56,56,-41,-100,-35,56,-39,-38,56,-100,-107,-40,56,56,-37,56,-99,56,-123,-106,-116,56,-115,-109,]),'ID':([2,11,13,14,15,16,17,18,22,27,36,37,38,42,44,48,54,72,78,86,93,94,95,96,97,98,100,101,102,103,104,105,106,108,110,116,117,119,130,131,132,136,139,143,145,146,151,154,156,159,160,170,181,183,184,185,191,196,203,204,205,206,207,208,209,212,213,214,215,216,218,221,224,227,229,231,232,237,246,247,248,249,250,257,259,260,265,272,274,279,282,288,291,294,295,298,308,],[3,-47,-44,-45,-49,-46,-48,-12,25,-11,-42,-12,-43,75,89,25,-76,75,75,-89,75,75,75,75,-59,-55,75,-58,-54,-57,-56,-61,-60,75,75,75,75,75,75,-66,-67,-132,75,-73,75,-72,75,75,75,75,75,-12,190,75,75,75,75,-138,-107,-36,-114,75,-34,75,-26,-32,-33,-27,235,-113,-117,75,75,75,-41,-100,-35,75,-39,-38,75,-100,-107,-40,75,75,-37,75,-99,75,235,-123,-106,-116,75,-115,-109,]),'BOOL_CONT':([27,42,54,72,78,86,93,94,95,96,97,98,100,101,102,103,104,105,106,108,110,116,117,119,130,131,132,136,139,143,145,146,151,154,156,159,160,183,184,185,191,196,203,204,205,206,207,208,209,212,213,214,216,218,221,224,227,229,231,232,237,246,247,248,249,250,257,259,260,265,272,274,279,288,291,294,295,298,308,],[-11,76,-76,76,76,-89,76,76,76,76,-59,-55,76,-58,-54,-57,-56,-61,-60,76,76,76,76,76,76,-66,-67,-132,76,-73,76,-72,76,76,76,76,76,76,76,76,76,-138,-107,-36,-114,76,-34,76,-26,-32,-33,-27,-113,-117,76,76,76,-41,-100,-35,76,-39,-38,76,-100,-107,-40,76,76,-37,76,-99,76,-123,-106,-116,76,-115,-109,]),'IF':([27,191,204,205,207,208,209,212,213,214,216,229,232,246,247,257,265,272,274,279,291,294,298,308,],[-11,218,-36,-114,-34,218,-26,-32,-33,-27,-113,-41,-35,-39,-38,-40,-37,218,-99,218,-106,-116,-115,-109,]),'AND':([55,57,58,59,61,62,63,64,65,66,67,70,73,74,75,76,77,79,82,83,85,88,109,114,118,129,133,137,144,147,152,153,157,158,161,162,165,166,167,168,173,187,199,200,222,223,253,],[-80,97,-165,-82,-83,-63,-164,-78,-162,-161,-75,-84,-160,-158,-91,-86,-85,-79,-81,-163,-69,-159,-166,-92,-166,-62,-65,-166,-68,-71,-155,-77,-64,-156,-90,-94,-153,-154,-70,-157,-74,-131,-130,-93,-152,-150,-151,]),'LESS_T':([55,57,58,59,61,62,63,64,65,66,67,70,73,74,75,76,77,79,82,83,85,88,109,114,118,129,133,137,144,147,152,153,157,158,161,162,165,166,167,168,173,187,199,200,222,223,253,],[-80,102,-165,-82,-83,-63,-164,-78,-162,-161,-75,-84,-160,-158,-91,-86,-85,-79,-81,-163,-69,-159,-166,-92,-166,-62,-65,-166,-68,-71,-155,-77,-64,-156,-90,-94,-153,-154,-70,-157,-74,-131,-130,-93,-152,-150,-151,]),'FLOAT_CONT':([27,42,54,72,78,86,93,94,95,96,97,98,100,101,102,103,104,105,106,108,110,116,117,119,130,131,132,136,139,143,145,146,151,154,156,159,160,183,184,185,191,196,203,204,205,206,207,208,209,212,213,214,216,218,221,224,227,229,231,232,237,246,247,248,249,250,257,259,260,265,272,274,279,288,291,294,295,298,308,],[-11,77,-76,77,77,-89,77,77,77,77,-59,-55,77,-58,-54,-57,-56,-61,-60,77,77,77,77,77,77,-66,-67,-132,77,-73,77,-72,77,77,77,77,77,77,77,77,77,-138,-107,-36,-114,77,-34,77,-26,-32,-33,-27,-113,-117,77,77,77,-41,-100,-35,77,-39,-38,77,-100,-107,-40,77,77,-37,77,-99,77,-123,-106,-116,77,-115,-109,]),'L_BRACK':([42,75,114,137,235,],[78,-91,-92,160,-91,]),'MOVE_UP_R':([27,42,54,72,78,86,93,94,95,96,97,98,100,101,102,103,104,105,106,108,110,116,117,119,130,131,132,136,139,143,145,146,151,154,156,159,160,183,184,185,191,196,203,204,205,206,207,208,209,212,213,214,216,218,221,224,227,229,231,232,237,246,247,248,249,250,257,259,260,265,272,274,279,288,291,294,295,298,308,],[-11,80,-76,80,80,-89,80,80,80,80,-59,-55,80,-58,-54,-57,-56,-61,-60,80,80,80,80,80,80,-66,-67,-132,80,-73,80,-72,80,80,80,80,80,80,80,80,80,-138,-107,-36,-114,80,-34,80,-26,-32,-33,-27,-113,-117,80,80,80,-41,-100,-35,80,-39,-38,80,-100,-107,-40,80,80,-37,80,-99,80,-123,-106,-116,80,-115,-109,]),'INT':([8,12,26,27,29,30,31,32,33,35,149,191,204,205,207,208,209,212,213,214,216,225,229,232,241,242,246,247,254,257,263,265,271,274,291,294,298,308,],[13,13,-166,-11,-166,13,-148,39,-146,-147,13,13,-36,-114,-34,13,-26,-32,-33,-27,-113,-31,-41,-35,-7,13,-39,-38,-3,-40,-29,-37,-28,-99,-106,-116,-115,-109,]),'FLOAT':([8,12,27,30,149,191,204,205,207,208,209,212,213,214,216,229,232,242,246,247,257,265,274,291,294,298,308,],[14,14,-11,14,14,14,-36,-114,-34,14,-26,-32,-33,-27,-113,-41,-35,14,-39,-38,-40,-37,-99,-106,-116,-115,-109,]),'LIST':([8,12,27,30,149,191,204,205,207,208,209,212,213,214,216,229,232,242,246,247,257,265,274,291,294,298,308,],[15,15,-11,15,15,15,-36,-114,-34,15,-26,-32,-33,-27,-113,-41,-35,15,-39,-38,-40,-37,-99,-106,-116,-115,-109,]),'MAIN_R':([39,45,],[-12,90,]),'LESS_T_EQUALS':([55,57,58,59,61,62,63,64,65,66,67,70,73,74,75,76,77,79,82,83,85,88,109,114,118,129,133,137,144,147,152,153,157,158,161,162,165,166,167,168,173,187,199,200,222,223,253,],[-80,103,-165,-82,-83,-63,-164,-78,-162,-161,-75,-84,-160,-158,-91,-86,-85,-79,-81,-163,-69,-159,-166,-92,-166,-62,-65,-166,-68,-71,-155,-77,-64,-156,-90,-94,-153,-154,-70,-157,-74,-131,-130,-93,-152,-150,-151,]),'BOOL':([8,12,27,30,149,191,204,205,207,208,209,212,213,214,216,229,232,242,246,247,257,265,274,291,294,298,308,],[17,17,-11,17,17,17,-36,-114,-34,17,-26,-32,-33,-27,-113,-41,-35,17,-39,-38,-40,-37,-99,-106,-116,-115,-109,]),'R_BRACE':([27,191,204,205,207,208,209,212,213,214,216,217,219,229,230,232,246,247,257,265,272,274,278,279,280,289,291,294,298,308,],[-11,-166,-36,-114,-34,-166,-26,-32,-33,-27,-113,236,-25,-41,-24,-35,-39,-38,-40,-37,-166,-99,-104,-166,290,-103,-106,-116,-115,-109,]),'GREATER_T':([55,57,58,59,61,62,63,64,65,66,67,70,73,74,75,76,77,79,82,83,85,88,109,114,118,129,133,137,144,147,152,153,157,158,161,162,165,166,167,168,173,187,199,200,222,223,253,],[-80,98,-165,-82,-83,-63,-164,-78,-162,-161,-75,-84,-160,-158,-91,-86,-85,-79,-81,-163,-69,-159,-166,-92,-166,-62,-65,-166,-68,-71,-155,-77,-64,-156,-90,-94,-153,-154,-70,-157,-74,-131,-130,-93,-152,-150,-151,]),'NOT':([42,54,72,78,86,93,94,95,96,108,110,116,117,119,136,139,151,154,156,159,160,183,184,185,196,203,206,218,221,224,227,231,237,248,249,250,259,260,288,295,],[86,-76,86,86,-89,86,86,86,86,86,86,86,86,86,-132,86,86,86,86,86,86,86,86,86,-138,-107,86,-117,86,86,86,-100,86,86,-100,-107,86,86,-123,86,]),'WHILE_CYCLE':([27,191,204,205,207,208,209,212,213,214,216,229,232,246,247,257,265,272,274,279,291,294,298,308,],[-11,203,-36,-114,-34,203,-26,-32,-33,-27,-113,-41,-35,-39,-38,-40,-37,203,-99,203,-106,-116,-115,-109,]),'OR':([55,57,58,59,61,62,63,64,65,66,67,70,73,74,75,76,77,79,82,83,85,88,109,114,118,129,133,137,144,147,152,153,157,158,161,162,165,166,167,168,173,187,199,200,222,223,253,],[-80,106,-165,-82,-83,-63,-164,-78,-162,-161,-75,-84,-160,-158,-91,-86,-85,-79,-81,-163,-69,-159,-166,-92,-166,-62,-65,-166,-68,-71,-155,-77,-64,-156,-90,-94,-153,-154,-70,-157,-74,-131,-130,-93,-152,-150,-151,]),'R_BRACK':([55,57,58,59,61,62,63,64,65,66,67,69,70,73,74,75,76,77,79,81,82,83,85,88,99,107,109,112,114,115,118,127,129,133,135,137,138,140,144,147,152,153,155,157,158,161,162,164,165,166,167,168,173,178,179,187,188,199,200,222,223,253,],[-80,-166,-165,-82,-83,-63,-164,-78,-162,-161,-75,-139,-84,-160,-158,-91,-86,-85,-79,-140,-81,-163,-69,-159,-50,-52,-166,-88,-92,-166,-166,-53,-62,-65,-87,-166,163,-98,-68,-71,-155,-77,-51,-64,-156,-90,-94,-166,-153,-154,-70,-157,-74,-95,-97,-131,200,-130,-93,-152,-150,-151,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'process_elif_operation':([288,],[295,]),'EXP':([42,72,78,93,94,95,96,100,108,110,116,117,119,130,139,151,154,156,159,160,183,184,185,206,221,224,227,237,248,259,260,295,],[57,57,57,57,57,57,57,127,57,57,57,57,57,157,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'free_symbol_table':([46,252,254,],[91,262,263,]),'update_constant_number':([40,],[46,]),'append_equals':([231,249,],[248,259,]),'VAR_DEFINITIONS':([8,12,191,208,],[12,12,209,209,]),'SOLUTION_CALL':([42,72,78,93,94,95,96,100,108,110,116,117,119,130,139,145,151,154,156,159,160,183,184,185,191,206,208,221,224,227,237,248,259,260,272,279,295,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'program':([0,],[1,]),'CONDITION':([191,208,272,279,],[212,212,212,212,]),'D':([41,],[47,]),'update_fun':([220,225,],[238,241,]),'H':([57,],[100,]),'end_else_operation_processing':([301,],[304,]),'L':([118,],[145,]),'SOL_DEFINITIONS':([26,],[32,]),'CON_VAR_TERMINAL':([42,72,78,93,94,95,96,100,108,110,116,117,119,130,139,145,151,154,156,159,160,183,184,185,191,206,208,221,224,227,237,248,259,260,272,279,295,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'assign_var_value':([71,],[111,]),'T':([277,307,],[284,311,]),'X':([186,],[197,]),'S_BLOCK':([182,189,],[192,201,]),'MOVE_UP':([42,72,78,93,94,95,96,100,108,110,116,117,119,130,139,145,151,154,156,159,160,183,184,185,191,206,208,221,224,227,237,248,259,260,272,279,295,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'generate_era_quad':([136,],[159,]),'check_sol_existence':([75,],[113,]),'PREDEFINED_SOLS':([42,72,78,93,94,95,96,100,108,110,116,117,119,130,139,145,151,154,156,159,160,183,184,185,191,206,208,221,224,227,237,248,259,260,272,279,295,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'S_TYPE':([30,],[37,]),'process_condition_operation':([245,251,299,],[256,261,302,]),'end_condition_operation_processing':([294,],[298,]),'DRAW_CIRCLE':([42,72,78,93,94,95,96,100,108,110,116,117,119,130,139,145,151,154,156,159,160,183,184,185,191,206,208,221,224,227,237,248,259,260,272,279,295,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'LIST_EXP':([42,],[50,]),'AA':([8,12,],[10,21,]),'store_type':([18,37,39,170,],[22,44,45,181,]),'NEGATION':([42,72,78,93,94,95,96,108,110,116,117,119,139,151,154,156,159,160,183,184,185,206,221,224,227,237,248,259,260,295,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'PRINT':([42,72,78,93,94,95,96,100,108,110,116,117,119,130,139,145,151,154,156,159,160,183,184,185,191,206,208,221,224,227,237,248,259,260,272,279,295,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'process_else_operation':([285,],[293,]),'BLOCK':([264,269,297,300,305,],[273,277,301,303,307,]),'SOLUTION_DEF':([26,29,],[29,29,]),'update_param_count':([202,],[226,]),'G':([57,],[99,]),'ID_REF':([42,72,78,93,94,95,96,100,108,110,116,117,119,130,139,145,151,154,156,159,160,183,184,185,191,206,208,215,221,224,227,237,248,259,260,272,279,282,295,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,210,64,210,233,64,64,64,64,64,64,64,210,210,233,64,]),'S_ASSIGNATION':([215,282,],[234,292,]),'append_jump':([203,250,],[227,260,]),'update_global_fun':([7,],[9,]),'process_return_operation_with_return_value':([257,],[265,]),'C':([42,],[71,]),'FOR':([191,208,272,279,],[216,216,216,216,]),'check_int_type':([178,],[188,]),'check_return_type_correspondence':([246,],[257,]),'K':([118,],[144,]),'check_sol_duplicates':([89,90,],[120,121,]),'O':([137,],[161,]),'DRAW_RECTANGLE':([42,72,78,93,94,95,96,100,108,110,116,117,119,130,139,145,151,154,156,159,160,183,184,185,191,206,208,221,224,227,237,248,259,260,272,279,295,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'check_var_duplicates':([25,],[28,]),'push_false_bottom':([54,],[95,]),'get_var_type':([114,],[137,]),'S':([277,307,],[286,309,]),'process_for_condition_operation':([268,],[276,]),'end_for_operation_processing':([303,],[306,]),'MOVE_DOWN':([42,72,78,93,94,95,96,100,108,110,116,117,119,130,139,145,151,154,156,159,160,183,184,185,191,206,208,221,224,227,237,248,259,260,272,279,295,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'FACTOR':([42,72,78,93,94,95,96,100,108,110,116,117,119,130,139,145,151,154,156,159,160,183,184,185,206,221,224,227,237,248,259,260,295,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'MAIN_DEFINITION':([32,],[40,]),'RETURN_STATEMENT':([191,208,272,279,],[204,204,204,204,]),'WHILE':([191,208,272,279,],[205,205,205,205,]),'create_global_fun':([3,],[4,]),'update_parameter_counter':([196,],[224,]),'S_STATUTE':([191,208,],[208,208,]),'MOVE_LEFT':([42,72,78,93,94,95,96,100,108,110,116,117,119,130,139,145,151,154,156,159,160,183,184,185,191,206,208,221,224,227,237,248,259,260,272,279,295,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'process_negation_operation':([112,],[135,]),'process_assignation_operation':([258,267,],[266,275,]),'EXPRESSION':([42,72,78,93,94,95,96,108,110,116,117,119,139,151,154,156,159,160,183,184,185,206,221,224,227,237,248,259,260,295,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'empty':([8,12,26,29,34,41,57,109,115,118,137,164,186,191,208,226,272,277,279,307,],[19,19,31,31,43,49,107,133,140,147,162,140,198,219,219,244,278,283,278,310,]),'B':([34,],[41,]),'end_argument_processing':([187,],[199,]),'F':([191,208,],[217,230,]),'process_argument':([176,],[186,]),'append_false_bottom':([218,],[237,]),'N':([42,72,78,93,94,95,96,108,110,116,117,119,139,151,154,156,159,160,183,184,185,206,221,224,227,237,248,259,260,295,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'R':([277,],[287,]),'V':([159,224,],[177,240,]),'Z':([26,29,],[33,35,]),'check_param_duplicates':([190,],[202,]),'reset_execution_block':([262,263,],[270,271,]),'process_possible_plus_minus_operation':([62,],[109,]),'PARAMS':([149,242,],[169,255,]),'TYPE':([8,12,30,149,191,208,242,],[18,18,38,170,18,18,170,]),'process_for_assignation_operation':([292,],[296,]),'update_local_count':([28,],[34,]),'S_EXPRESSION':([42,72,78,93,94,95,96,108,110,116,117,119,139,151,154,156,159,160,183,184,185,206,221,224,227,237,248,259,260,295,],[53,112,115,123,124,125,126,128,134,141,142,148,164,172,174,175,176,178,193,194,195,228,239,176,245,251,258,267,268,299,]),'process_possible_multiply_divide_operation':([85,],[118,]),'TERM':([42,72,78,93,94,95,96,100,108,110,116,117,119,130,139,145,151,154,156,159,160,183,184,185,206,221,224,227,237,248,259,260,295,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,167,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'pop_false_bottom':([153,],[173,]),'MOVE_RIGHT':([42,72,78,93,94,95,96,100,108,110,116,117,119,130,139,145,151,154,156,159,160,183,184,185,191,206,208,221,224,227,237,248,259,260,272,279,295,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'print_funDir':([91,],[122,]),'CON_VAR':([42,72,78,93,94,95,96,100,108,110,116,117,119,130,139,145,151,154,156,159,160,183,184,185,191,206,208,221,224,227,237,248,259,260,272,279,295,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,211,67,211,67,67,67,67,67,67,67,211,211,67,]),'print_currentSymTab':([9,238,241,],[20,252,254,]),'process_return_operation_without_return_value':([229,],[247,]),'CYCLE':([191,208,272,279,],[213,213,213,213,]),'A':([22,48,],[24,92,]),'STATUTE':([191,208,272,279,],[214,214,279,279,]),'J':([109,],[130,]),'ASSIGNATION':([191,208,272,279,],[207,207,207,207,]),'end_while_operation_processing':([273,],[281,]),'I':([109,],[129,]),'DRAW_LINE':([42,72,78,93,94,95,96,100,108,110,116,117,119,130,139,145,151,154,156,159,160,183,184,185,191,206,208,221,224,227,237,248,259,260,272,279,295,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'Q':([272,279,],[280,289,]),'U':([307,],[312,]),'Y':([226,],[243,]),'P':([115,164,],[138,179,]),'VAR_BLOCK':([5,],[7,]),'check_var_existence':([75,235,],[114,114,]),'process_possible_relop_operation':([127,],[155,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID create_global_fun COLON VAR_BLOCK update_global_fun print_currentSymTab SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION update_constant_number free_symbol_table print_funDir','program',14,'p_program','parser.py',54),
  ('print_funDir -> <empty>','print_funDir',0,'p_print_funDir','parser.py',59),
  ('free_symbol_table -> <empty>','free_symbol_table',0,'p_free_symbol_table','parser.py',65),
  ('update_constant_number -> <empty>','update_constant_number',0,'p_update_constant_number','parser.py',72),
  ('create_global_fun -> <empty>','create_global_fun',0,'p_create_global_fun','parser.py',81),
  ('update_global_fun -> <empty>','update_global_fun',0,'p_update_global_fun','parser.py',93),
  ('print_currentSymTab -> <empty>','print_currentSymTab',0,'p_print_currentSymTab','parser.py',107),
  ('VAR_BLOCK -> VARS COLON AA','VAR_BLOCK',3,'p_var_block','parser.py',115),
  ('AA -> VAR_DEFINITIONS AA','AA',2,'p_aa','parser.py',120),
  ('AA -> empty','AA',1,'p_aa','parser.py',121),
  ('VAR_DEFINITIONS -> TYPE store_type A TICK','VAR_DEFINITIONS',4,'p_var_definitions','parser.py',128),
  ('store_type -> <empty>','store_type',0,'p_store_type','parser.py',133),
  ('A -> ID check_var_duplicates update_local_count B D','A',5,'p_a','parser.py',153),
  ('check_var_duplicates -> <empty>','check_var_duplicates',0,'p_check_var_duplicates','parser.py',158),
  ('update_local_count -> <empty>','update_local_count',0,'p_update_local_count','parser.py',179),
  ('B -> EQUALS C assign_var_value','B',3,'p_b','parser.py',187),
  ('B -> empty','B',1,'p_b','parser.py',188),
  ('assign_var_value -> <empty>','assign_var_value',0,'p_assign_var_value','parser.py',193),
  ('C -> S_EXPRESSION','C',1,'p_c','parser.py',202),
  ('C -> LIST_EXP','C',1,'p_c','parser.py',203),
  ('D -> COMMA A','D',2,'p_d','parser.py',208),
  ('D -> empty','D',1,'p_d','parser.py',209),
  ('S_BLOCK -> L_BRACE F R_BRACE','S_BLOCK',3,'p_s_block','parser.py',216),
  ('F -> S_STATUTE F','F',2,'p_f','parser.py',221),
  ('F -> empty','F',1,'p_f','parser.py',222),
  ('S_STATUTE -> VAR_DEFINITIONS','S_STATUTE',1,'p_s_statute','parser.py',229),
  ('S_STATUTE -> STATUTE','S_STATUTE',1,'p_s_statute','parser.py',230),
  ('SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block','SOLUTION_DEF',15,'p_solution_def','parser.py',237),
  ('reset_execution_block -> <empty>','reset_execution_block',0,'p_reset_execution_block','parser.py',242),
  ('check_sol_duplicates -> <empty>','check_sol_duplicates',0,'p_check_sol_duplicates','parser.py',248),
  ('update_fun -> <empty>','update_fun',0,'p_update_fun','parser.py',262),
  ('STATUTE -> CONDITION','STATUTE',1,'p_statute','parser.py',279),
  ('STATUTE -> CYCLE','STATUTE',1,'p_statute','parser.py',280),
  ('STATUTE -> ASSIGNATION','STATUTE',1,'p_statute','parser.py',281),
  ('STATUTE -> CON_VAR TICK','STATUTE',2,'p_statute','parser.py',282),
  ('STATUTE -> RETURN_STATEMENT','STATUTE',1,'p_statute','parser.py',283),
  ('RETURN_STATEMENT -> RETURN S_EXPRESSION TICK check_return_type_correspondence process_return_operation_with_return_value','RETURN_STATEMENT',5,'p_return','parser.py',290),
  ('RETURN_STATEMENT -> RETURN TICK process_return_operation_without_return_value','RETURN_STATEMENT',3,'p_return','parser.py',291),
  ('check_return_type_correspondence -> <empty>','check_return_type_correspondence',0,'p_check_return_type_correspondence','parser.py',296),
  ('process_return_operation_with_return_value -> <empty>','process_return_operation_with_return_value',0,'p_process_return_operation_with_return_value','parser.py',306),
  ('process_return_operation_without_return_value -> <empty>','process_return_operation_without_return_value',0,'p_process_return_operation_without_return_value','parser.py',315),
  ('S_TYPE -> VOID','S_TYPE',1,'p_s_type','parser.py',324),
  ('S_TYPE -> TYPE','S_TYPE',1,'p_s_type','parser.py',325),
  ('TYPE -> INT','TYPE',1,'p_type','parser.py',336),
  ('TYPE -> FLOAT','TYPE',1,'p_type','parser.py',337),
  ('TYPE -> CHAR','TYPE',1,'p_type','parser.py',338),
  ('TYPE -> STRING','TYPE',1,'p_type','parser.py',339),
  ('TYPE -> BOOL','TYPE',1,'p_type','parser.py',340),
  ('TYPE -> LIST','TYPE',1,'p_type','parser.py',341),
  ('EXPRESSION -> EXP G','EXPRESSION',2,'p_expression','parser.py',360),
  ('G -> H EXP process_possible_relop_operation','G',3,'p_g','parser.py',365),
  ('G -> empty','G',1,'p_g','parser.py',366),
  ('process_possible_relop_operation -> <empty>','process_possible_relop_operation',0,'p_process_possible_relop_operation','parser.py',371),
  ('H -> LESS_T','H',1,'p_h','parser.py',404),
  ('H -> GREATER_T','H',1,'p_h','parser.py',405),
  ('H -> GREATER_T_EQUALS','H',1,'p_h','parser.py',406),
  ('H -> LESS_T_EQUALS','H',1,'p_h','parser.py',407),
  ('H -> IS','H',1,'p_h','parser.py',408),
  ('H -> AND','H',1,'p_h','parser.py',409),
  ('H -> OR','H',1,'p_h','parser.py',410),
  ('H -> PERCENTAGE','H',1,'p_h','parser.py',411),
  ('EXP -> TERM process_possible_plus_minus_operation I','EXP',3,'p_exp','parser.py',434),
  ('process_possible_plus_minus_operation -> <empty>','process_possible_plus_minus_operation',0,'p_process_possible_plus_minus_operation','parser.py',439),
  ('I -> J EXP','I',2,'p_i','parser.py',471),
  ('I -> empty','I',1,'p_i','parser.py',472),
  ('J -> PLUS','J',1,'p_j','parser.py',477),
  ('J -> MINUS','J',1,'p_j','parser.py',478),
  ('TERM -> FACTOR process_possible_multiply_divide_operation K','TERM',3,'p_term','parser.py',489),
  ('process_possible_multiply_divide_operation -> <empty>','process_possible_multiply_divide_operation',0,'p_process_possible_multiply_divide_operation','parser.py',494),
  ('K -> L TERM','K',2,'p_k','parser.py',526),
  ('K -> empty','K',1,'p_k','parser.py',527),
  ('L -> MULTIPLY','L',1,'p_l','parser.py',532),
  ('L -> DIVIDE','L',1,'p_l','parser.py',533),
  ('FACTOR -> L_PAREN push_false_bottom S_EXPRESSION R_PAREN pop_false_bottom','FACTOR',5,'p_factor','parser.py',544),
  ('FACTOR -> CON_VAR','FACTOR',1,'p_factor','parser.py',545),
  ('push_false_bottom -> <empty>','push_false_bottom',0,'p_push_false_bottom','parser.py',550),
  ('pop_false_bottom -> <empty>','pop_false_bottom',0,'p_pop_false_bottom','parser.py',556),
  ('CON_VAR -> ID_REF','CON_VAR',1,'p_con_var','parser.py',564),
  ('CON_VAR -> CON_VAR_TERMINAL','CON_VAR',1,'p_con_var','parser.py',565),
  ('CON_VAR -> SOLUTION_CALL','CON_VAR',1,'p_con_var','parser.py',566),
  ('CON_VAR -> PREDEFINED_SOLS','CON_VAR',1,'p_con_var','parser.py',567),
  ('CON_VAR_TERMINAL -> INT_CONT','CON_VAR_TERMINAL',1,'p_con_var_terminal','parser.py',572),
  ('CON_VAR_TERMINAL -> STRING_CONT','CON_VAR_TERMINAL',1,'p_con_var_terminal','parser.py',573),
  ('CON_VAR_TERMINAL -> CHAR_CONT','CON_VAR_TERMINAL',1,'p_con_var_terminal','parser.py',574),
  ('CON_VAR_TERMINAL -> FLOAT_CONT','CON_VAR_TERMINAL',1,'p_con_var_terminal','parser.py',575),
  ('CON_VAR_TERMINAL -> BOOL_CONT','CON_VAR_TERMINAL',1,'p_con_var_terminal','parser.py',576),
  ('NEGATION -> N S_EXPRESSION process_negation_operation','NEGATION',3,'p_negation','parser.py',610),
  ('process_negation_operation -> <empty>','process_negation_operation',0,'p_process_negation_operation','parser.py',615),
  ('N -> NOT','N',1,'p_n','parser.py',645),
  ('ID_REF -> ID check_var_existence get_var_type O','ID_REF',4,'p_ID_ref','parser.py',653),
  ('check_var_existence -> <empty>','check_var_existence',0,'p_check_var_existence','parser.py',658),
  ('get_var_type -> <empty>','get_var_type',0,'p_get_var_type','parser.py',667),
  ('O -> L_BRACK S_EXPRESSION check_int_type R_BRACK','O',4,'p_o','parser.py',680),
  ('O -> empty','O',1,'p_o','parser.py',681),
  ('check_int_type -> <empty>','check_int_type',0,'p_check_int_type','parser.py',706),
  ('LIST_EXP -> L_BRACK S_EXPRESSION P R_BRACK','LIST_EXP',4,'p_list_exp','parser.py',715),
  ('P -> COMMA S_EXPRESSION P','P',3,'p_p','parser.py',720),
  ('P -> empty','P',1,'p_p','parser.py',721),
  ('ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation TICK','ASSIGNATION',6,'p_assignation','parser.py',728),
  ('append_equals -> <empty>','append_equals',0,'p_append_equals','parser.py',733),
  ('process_assignation_operation -> <empty>','process_assignation_operation',0,'p_process_assignation_operation','parser.py',739),
  ('BLOCK -> L_BRACE Q R_BRACE','BLOCK',3,'p_block','parser.py',761),
  ('Q -> STATUTE Q','Q',2,'p_q','parser.py',766),
  ('Q -> empty','Q',1,'p_q','parser.py',767),
  ('S_ASSIGNATION -> ID_REF EQUALS append_equals S_EXPRESSION process_assignation_operation','S_ASSIGNATION',5,'p_s_assignation','parser.py',774),
  ('WHILE -> WHILE_CYCLE append_jump S_EXPRESSION process_condition_operation COLON BLOCK end_while_operation_processing TICK','WHILE',8,'p_while','parser.py',781),
  ('append_jump -> <empty>','append_jump',0,'p_append_jump','parser.py',786),
  ('end_while_operation_processing -> <empty>','end_while_operation_processing',0,'p_end_while_operation_processing','parser.py',792),
  ('FOR -> FOR_CYCLE S_ASSIGNATION TICK append_jump S_EXPRESSION process_for_condition_operation TICK S_ASSIGNATION process_for_assignation_operation COLON BLOCK end_for_operation_processing TICK','FOR',13,'p_for','parser.py',803),
  ('process_for_condition_operation -> <empty>','process_for_condition_operation',0,'p_process_for_condition_operation','parser.py',808),
  ('process_for_assignation_operation -> <empty>','process_for_assignation_operation',0,'p_process_for_assignation_operation','parser.py',823),
  ('end_for_operation_processing -> <empty>','end_for_operation_processing',0,'p_end_for_operation_processing','parser.py',831),
  ('CYCLE -> FOR','CYCLE',1,'p_cycle','parser.py',846),
  ('CYCLE -> WHILE','CYCLE',1,'p_cycle','parser.py',847),
  ('CONDITION -> IF append_false_bottom S_EXPRESSION process_condition_operation COLON BLOCK R TICK end_condition_operation_processing','CONDITION',9,'p_condition','parser.py',854),
  ('end_condition_operation_processing -> <empty>','end_condition_operation_processing',0,'p_end_condition_operation_processing','parser.py',859),
  ('append_false_bottom -> <empty>','append_false_bottom',0,'p_append_false_bottom','parser.py',869),
  ('process_condition_operation -> <empty>','process_condition_operation',0,'p_process_condition_operation','parser.py',875),
  ('R -> S','R',1,'p_r','parser.py',887),
  ('R -> T','R',1,'p_r','parser.py',888),
  ('R -> empty','R',1,'p_r','parser.py',889),
  ('S -> ELIF process_elif_operation S_EXPRESSION process_condition_operation COLON BLOCK U','S',7,'p_s','parser.py',894),
  ('process_elif_operation -> <empty>','process_elif_operation',0,'p_process_elif_operation','parser.py',899),
  ('U -> S','U',1,'p_u','parser.py',908),
  ('U -> T','U',1,'p_u','parser.py',909),
  ('U -> empty','U',1,'p_u','parser.py',910),
  ('T -> ELSE process_else_operation COLON BLOCK end_else_operation_processing','T',5,'p_t','parser.py',915),
  ('process_else_operation -> <empty>','process_else_operation',0,'p_process_else_operation','parser.py',920),
  ('end_else_operation_processing -> <empty>','end_else_operation_processing',0,'p_end_else_operation_processing','parser.py',929),
  ('SOLUTION_CALL -> ID check_sol_existence L_PAREN generate_era_quad V R_PAREN end_argument_processing','SOLUTION_CALL',7,'p_solution_call','parser.py',938),
  ('end_argument_processing -> <empty>','end_argument_processing',0,'p_end_argument_processing','parser.py',945),
  ('generate_era_quad -> <empty>','generate_era_quad',0,'p_generate_era_quad','parser.py',957),
  ('check_sol_existence -> <empty>','check_sol_existence',0,'p_check_sol_existence','parser.py',966),
  ('V -> S_EXPRESSION process_argument X','V',3,'p_v','parser.py',979),
  ('process_argument -> <empty>','process_argument',0,'p_process_argument','parser.py',984),
  ('X -> COMMA update_parameter_counter V','X',3,'p_x','parser.py',1001),
  ('X -> empty','X',1,'p_x','parser.py',1002),
  ('update_parameter_counter -> <empty>','update_parameter_counter',0,'p_update_parameter_counter','parser.py',1007),
  ('S_EXPRESSION -> EXPRESSION','S_EXPRESSION',1,'p_s_expression','parser.py',1016),
  ('S_EXPRESSION -> NEGATION','S_EXPRESSION',1,'p_s_expression','parser.py',1017),
  ('PARAMS -> TYPE store_type ID check_param_duplicates update_param_count Y','PARAMS',6,'p_params','parser.py',1024),
  ('check_param_duplicates -> <empty>','check_param_duplicates',0,'p_check_param_duplicates','parser.py',1029),
  ('update_param_count -> <empty>','update_param_count',0,'p_update_param_count','parser.py',1045),
  ('Y -> COMMA PARAMS','Y',2,'p_y','parser.py',1052),
  ('Y -> empty','Y',1,'p_y','parser.py',1053),
  ('SOL_DEFINITIONS -> Z','SOL_DEFINITIONS',1,'p_sol_definitions','parser.py',1060),
  ('Z -> SOLUTION_DEF Z','Z',2,'p_z','parser.py',1065),
  ('Z -> empty','Z',1,'p_z','parser.py',1066),
  ('MAIN_DEFINITION -> INT store_type MAIN_R check_sol_duplicates L_PAREN R_PAREN COLON S_BLOCK TICK update_fun print_currentSymTab free_symbol_table reset_execution_block','MAIN_DEFINITION',13,'p_main_definition','parser.py',1073),
  ('DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN','DRAW_CIRCLE',8,'p_draw_circle','parser.py',1083),
  ('DRAW_LINE -> DRAW_LINE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN','DRAW_LINE',10,'p_draw_line','parser.py',1091),
  ('DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN S_EXPRESSION COMMA S_EXPRESSION COMMA S_EXPRESSION R_PAREN','DRAW_RECTANGLE',8,'p_draw_rectangle','parser.py',1099),
  ('MOVE_UP -> MOVE_UP_R L_PAREN S_EXPRESSION R_PAREN','MOVE_UP',4,'p_move_up','parser.py',1107),
  ('MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN S_EXPRESSION R_PAREN','MOVE_RIGHT',4,'p_move_right','parser.py',1115),
  ('MOVE_DOWN -> MOVE_DOWN_R L_PAREN S_EXPRESSION R_PAREN','MOVE_DOWN',4,'p_move_down','parser.py',1123),
  ('MOVE_LEFT -> MOVE_LEFT_R L_PAREN S_EXPRESSION R_PAREN','MOVE_LEFT',4,'p_move_left','parser.py',1131),
  ('PRINT -> PRINT_R L_PAREN S_EXPRESSION R_PAREN','PRINT',4,'p_print','parser.py',1139),
  ('PREDEFINED_SOLS -> DRAW_LINE','PREDEFINED_SOLS',1,'p_predefined_sols','parser.py',1147),
  ('PREDEFINED_SOLS -> DRAW_CIRCLE','PREDEFINED_SOLS',1,'p_predefined_sols','parser.py',1148),
  ('PREDEFINED_SOLS -> DRAW_RECTANGLE','PREDEFINED_SOLS',1,'p_predefined_sols','parser.py',1149),
  ('PREDEFINED_SOLS -> MOVE_UP','PREDEFINED_SOLS',1,'p_predefined_sols','parser.py',1150),
  ('PREDEFINED_SOLS -> MOVE_RIGHT','PREDEFINED_SOLS',1,'p_predefined_sols','parser.py',1151),
  ('PREDEFINED_SOLS -> MOVE_DOWN','PREDEFINED_SOLS',1,'p_predefined_sols','parser.py',1152),
  ('PREDEFINED_SOLS -> MOVE_LEFT','PREDEFINED_SOLS',1,'p_predefined_sols','parser.py',1153),
  ('PREDEFINED_SOLS -> PRINT','PREDEFINED_SOLS',1,'p_predefined_sols','parser.py',1154),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',1163),
]
