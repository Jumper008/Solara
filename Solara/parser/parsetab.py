
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'IF ELSE ELIF WHILE_CYCLE FOR_CYCLE INT FLOAT CHAR STRING BOOL LIST VOID L_BRACE R_BRACE L_PAREN R_PAREN L_BRACK R_BRACK COLON COMMA PLUS MINUS MULTIPLY DIVIDE GREATER_T LESS_T GREATER_T_EQUALS LESS_T_EQUALS EQUALS PERCENTAGE IS NOT AND OR ID INT_CONT STRING_CONT CHAR_CONT FLOAT_CONT BOOL_CONT TICK SINGLE_COMMENT MULTI_COMMENT PROGRAM DRAW_CIRCLE_R DRAW_LINE_R DRAW_RECTANGLE_R MOVE_UP_R MOVE_DOWN_R MOVE_RIGHT_R MOVE_LEFT_R PRINT_R SOLS VARS SOL MAIN_R\n    program : PROGRAM ID create_global_fun COLON VARS COLON VAR_DEFINITIONS SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION\n    \n    create_global_fun :\n    \n    VAR_DEFINITIONS : TYPE store_type A TICK VAR_DEFINITIONS\n    | empty\n    \n    store_type :\n    \n    A : ID check_var_duplicates B D\n    \n    check_var_duplicates :\n    \n    B : EQUALS C assign_var_value\n    | empty\n    \n    assign_var_value :\n    \n    C : EXPRESSION\n    | LIST_EXP\n    \n    D : COMMA A\n    | empty\n    \n    S_BLOCK : L_BRACE F R_BRACE\n    \n    F : S_STATUTE F\n    | empty\n    \n    S_STATUTE : VAR_DEFINITIONS\n    | STATUTE\n    \n    SOLUTION_DEF : SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK\n    \n    check_sol_duplicates :\n    \n    STATUTE : CONDITION\n    | CYCLE\n    | ASSIGNATION\n    \n    S_TYPE : VOID\n    | TYPE\n    \n    TYPE : INT\n    | FLOAT\n    | CHAR\n    | STRING\n    | BOOL\n    | LIST\n    \n    EXPRESSION : EXP G\n    \n    G : H EXP\n    | empty\n    \n    H : LESS_T\n    | GREATER_T\n    | GREATER_T_EQUALS\n    | LESS_T_EQUALS\n    | IS\n    | AND\n    | OR\n    | PERCENTAGE\n    \n    EXP : TERM I\n    \n    I : J EXP\n    | empty\n    \n    J : PLUS\n    | MINUS\n    \n    TERM : FACTOR K\n    \n    K : L TERM\n    | empty\n    \n    L : MULTIPLY\n    | DIVIDE\n    \n    FACTOR : L_PAREN EXPRESSION R_PAREN\n    | M CON_VAR\n    \n    M : PLUS\n    | MINUS\n    | empty\n    \n    CON_VAR : ID_REF\n    | INT_CONT\n    | STRING_CONT\n    | CHAR_CONT\n    | FLOAT_CONT\n    | BOOL_CONT\n    | SOLUTION_CALL\n    | PREDEFINED_SOLS\n    \n    NEGATION : N EXPRESSION\n    \n    N : NOT\n    \n    ID_REF : ID O\n    \n    O : L_BRACK EXPRESSION R_BRACK\n    | empty\n    \n    LIST_EXP : L_BRACK EXPRESSION P R_BRACK\n    \n    P : COMMA EXPRESSION P\n    | empty\n    \n    ASSIGNATION : ID_REF EQUALS EXPRESSION TICK\n    \n    BLOCK : L_BRACE Q R_BRACE\n    \n    Q : STATUTE Q\n    | empty\n    \n    S_ASSIGNATION : ID_REF EQUALS EXPRESSION\n    \n    WHILE : WHILE_CYCLE EXPRESSION COLON BLOCK TICK\n    \n    FOR : FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK\n    \n    CYCLE : FOR\n    | WHILE\n    \n    CONDITION : IF EXPRESSION COLON BLOCK R TICK\n    \n    R : S\n    | T\n    \n    S : ELIF EXPRESSION COLON BLOCK U\n    \n    U : S\n    | T\n    | empty\n    \n    T : ELSE COLON BLOCK\n    \n    SOLUTION_CALL : ID L_PAREN V R_PAREN\n    \n    V : W X\n    \n    W : EXPRESSION\n    | NEGATION\n    \n    X : COMMA V\n    | empty\n    \n    PARAMS : TYPE store_type ID check_param_duplicates Y\n    \n    check_param_duplicates :\n    \n    Y : COMMA PARAMS\n    | empty\n    \n    SOL_DEFINITIONS : Z\n    \n    Z : SOLUTION_DEF Z\n    | empty\n    \n    MAIN_DEFINITION : INT MAIN_R L_PAREN R_PAREN COLON S_BLOCK TICK\n    \n    DRAW_CIRCLE : DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN\n    \n    DRAW_LINE : DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN\n    \n    DRAW_RECTANGLE : DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN\n    \n    MOVE_UP : MOVE_UP_R L_PAREN EXPRESSION R_PAREN\n    \n    MOVE_RIGHT : MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN\n    \n    MOVE_DOWN : MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN\n    \n    MOVE_LEFT : MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN\n    \n    PRINT : PRINT_R L_PAREN EXPRESSION R_PAREN\n    \n    PREDEFINED_SOLS : DRAW_LINE\n    | DRAW_CIRCLE\n    | DRAW_RECTANGLE\n    | MOVE_UP\n    | MOVE_RIGHT\n    | MOVE_DOWN\n    | MOVE_LEFT\n    | PRINT\n    empty :\n    \n    \n    '
    
_lr_action_items = {'DIVIDE':([52,65,66,68,69,70,71,72,73,74,75,76,78,79,80,81,83,84,86,122,123,126,155,156,157,164,165,166,167,223,224,243,],[104,-121,-60,-61,-120,-59,-65,-118,-64,-55,-62,-116,-114,-122,-117,-63,-66,-119,-115,-69,-71,-54,-111,-113,-112,-92,-70,-109,-110,-106,-108,-107,]),'L_BRACE':([131,190,207,208,241,244,245,],[151,151,219,219,219,219,219,]),'VARS':([5,],[6,]),'DRAW_LINE_R':([37,46,47,48,50,54,55,89,90,91,93,95,96,97,98,99,100,101,102,104,106,107,112,114,115,116,117,118,119,120,121,124,125,141,144,154,158,159,162,182,184,193,199,200,201,205,206,222,230,],[-122,-122,61,-122,-56,-57,-58,-122,-47,-48,-41,-122,-40,-36,-39,-37,-38,-43,-42,-53,-122,-52,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-68,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,]),'VOID':([23,],[30,]),'PRINT_R':([37,46,47,48,50,54,55,89,90,91,93,95,96,97,98,99,100,101,102,104,106,107,112,114,115,116,117,118,119,120,121,124,125,141,144,154,158,159,162,182,184,193,199,200,201,205,206,222,230,],[-122,-122,63,-122,-56,-57,-58,-122,-47,-48,-41,-122,-40,-36,-39,-37,-38,-43,-42,-53,-122,-52,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-68,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,]),'MOVE_LEFT_R':([37,46,47,48,50,54,55,89,90,91,93,95,96,97,98,99,100,101,102,104,106,107,112,114,115,116,117,118,119,120,121,124,125,141,144,154,158,159,162,182,184,193,199,200,201,205,206,222,230,],[-122,-122,64,-122,-56,-57,-58,-122,-47,-48,-41,-122,-40,-36,-39,-37,-38,-43,-42,-53,-122,-52,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-68,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,]),'CHAR':([7,16,23,27,35,130,151,170,171,172,173,175,176,177,179,183,213,216,235,242,249,],[13,-4,13,13,-3,13,13,-83,-24,13,-18,-22,-23,-19,-82,-4,13,-75,-80,-84,-81,]),'PROGRAM':([0,],[2,]),'MULTIPLY':([52,65,66,68,69,70,71,72,73,74,75,76,78,79,80,81,83,84,86,122,123,126,155,156,157,164,165,166,167,223,224,243,],[107,-121,-60,-61,-120,-59,-65,-118,-64,-55,-62,-116,-114,-122,-117,-63,-66,-119,-115,-69,-71,-54,-111,-113,-112,-92,-70,-109,-110,-106,-108,-107,]),'INT_CONT':([37,46,47,48,50,54,55,89,90,91,93,95,96,97,98,99,100,101,102,104,106,107,112,114,115,116,117,118,119,120,121,124,125,141,144,154,158,159,162,182,184,193,199,200,201,205,206,222,230,],[-122,-122,66,-122,-56,-57,-58,-122,-47,-48,-41,-122,-40,-36,-39,-37,-38,-43,-42,-53,-122,-52,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-68,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,]),'TICK':([20,21,28,36,38,41,43,44,45,49,51,52,53,58,59,65,66,68,69,70,71,72,73,74,75,76,78,79,80,81,83,84,86,88,92,94,103,105,108,122,123,126,127,128,129,132,152,155,156,157,164,165,166,167,195,196,202,204,217,218,221,223,224,232,233,234,239,243,246,247,248,250,251,252,253,],[27,-7,-122,-122,-9,-6,-14,-12,-10,-122,-122,-122,-11,-13,-8,-121,-60,-61,-120,-59,-65,-118,-64,-55,-62,-116,-114,-122,-117,-63,-66,-119,-115,-44,-46,-33,-35,-49,-51,-69,-71,-54,-45,-34,-50,-72,185,-111,-113,-112,-92,-70,-109,-110,206,-15,212,216,-79,226,235,-106,-108,-85,242,-86,-76,-107,-91,249,-122,-88,-90,-89,-87,]),'MINUS':([37,46,48,49,52,65,66,68,69,70,71,72,73,74,75,76,78,79,80,81,83,84,86,89,90,91,93,95,96,97,98,99,100,101,102,104,105,106,107,108,112,114,115,116,117,118,119,120,121,122,123,124,125,126,129,141,144,154,155,156,157,158,159,162,164,165,166,167,182,184,193,199,200,201,205,206,222,223,224,230,243,],[54,54,54,91,-122,-121,-60,-61,-120,-59,-65,-118,-64,-55,-62,-116,-114,-122,-117,-63,-66,-119,-115,54,-47,-48,-41,54,-40,-36,-39,-37,-38,-43,-42,-53,-49,54,-52,-51,54,54,54,54,54,54,54,54,54,-69,-71,54,54,-54,-50,54,-68,54,-111,-113,-112,54,54,54,-92,-70,-109,-110,54,54,54,54,54,54,54,54,54,-106,-108,54,-107,]),'DRAW_CIRCLE_R':([37,46,47,48,50,54,55,89,90,91,93,95,96,97,98,99,100,101,102,104,106,107,112,114,115,116,117,118,119,120,121,124,125,141,144,154,158,159,162,182,184,193,199,200,201,205,206,222,230,],[-122,-122,67,-122,-56,-57,-58,-122,-47,-48,-41,-122,-40,-36,-39,-37,-38,-43,-42,-53,-122,-52,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-68,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,]),'IS':([49,51,52,65,66,68,69,70,71,72,73,74,75,76,78,79,80,81,83,84,86,88,92,105,108,122,123,126,127,129,155,156,157,164,165,166,167,223,224,243,],[-122,96,-122,-121,-60,-61,-120,-59,-65,-118,-64,-55,-62,-116,-114,-122,-117,-63,-66,-119,-115,-44,-46,-49,-51,-69,-71,-54,-45,-50,-111,-113,-112,-92,-70,-109,-110,-106,-108,-107,]),'STRING_CONT':([37,46,47,48,50,54,55,89,90,91,93,95,96,97,98,99,100,101,102,104,106,107,112,114,115,116,117,118,119,120,121,124,125,141,144,154,158,159,162,182,184,193,199,200,201,205,206,222,230,],[-122,-122,68,-122,-56,-57,-58,-122,-47,-48,-41,-122,-40,-36,-39,-37,-38,-43,-42,-53,-122,-52,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-68,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,]),'MOVE_RIGHT_R':([37,46,47,48,50,54,55,89,90,91,93,95,96,97,98,99,100,101,102,104,106,107,112,114,115,116,117,118,119,120,121,124,125,141,144,154,158,159,162,182,184,193,199,200,201,205,206,222,230,],[-122,-122,85,-122,-56,-57,-58,-122,-47,-48,-41,-122,-40,-36,-39,-37,-38,-43,-42,-53,-122,-52,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-68,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,]),'SOL':([19,22,212,],[23,23,-20,]),'ELIF':([220,239,248,],[230,-76,230,]),'ID':([2,8,10,11,12,13,14,15,16,18,27,30,31,32,35,37,39,42,46,47,48,50,54,55,89,90,91,93,95,96,97,98,99,100,101,102,104,106,107,112,114,115,116,117,118,119,120,121,124,125,141,144,150,151,154,158,159,162,169,170,171,172,173,175,176,177,178,179,182,183,184,193,199,200,201,205,206,216,219,222,226,228,230,235,242,249,],[3,-30,-27,-28,-32,-29,-31,-5,-4,21,-122,-25,-5,-26,-3,-122,56,21,-122,79,-122,-56,-57,-58,-122,-47,-48,-41,-122,-40,-36,-39,-37,-38,-43,-42,-53,-122,-52,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-68,-5,181,-122,-122,-122,-122,191,-83,-24,181,-18,-22,-23,-19,181,-82,-122,-4,-122,-122,-122,-122,-122,-122,-122,-75,181,-122,181,181,-122,-80,-84,-81,]),'COLON':([3,4,6,17,49,51,52,65,66,68,69,70,71,72,73,74,75,76,78,79,80,81,83,84,86,88,92,94,103,105,108,110,122,123,126,127,128,129,155,156,157,164,165,166,167,168,197,198,217,223,224,231,237,240,243,],[-2,5,7,19,-122,-122,-122,-121,-60,-61,-120,-59,-65,-118,-64,-55,-62,-116,-114,-122,-117,-63,-66,-119,-115,-44,-46,-33,-35,-49,-51,131,-69,-71,-54,-45,-34,-50,-111,-113,-112,-92,-70,-109,-110,190,207,208,-79,-106,-108,241,244,245,-107,]),'COMMA':([21,28,36,38,44,45,49,51,52,53,59,60,65,66,68,69,70,71,72,73,74,75,76,78,79,80,81,83,84,86,88,92,94,103,105,108,122,123,126,127,128,129,132,133,134,138,139,140,142,145,155,156,157,160,164,165,166,167,186,187,188,191,203,209,223,224,243,],[-7,-122,42,-9,-12,-10,-122,-122,-122,-11,-8,112,-121,-60,-61,-120,-59,-65,-118,-64,-55,-62,-116,-114,-122,-117,-63,-66,-119,-115,-44,-46,-33,-35,-49,-51,-69,-71,-54,-45,-34,-50,-72,112,154,158,159,-95,162,-94,-111,-113,-112,-67,-92,-70,-109,-110,199,200,201,-99,213,222,-106,-108,-107,]),'PERCENTAGE':([49,51,52,65,66,68,69,70,71,72,73,74,75,76,78,79,80,81,83,84,86,88,92,105,108,122,123,126,127,129,155,156,157,164,165,166,167,223,224,243,],[-122,101,-122,-121,-60,-61,-120,-59,-65,-118,-64,-55,-62,-116,-114,-122,-117,-63,-66,-119,-115,-44,-46,-49,-51,-69,-71,-54,-45,-50,-111,-113,-112,-92,-70,-109,-110,-106,-108,-107,]),'MOVE_DOWN_R':([37,46,47,48,50,54,55,89,90,91,93,95,96,97,98,99,100,101,102,104,106,107,112,114,115,116,117,118,119,120,121,124,125,141,144,154,158,159,162,182,184,193,199,200,201,205,206,222,230,],[-122,-122,62,-122,-56,-57,-58,-122,-47,-48,-41,-122,-40,-36,-39,-37,-38,-43,-42,-53,-122,-52,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-68,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,]),'$end':([1,34,185,],[0,-1,-105,]),'PLUS':([37,46,48,49,52,65,66,68,69,70,71,72,73,74,75,76,78,79,80,81,83,84,86,89,90,91,93,95,96,97,98,99,100,101,102,104,105,106,107,108,112,114,115,116,117,118,119,120,121,122,123,124,125,126,129,141,144,154,155,156,157,158,159,162,164,165,166,167,182,184,193,199,200,201,205,206,222,223,224,230,243,],[50,50,50,90,-122,-121,-60,-61,-120,-59,-65,-118,-64,-55,-62,-116,-114,-122,-117,-63,-66,-119,-115,50,-47,-48,-41,50,-40,-36,-39,-37,-38,-43,-42,-53,-49,50,-52,-51,50,50,50,50,50,50,50,50,50,-69,-71,50,50,-54,-50,50,-68,50,-111,-113,-112,50,50,50,-92,-70,-109,-110,50,50,50,50,50,50,50,50,50,-106,-108,50,-107,]),'L_PAREN':([37,40,46,48,56,61,62,63,64,67,77,79,82,85,89,90,91,93,95,96,97,98,99,100,101,102,104,106,107,109,112,114,115,116,117,118,119,120,121,124,125,141,144,154,158,159,162,182,184,193,199,200,201,205,206,222,230,],[48,57,48,48,-21,114,115,116,117,118,119,120,124,125,48,-47,-48,-41,48,-40,-36,-39,-37,-38,-43,-42,-53,48,-52,130,48,48,48,48,48,48,48,48,48,48,48,48,-68,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'FOR_CYCLE':([16,27,35,151,170,171,172,173,175,176,177,179,183,216,219,228,235,242,249,],[-4,-122,-3,178,-83,-24,178,-18,-22,-23,-19,-82,-4,-75,178,178,-80,-84,-81,]),'STRING':([7,16,23,27,35,130,151,170,171,172,173,175,176,177,179,183,213,216,235,242,249,],[8,-4,8,8,-3,8,8,-83,-24,8,-18,-22,-23,-19,-82,-4,8,-75,-80,-84,-81,]),'GREATER_T_EQUALS':([49,51,52,65,66,68,69,70,71,72,73,74,75,76,78,79,80,81,83,84,86,88,92,105,108,122,123,126,127,129,155,156,157,164,165,166,167,223,224,243,],[-122,100,-122,-121,-60,-61,-120,-59,-65,-118,-64,-55,-62,-116,-114,-122,-117,-63,-66,-119,-115,-44,-46,-49,-51,-69,-71,-54,-45,-50,-111,-113,-112,-92,-70,-109,-110,-106,-108,-107,]),'CHAR_CONT':([37,46,47,48,50,54,55,89,90,91,93,95,96,97,98,99,100,101,102,104,106,107,112,114,115,116,117,118,119,120,121,124,125,141,144,154,158,159,162,182,184,193,199,200,201,205,206,222,230,],[-122,-122,75,-122,-56,-57,-58,-122,-47,-48,-41,-122,-40,-36,-39,-37,-38,-43,-42,-53,-122,-52,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-68,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,]),'EQUALS':([21,28,122,123,165,174,181,194,],[-7,37,-69,-71,-70,193,-122,205,]),'ELSE':([220,239,248,],[231,-76,231,]),'R_PAREN':([49,51,52,57,65,66,68,69,70,71,72,73,74,75,76,78,79,80,81,83,84,86,87,88,92,94,103,105,108,122,123,126,127,128,129,135,136,137,140,142,143,145,147,148,149,155,156,157,160,161,163,164,165,166,167,189,191,203,210,211,214,215,223,224,225,236,243,],[-122,-122,-122,110,-121,-60,-61,-120,-59,-65,-118,-64,-55,-62,-116,-114,-122,-117,-63,-66,-119,-115,126,-44,-46,-33,-35,-49,-51,-69,-71,-54,-45,-34,-50,155,156,157,-95,-122,164,-94,166,167,168,-111,-113,-112,-67,-93,-97,-92,-70,-109,-110,-96,-99,-122,223,224,-98,-101,-106,-108,-100,243,-107,]),'DRAW_RECTANGLE_R':([37,46,47,48,50,54,55,89,90,91,93,95,96,97,98,99,100,101,102,104,106,107,112,114,115,116,117,118,119,120,121,124,125,141,144,154,158,159,162,182,184,193,199,200,201,205,206,222,230,],[-122,-122,77,-122,-56,-57,-58,-122,-47,-48,-41,-122,-40,-36,-39,-37,-38,-43,-42,-53,-122,-52,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-68,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,]),'SOLS':([7,9,16,27,35,],[-122,17,-4,-122,-3,]),'BOOL_CONT':([37,46,47,48,50,54,55,89,90,91,93,95,96,97,98,99,100,101,102,104,106,107,112,114,115,116,117,118,119,120,121,124,125,141,144,154,158,159,162,182,184,193,199,200,201,205,206,222,230,],[-122,-122,73,-122,-56,-57,-58,-122,-47,-48,-41,-122,-40,-36,-39,-37,-38,-43,-42,-53,-122,-52,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-68,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,]),'IF':([16,27,35,151,170,171,172,173,175,176,177,179,183,216,219,228,235,242,249,],[-4,-122,-3,182,-83,-24,182,-18,-22,-23,-19,-82,-4,-75,182,182,-80,-84,-81,]),'AND':([49,51,52,65,66,68,69,70,71,72,73,74,75,76,78,79,80,81,83,84,86,88,92,105,108,122,123,126,127,129,155,156,157,164,165,166,167,223,224,243,],[-122,93,-122,-121,-60,-61,-120,-59,-65,-118,-64,-55,-62,-116,-114,-122,-117,-63,-66,-119,-115,-44,-46,-49,-51,-69,-71,-54,-45,-50,-111,-113,-112,-92,-70,-109,-110,-106,-108,-107,]),'LESS_T':([49,51,52,65,66,68,69,70,71,72,73,74,75,76,78,79,80,81,83,84,86,88,92,105,108,122,123,126,127,129,155,156,157,164,165,166,167,223,224,243,],[-122,97,-122,-121,-60,-61,-120,-59,-65,-118,-64,-55,-62,-116,-114,-122,-117,-63,-66,-119,-115,-44,-46,-49,-51,-69,-71,-54,-45,-50,-111,-113,-112,-92,-70,-109,-110,-106,-108,-107,]),'FLOAT_CONT':([37,46,47,48,50,54,55,89,90,91,93,95,96,97,98,99,100,101,102,104,106,107,112,114,115,116,117,118,119,120,121,124,125,141,144,154,158,159,162,182,184,193,199,200,201,205,206,222,230,],[-122,-122,81,-122,-56,-57,-58,-122,-47,-48,-41,-122,-40,-36,-39,-37,-38,-43,-42,-53,-122,-52,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-68,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,]),'L_BRACK':([37,79,181,],[46,121,121,]),'MOVE_UP_R':([37,46,47,48,50,54,55,89,90,91,93,95,96,97,98,99,100,101,102,104,106,107,112,114,115,116,117,118,119,120,121,124,125,141,144,154,158,159,162,182,184,193,199,200,201,205,206,222,230,],[-122,-122,82,-122,-56,-57,-58,-122,-47,-48,-41,-122,-40,-36,-39,-37,-38,-43,-42,-53,-122,-52,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-68,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,]),'INT':([7,16,19,22,23,24,25,26,27,29,35,130,151,170,171,172,173,175,176,177,179,183,212,213,216,235,242,249,],[10,-4,-122,-122,10,33,-102,-104,10,-103,-3,10,10,-83,-24,10,-18,-22,-23,-19,-82,-4,-20,10,-75,-80,-84,-81,]),'FLOAT':([7,16,23,27,35,130,151,170,171,172,173,175,176,177,179,183,213,216,235,242,249,],[11,-4,11,11,-3,11,11,-83,-24,11,-18,-22,-23,-19,-82,-4,11,-75,-80,-84,-81,]),'LIST':([7,16,23,27,35,130,151,170,171,172,173,175,176,177,179,183,213,216,235,242,249,],[12,-4,12,12,-3,12,12,-83,-24,12,-18,-22,-23,-19,-82,-4,12,-75,-80,-84,-81,]),'MAIN_R':([33,],[40,]),'LESS_T_EQUALS':([49,51,52,65,66,68,69,70,71,72,73,74,75,76,78,79,80,81,83,84,86,88,92,105,108,122,123,126,127,129,155,156,157,164,165,166,167,223,224,243,],[-122,98,-122,-121,-60,-61,-120,-59,-65,-118,-64,-55,-62,-116,-114,-122,-117,-63,-66,-119,-115,-44,-46,-49,-51,-69,-71,-54,-45,-50,-111,-113,-112,-92,-70,-109,-110,-106,-108,-107,]),'BOOL':([7,16,23,27,35,130,151,170,171,172,173,175,176,177,179,183,213,216,235,242,249,],[14,-4,14,14,-3,14,14,-83,-24,14,-18,-22,-23,-19,-82,-4,14,-75,-80,-84,-81,]),'R_BRACE':([16,27,35,151,170,171,172,173,175,176,177,179,180,183,192,216,219,227,228,229,235,238,242,249,],[-4,-122,-3,-122,-83,-24,-122,-18,-22,-23,-19,-82,196,-4,-16,-75,-122,-78,-122,239,-80,-77,-84,-81,]),'GREATER_T':([49,51,52,65,66,68,69,70,71,72,73,74,75,76,78,79,80,81,83,84,86,88,92,105,108,122,123,126,127,129,155,156,157,164,165,166,167,223,224,243,],[-122,99,-122,-121,-60,-61,-120,-59,-65,-118,-64,-55,-62,-116,-114,-122,-117,-63,-66,-119,-115,-44,-46,-49,-51,-69,-71,-54,-45,-50,-111,-113,-112,-92,-70,-109,-110,-106,-108,-107,]),'NOT':([120,162,],[144,144,]),'WHILE_CYCLE':([16,27,35,151,170,171,172,173,175,176,177,179,183,216,219,228,235,242,249,],[-4,-122,-3,184,-83,-24,184,-18,-22,-23,-19,-82,-4,-75,184,184,-80,-84,-81,]),'OR':([49,51,52,65,66,68,69,70,71,72,73,74,75,76,78,79,80,81,83,84,86,88,92,105,108,122,123,126,127,129,155,156,157,164,165,166,167,223,224,243,],[-122,102,-122,-121,-60,-61,-120,-59,-65,-118,-64,-55,-62,-116,-114,-122,-117,-63,-66,-119,-115,-44,-46,-49,-51,-69,-71,-54,-45,-50,-111,-113,-112,-92,-70,-109,-110,-106,-108,-107,]),'R_BRACK':([49,51,52,60,65,66,68,69,70,71,72,73,74,75,76,78,79,80,81,83,84,86,88,92,94,103,105,108,111,113,122,123,126,127,128,129,133,146,153,155,156,157,164,165,166,167,223,224,243,],[-122,-122,-122,-122,-121,-60,-61,-120,-59,-65,-118,-64,-55,-62,-116,-114,-122,-117,-63,-66,-119,-115,-44,-46,-33,-35,-49,-51,132,-74,-69,-71,-54,-45,-34,-50,-122,165,-73,-111,-113,-112,-92,-70,-109,-110,-106,-108,-107,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'LIST_EXP':([37,],[44,]),'store_type':([15,31,150,],[18,39,169,]),'MOVE_DOWN':([47,],[84,]),'S':([220,248,],[232,250,]),'S_ASSIGNATION':([178,226,],[195,237,]),'WHILE':([151,172,219,228,],[170,170,170,170,]),'create_global_fun':([3,],[4,]),'EXP':([37,46,48,89,95,112,114,115,116,117,118,119,120,121,124,125,141,154,158,159,162,182,184,193,199,200,201,205,206,222,230,],[51,51,51,127,128,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'PRINT':([47,],[65,]),'R':([220,],[233,]),'BLOCK':([207,208,241,244,245,],[220,221,246,247,248,]),'ASSIGNATION':([151,172,219,228,],[171,171,171,171,]),'FOR':([151,172,219,228,],[179,179,179,179,]),'SOLUTION_DEF':([19,22,],[22,22,]),'TERM':([37,46,48,89,95,106,112,114,115,116,117,118,119,120,121,124,125,141,154,158,159,162,182,184,193,199,200,201,205,206,222,230,],[49,49,49,49,49,129,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'S_STATUTE':([151,172,],[172,172,]),'VAR_DEFINITIONS':([7,27,151,172,],[9,35,173,173,]),'MOVE_LEFT':([47,],[69,]),'ID_REF':([47,151,172,178,219,226,228,],[70,174,174,194,174,194,174,]),'SOLUTION_CALL':([47,],[71,]),'MOVE_RIGHT':([47,],[72,]),'program':([0,],[1,]),'check_sol_duplicates':([56,],[109,]),'CON_VAR':([47,],[74,]),'S_BLOCK':([131,190,],[152,202,]),'EXPRESSION':([37,46,48,112,114,115,116,117,118,119,120,121,124,125,141,154,158,159,162,182,184,193,199,200,201,205,206,222,230,],[53,60,87,133,134,135,136,137,138,139,145,146,147,148,160,186,187,188,145,197,198,204,209,210,211,217,218,236,240,]),'empty':([7,19,22,27,28,36,37,46,48,49,51,52,60,79,89,95,106,112,114,115,116,117,118,119,120,121,124,125,133,141,142,151,154,158,159,162,172,181,182,184,193,199,200,201,203,205,206,219,222,228,230,248,],[16,26,26,16,38,43,55,55,55,92,103,108,113,123,55,55,55,55,55,55,55,55,55,55,55,55,55,55,113,55,163,183,55,55,55,55,183,123,55,55,55,55,55,55,215,55,55,227,55,227,55,251,]),'CYCLE':([151,172,219,228,],[176,176,176,176,]),'A':([18,42,],[20,58,]),'STATUTE':([151,172,219,228,],[177,177,228,228,]),'C':([37,],[45,]),'B':([28,],[36,]),'D':([36,],[41,]),'G':([51,],[94,]),'F':([151,172,],[180,192,]),'I':([49,],[88,]),'H':([51,],[95,]),'K':([52,],[105,]),'J':([49,],[89,]),'M':([37,46,48,89,95,106,112,114,115,116,117,118,119,120,121,124,125,141,154,158,159,162,182,184,193,199,200,201,205,206,222,230,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'L':([52,],[106,]),'SOL_DEFINITIONS':([19,],[24,]),'N':([120,162,],[141,141,]),'Q':([219,228,],[229,238,]),'P':([60,133,],[111,153,]),'DRAW_RECTANGLE':([47,],[76,]),'check_var_duplicates':([21,],[28,]),'U':([248,],[253,]),'DRAW_LINE':([47,],[78,]),'W':([120,162,],[142,142,]),'V':([120,162,],[143,189,]),'Y':([203,],[214,]),'X':([142,],[161,]),'Z':([19,22,],[25,29,]),'check_param_duplicates':([191,],[203,]),'MOVE_UP':([47,],[80,]),'O':([79,181,],[122,122,]),'NEGATION':([120,162,],[140,140,]),'PREDEFINED_SOLS':([47,],[83,]),'S_TYPE':([23,],[31,]),'assign_var_value':([45,],[59,]),'PARAMS':([130,213,],[149,225,]),'CONDITION':([151,172,219,228,],[175,175,175,175,]),'FACTOR':([37,46,48,89,95,106,112,114,115,116,117,118,119,120,121,124,125,141,154,158,159,162,182,184,193,199,200,201,205,206,222,230,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'MAIN_DEFINITION':([24,],[34,]),'TYPE':([7,23,27,130,151,172,213,],[15,32,15,150,15,15,150,]),'DRAW_CIRCLE':([47,],[86,]),'T':([220,248,],[234,252,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID create_global_fun COLON VARS COLON VAR_DEFINITIONS SOLS COLON SOL_DEFINITIONS MAIN_DEFINITION','program',11,'p_program','parser.py',23),
  ('create_global_fun -> <empty>','create_global_fun',0,'p_create_global_fun','parser.py',28),
  ('VAR_DEFINITIONS -> TYPE store_type A TICK VAR_DEFINITIONS','VAR_DEFINITIONS',5,'p_var_definitions','parser.py',38),
  ('VAR_DEFINITIONS -> empty','VAR_DEFINITIONS',1,'p_var_definitions','parser.py',39),
  ('store_type -> <empty>','store_type',0,'p_store_type','parser.py',44),
  ('A -> ID check_var_duplicates B D','A',4,'p_a','parser.py',64),
  ('check_var_duplicates -> <empty>','check_var_duplicates',0,'p_check_var_duplicates','parser.py',69),
  ('B -> EQUALS C assign_var_value','B',3,'p_b','parser.py',82),
  ('B -> empty','B',1,'p_b','parser.py',83),
  ('assign_var_value -> <empty>','assign_var_value',0,'p_assign_var_value','parser.py',88),
  ('C -> EXPRESSION','C',1,'p_c','parser.py',97),
  ('C -> LIST_EXP','C',1,'p_c','parser.py',98),
  ('D -> COMMA A','D',2,'p_d','parser.py',103),
  ('D -> empty','D',1,'p_d','parser.py',104),
  ('S_BLOCK -> L_BRACE F R_BRACE','S_BLOCK',3,'p_s_block','parser.py',117),
  ('F -> S_STATUTE F','F',2,'p_f','parser.py',122),
  ('F -> empty','F',1,'p_f','parser.py',123),
  ('S_STATUTE -> VAR_DEFINITIONS','S_STATUTE',1,'p_s_statute','parser.py',130),
  ('S_STATUTE -> STATUTE','S_STATUTE',1,'p_s_statute','parser.py',131),
  ('SOLUTION_DEF -> SOL S_TYPE store_type ID check_sol_duplicates L_PAREN PARAMS R_PAREN COLON S_BLOCK TICK','SOLUTION_DEF',11,'p_solution_def','parser.py',138),
  ('check_sol_duplicates -> <empty>','check_sol_duplicates',0,'p_check_sol_duplicates','parser.py',143),
  ('STATUTE -> CONDITION','STATUTE',1,'p_statute','parser.py',159),
  ('STATUTE -> CYCLE','STATUTE',1,'p_statute','parser.py',160),
  ('STATUTE -> ASSIGNATION','STATUTE',1,'p_statute','parser.py',161),
  ('S_TYPE -> VOID','S_TYPE',1,'p_s_type','parser.py',168),
  ('S_TYPE -> TYPE','S_TYPE',1,'p_s_type','parser.py',169),
  ('TYPE -> INT','TYPE',1,'p_type','parser.py',180),
  ('TYPE -> FLOAT','TYPE',1,'p_type','parser.py',181),
  ('TYPE -> CHAR','TYPE',1,'p_type','parser.py',182),
  ('TYPE -> STRING','TYPE',1,'p_type','parser.py',183),
  ('TYPE -> BOOL','TYPE',1,'p_type','parser.py',184),
  ('TYPE -> LIST','TYPE',1,'p_type','parser.py',185),
  ('EXPRESSION -> EXP G','EXPRESSION',2,'p_expression','parser.py',204),
  ('G -> H EXP','G',2,'p_g','parser.py',209),
  ('G -> empty','G',1,'p_g','parser.py',210),
  ('H -> LESS_T','H',1,'p_h','parser.py',215),
  ('H -> GREATER_T','H',1,'p_h','parser.py',216),
  ('H -> GREATER_T_EQUALS','H',1,'p_h','parser.py',217),
  ('H -> LESS_T_EQUALS','H',1,'p_h','parser.py',218),
  ('H -> IS','H',1,'p_h','parser.py',219),
  ('H -> AND','H',1,'p_h','parser.py',220),
  ('H -> OR','H',1,'p_h','parser.py',221),
  ('H -> PERCENTAGE','H',1,'p_h','parser.py',222),
  ('EXP -> TERM I','EXP',2,'p_exp','parser.py',229),
  ('I -> J EXP','I',2,'p_i','parser.py',234),
  ('I -> empty','I',1,'p_i','parser.py',235),
  ('J -> PLUS','J',1,'p_j','parser.py',240),
  ('J -> MINUS','J',1,'p_j','parser.py',241),
  ('TERM -> FACTOR K','TERM',2,'p_term','parser.py',248),
  ('K -> L TERM','K',2,'p_k','parser.py',253),
  ('K -> empty','K',1,'p_k','parser.py',254),
  ('L -> MULTIPLY','L',1,'p_l','parser.py',259),
  ('L -> DIVIDE','L',1,'p_l','parser.py',260),
  ('FACTOR -> L_PAREN EXPRESSION R_PAREN','FACTOR',3,'p_factor','parser.py',267),
  ('FACTOR -> M CON_VAR','FACTOR',2,'p_factor','parser.py',268),
  ('M -> PLUS','M',1,'p_m','parser.py',273),
  ('M -> MINUS','M',1,'p_m','parser.py',274),
  ('M -> empty','M',1,'p_m','parser.py',275),
  ('CON_VAR -> ID_REF','CON_VAR',1,'p_con_var','parser.py',282),
  ('CON_VAR -> INT_CONT','CON_VAR',1,'p_con_var','parser.py',283),
  ('CON_VAR -> STRING_CONT','CON_VAR',1,'p_con_var','parser.py',284),
  ('CON_VAR -> CHAR_CONT','CON_VAR',1,'p_con_var','parser.py',285),
  ('CON_VAR -> FLOAT_CONT','CON_VAR',1,'p_con_var','parser.py',286),
  ('CON_VAR -> BOOL_CONT','CON_VAR',1,'p_con_var','parser.py',287),
  ('CON_VAR -> SOLUTION_CALL','CON_VAR',1,'p_con_var','parser.py',288),
  ('CON_VAR -> PREDEFINED_SOLS','CON_VAR',1,'p_con_var','parser.py',289),
  ('NEGATION -> N EXPRESSION','NEGATION',2,'p_negation','parser.py',296),
  ('N -> NOT','N',1,'p_n','parser.py',301),
  ('ID_REF -> ID O','ID_REF',2,'p_ID_ref','parser.py',308),
  ('O -> L_BRACK EXPRESSION R_BRACK','O',3,'p_o','parser.py',313),
  ('O -> empty','O',1,'p_o','parser.py',314),
  ('LIST_EXP -> L_BRACK EXPRESSION P R_BRACK','LIST_EXP',4,'p_list_exp','parser.py',321),
  ('P -> COMMA EXPRESSION P','P',3,'p_p','parser.py',326),
  ('P -> empty','P',1,'p_p','parser.py',327),
  ('ASSIGNATION -> ID_REF EQUALS EXPRESSION TICK','ASSIGNATION',4,'p_assignation','parser.py',334),
  ('BLOCK -> L_BRACE Q R_BRACE','BLOCK',3,'p_block','parser.py',341),
  ('Q -> STATUTE Q','Q',2,'p_q','parser.py',346),
  ('Q -> empty','Q',1,'p_q','parser.py',347),
  ('S_ASSIGNATION -> ID_REF EQUALS EXPRESSION','S_ASSIGNATION',3,'p_s_assignation','parser.py',354),
  ('WHILE -> WHILE_CYCLE EXPRESSION COLON BLOCK TICK','WHILE',5,'p_while','parser.py',361),
  ('FOR -> FOR_CYCLE S_ASSIGNATION TICK EXPRESSION TICK S_ASSIGNATION COLON BLOCK TICK','FOR',9,'p_for','parser.py',368),
  ('CYCLE -> FOR','CYCLE',1,'p_cycle','parser.py',375),
  ('CYCLE -> WHILE','CYCLE',1,'p_cycle','parser.py',376),
  ('CONDITION -> IF EXPRESSION COLON BLOCK R TICK','CONDITION',6,'p_condition','parser.py',383),
  ('R -> S','R',1,'p_r','parser.py',388),
  ('R -> T','R',1,'p_r','parser.py',389),
  ('S -> ELIF EXPRESSION COLON BLOCK U','S',5,'p_s','parser.py',394),
  ('U -> S','U',1,'p_u','parser.py',399),
  ('U -> T','U',1,'p_u','parser.py',400),
  ('U -> empty','U',1,'p_u','parser.py',401),
  ('T -> ELSE COLON BLOCK','T',3,'p_t','parser.py',406),
  ('SOLUTION_CALL -> ID L_PAREN V R_PAREN','SOLUTION_CALL',4,'p_solution_call','parser.py',413),
  ('V -> W X','V',2,'p_v','parser.py',418),
  ('W -> EXPRESSION','W',1,'p_w','parser.py',423),
  ('W -> NEGATION','W',1,'p_w','parser.py',424),
  ('X -> COMMA V','X',2,'p_x','parser.py',429),
  ('X -> empty','X',1,'p_x','parser.py',430),
  ('PARAMS -> TYPE store_type ID check_param_duplicates Y','PARAMS',5,'p_params','parser.py',437),
  ('check_param_duplicates -> <empty>','check_param_duplicates',0,'p_check_param_duplicates','parser.py',442),
  ('Y -> COMMA PARAMS','Y',2,'p_y','parser.py',455),
  ('Y -> empty','Y',1,'p_y','parser.py',456),
  ('SOL_DEFINITIONS -> Z','SOL_DEFINITIONS',1,'p_sol_definitions','parser.py',463),
  ('Z -> SOLUTION_DEF Z','Z',2,'p_z','parser.py',468),
  ('Z -> empty','Z',1,'p_z','parser.py',469),
  ('MAIN_DEFINITION -> INT MAIN_R L_PAREN R_PAREN COLON S_BLOCK TICK','MAIN_DEFINITION',7,'p_main_definition','parser.py',476),
  ('DRAW_CIRCLE -> DRAW_CIRCLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN','DRAW_CIRCLE',8,'p_draw_circle','parser.py',485),
  ('DRAW_LINE -> DRAW_LINE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN','DRAW_LINE',10,'p_draw_line','parser.py',492),
  ('DRAW_RECTANGLE -> DRAW_RECTANGLE_R L_PAREN EXPRESSION COMMA EXPRESSION COMMA EXPRESSION R_PAREN','DRAW_RECTANGLE',8,'p_draw_rectangle','parser.py',499),
  ('MOVE_UP -> MOVE_UP_R L_PAREN EXPRESSION R_PAREN','MOVE_UP',4,'p_move_up','parser.py',506),
  ('MOVE_RIGHT -> MOVE_RIGHT_R L_PAREN EXPRESSION R_PAREN','MOVE_RIGHT',4,'p_move_right','parser.py',513),
  ('MOVE_DOWN -> MOVE_DOWN_R L_PAREN EXPRESSION R_PAREN','MOVE_DOWN',4,'p_move_down','parser.py',520),
  ('MOVE_LEFT -> MOVE_LEFT_R L_PAREN EXPRESSION R_PAREN','MOVE_LEFT',4,'p_move_left','parser.py',527),
  ('PRINT -> PRINT_R L_PAREN EXPRESSION R_PAREN','PRINT',4,'p_print','parser.py',534),
  ('PREDEFINED_SOLS -> DRAW_LINE','PREDEFINED_SOLS',1,'p_predefined_sols','parser.py',541),
  ('PREDEFINED_SOLS -> DRAW_CIRCLE','PREDEFINED_SOLS',1,'p_predefined_sols','parser.py',542),
  ('PREDEFINED_SOLS -> DRAW_RECTANGLE','PREDEFINED_SOLS',1,'p_predefined_sols','parser.py',543),
  ('PREDEFINED_SOLS -> MOVE_UP','PREDEFINED_SOLS',1,'p_predefined_sols','parser.py',544),
  ('PREDEFINED_SOLS -> MOVE_RIGHT','PREDEFINED_SOLS',1,'p_predefined_sols','parser.py',545),
  ('PREDEFINED_SOLS -> MOVE_DOWN','PREDEFINED_SOLS',1,'p_predefined_sols','parser.py',546),
  ('PREDEFINED_SOLS -> MOVE_LEFT','PREDEFINED_SOLS',1,'p_predefined_sols','parser.py',547),
  ('PREDEFINED_SOLS -> PRINT','PREDEFINED_SOLS',1,'p_predefined_sols','parser.py',548),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',555),
]
